DC-Build-Header: lilypond 2.22.1-2 / 2021-10-26 18:31:53 +0000
DC-Task: type:rebuild-binarch-only source:lilypond version:2.22.1-2 chroot:unstable esttime:6798 logfile:/tmp/lilypond_2.22.1-2_unstable_clang12.log modes:clang12:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang12 lilypond_2.22.1-2'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-4-235.eu-central-1.compute.internal

+==============================================================================+
| lilypond 2.22.1-2 (amd64)                    Tue, 26 Oct 2021 18:31:53 +0000 |
+==============================================================================+

Package: lilypond
Version: 2.22.1-2
Source Version: 2.22.1-2
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-f322cd83-f060-47ed-a5b5-a3c9f98a9b89' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang12
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=12
+ echo 'Install of clang-12'
Install of clang-12
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-1401.46-F-2021-10-26-0202.15.pdiff [34.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-1401.46-F-2021-10-26-0202.15.pdiff [34.5 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-1401.46-F-2021-10-26-0202.15.pdiff [38.7 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-1401.46-F-2021-10-26-0202.15.pdiff [38.7 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6585 kB]
Fetched 6951 kB in 3s (2755 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-12 libomp-12-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-12-dev
  libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1 libgcc-9-dev libicu67
  libllvm12 libmd0 libobjc-11-dev libobjc4 libomp5-12 libunwind-12 libxml2
  libz3-4 llvm-12-linker-tools
Suggested packages:
  clang-12-doc libomp-12-doc
Recommended packages:
  llvm-12-dev python3
The following NEW packages will be installed:
  clang-12 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-12-dev libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1
  libgcc-9-dev libicu67 libllvm12 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-12-dev libomp5-12 libunwind-12 libxml2 libz3-4 llvm-12-linker-tools
0 upgraded, 25 newly installed, 0 to remove and 0 not upgraded.
Need to get 67.6 MB of archives.
After this operation, 349 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm12 amd64 1:12.0.1-15 [19.4 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp12 amd64 1:12.0.1-15 [9996 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-12-dev amd64 1:12.0.1-15 [4819 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 llvm-12-linker-tools amd64 1:12.0.1-15 [1222 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang1-12 amd64 1:12.0.1-15 [5644 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-12 amd64 1:12.0.1-15 [117 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libunwind-12 amd64 1:12.0.1-15 [63.9 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libomp5-12 amd64 1:12.0.1-15 [405 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libomp-12-dev amd64 1:12.0.1-15 [104 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 67.6 MB in 0s (151 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm12:amd64.
Preparing to unpack .../06-libllvm12_1%3a12.0.1-15_amd64.deb ...
Unpacking libllvm12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libclang-cpp12.
Preparing to unpack .../07-libclang-cpp12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-cpp12 (1:12.0.1-15) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-12-dev.
Preparing to unpack .../14-libclang-common-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-common-12-dev (1:12.0.1-15) ...
Selecting previously unselected package llvm-12-linker-tools.
Preparing to unpack .../15-llvm-12-linker-tools_1%3a12.0.1-15_amd64.deb ...
Unpacking llvm-12-linker-tools (1:12.0.1-15) ...
Selecting previously unselected package libclang1-12.
Preparing to unpack .../16-libclang1-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang1-12 (1:12.0.1-15) ...
Selecting previously unselected package clang-12.
Preparing to unpack .../17-clang-12_1%3a12.0.1-15_amd64.deb ...
Unpacking clang-12 (1:12.0.1-15) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../18-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../19-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../20-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../21-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libunwind-12:amd64.
Preparing to unpack .../22-libunwind-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libunwind-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp5-12:amd64.
Preparing to unpack .../23-libomp5-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp5-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp-12-dev.
Preparing to unpack .../24-libomp-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp-12-dev (1:12.0.1-15) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libunwind-12:amd64 (1:12.0.1-15) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm12:amd64 (1:12.0.1-15) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-12-dev (1:12.0.1-15) ...
Setting up libomp5-12:amd64 (1:12.0.1-15) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up llvm-12-linker-tools (1:12.0.1-15) ...
Setting up libclang1-12 (1:12.0.1-15) ...
Setting up libclang-cpp12 (1:12.0.1-15) ...
Setting up libomp-12-dev (1:12.0.1-15) ...
Setting up clang-12 (1:12.0.1-15) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-12 g++-4.6
+ ln -s clang-12 gcc-4.6
+ ln -s clang-12 cpp-4.6
+ ln -s clang-12 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-12 g++-4.7
+ ln -s clang-12 gcc-4.7
+ ln -s clang-12 cpp-4.7
+ ln -s clang-12 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-12 g++-4.8
+ ln -s clang-12 gcc-4.8
+ ln -s clang-12 cpp-4.8
+ ln -s clang-12 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-12 g++-4.9
+ ln -s clang-12 gcc-4.9
+ ln -s clang-12 cpp-4.9
+ ln -s clang-12 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-12 g++-5
+ ln -s clang-12 gcc-5
+ ln -s clang-12 cpp-5
+ ln -s clang-12 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-12 g++-6
+ ln -s clang-12 gcc-6
+ ln -s clang-12 cpp-6
+ ln -s clang-12 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-12 g++-7
+ ln -s clang-12 gcc-7
+ ln -s clang-12 cpp-7
+ ln -s clang-12 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-12 g++-8
+ ln -s clang-12 gcc-8
+ ln -s clang-12 cpp-8
+ ln -s clang-12 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-12 g++-9
+ ln -s clang-12 gcc-9
+ ln -s clang-12 cpp-9
+ ln -s clang-12 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-12 g++-10
+ ln -s clang-12 gcc-10
+ ln -s clang-12 cpp-10
+ ln -s clang-12 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-12 g++-11
+ ln -s clang-12 gcc-11
+ ln -s clang-12 cpp-11
+ ln -s clang-12 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/lilypond-XnkHts
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-12 clang++
+ ln -s clang-12 clang
+ clang++ --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/lilypond-XnkHts
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (20.4 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13527 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 18:32 .
drwxr-xr-x 76 root root 4096 Oct 26 18:32 ..
-rw-r--r--  1 root root  276 Oct 26 18:32 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 18:32 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang12'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/lilypond-XnkHts/resolver-yZ2Xbd' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'lilypond' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/debian/lilypond.git
Please use:
git clone https://salsa.debian.org/debian/lilypond.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 20.6 MB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main lilypond 2.22.1-2 (dsc) [4500 B]
Get:2 http://127.0.0.1:12990/debian sid/main lilypond 2.22.1-2 (tar) [2510 kB]
Get:3 http://127.0.0.1:12990/debian sid/main lilypond 2.22.1-2 (tar) [18.0 MB]
Get:4 http://127.0.0.1:12990/debian sid/main lilypond 2.22.1-2 (diff) [80.6 kB]
Fetched 20.6 MB in 0s (103 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/lilypond-XnkHts/lilypond-2.22.1' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/lilypond-XnkHts' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: autoconf, automake, bison, dblatex, debhelper-compat (= 13), dh-exec, dh-python, extractpdfmark, flex, fontconfig, fontforge, fonts-freefont-otf, fonts-ipafont-mincho, fonts-linuxlibertine, fonts-texgyre, fonts-urw-base35, gettext, ghostscript, groff, gsfonts, help2man, imagemagick-6.q16, libfl-dev, libfontconfig1-dev, libfreetype6-dev, libgmp-dev, libltdl-dev, libncurses5-dev, libpango1.0-dev, libreadline6-dev, libtool, m4, mftrace, netpbm, pkg-config, python3, rsync, texi2html, texinfo, texlive-fonts-recommended, texlive-lang-cyrillic, texlive-latex-base, texlive-latex-recommended, texlive-metapost, texlive-plain-generic, zip, build-essential, fakeroot
Merged Build-Conflicts: fonts-noto-cjk
Filtered Build-Depends: autoconf, automake, bison, dblatex, debhelper-compat (= 13), dh-exec, dh-python, extractpdfmark, flex, fontconfig, fontforge, fonts-freefont-otf, fonts-ipafont-mincho, fonts-linuxlibertine, fonts-texgyre, fonts-urw-base35, gettext, ghostscript, groff, gsfonts, help2man, imagemagick-6.q16, libfl-dev, libfontconfig1-dev, libfreetype6-dev, libgmp-dev, libltdl-dev, libncurses5-dev, libpango1.0-dev, libreadline6-dev, libtool, m4, mftrace, netpbm, pkg-config, python3, rsync, texi2html, texinfo, texlive-fonts-recommended, texlive-lang-cyrillic, texlive-latex-base, texlive-latex-recommended, texlive-metapost, texlive-plain-generic, zip, build-essential, fakeroot
Filtered Build-Conflicts: fonts-noto-cjk
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [963 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [696 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [755 B]
Fetched 2414 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  adwaita-icon-theme autoconf automake autopoint autotools-dev bison
  bsdextrautils dblatex dbus dbus-bin dbus-daemon dbus-session-bus-common
  dbus-system-bus-common dbus-user-session dconf-gsettings-backend
  dconf-service debhelper dh-autoreconf dh-exec dh-python
  dh-strip-nondeterminism distro-info-data dmsetup docbook-xml dwz
  extractpdfmark file flex fontconfig fontconfig-config fontforge
  fontforge-common fonts-dejavu-core fonts-freefont-otf fonts-gfs-baskerville
  fonts-gfs-porson fonts-ipafont-mincho fonts-linuxlibertine fonts-lmodern
  fonts-texgyre fonts-urw-base35 gettext gettext-base ghostscript
  gir1.2-freedesktop gir1.2-glib-2.0 gir1.2-harfbuzz-0.0 gir1.2-pango-1.0
  groff groff-base gsfonts gtk-update-icon-cache help2man hicolor-icon-theme
  icu-devtools imagemagick-6-common imagemagick-6.q16 intltool-debian libaom0
  libapache-pom-java libapparmor1 libarchive-zip-perl libargon2-1
  libatk-bridge2.0-0 libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3
  libavahi-common-data libavahi-common3 libblkid-dev libbrotli-dev libbrotli1
  libcairo-gobject2 libcairo-script-interpreter2 libcairo2 libcairo2-dev
  libcolord2 libcommons-logging-java libcommons-parent-java libcryptsetup12
  libcups2 libdatrie-dev libdatrie1 libdav1d5 libdbus-1-3 libdconf1 libde265-0
  libdebhelper-perl libdeflate0 libdevmapper1.02.1 libepoxy0 libexpat1
  libexpat1-dev libffi-dev libfftw3-double3 libfile-stripnondeterminism-perl
  libfl-dev libfl2 libfontbox-java libfontconfig-dev libfontconfig1
  libfontconfig1-dev libfontenc1 libfontforge4 libfreetype-dev libfreetype6
  libfreetype6-dev libfribidi-dev libfribidi0 libgdk-pixbuf-2.0-0
  libgdk-pixbuf2.0-common libgif7 libgirepository-1.0-1 libglib2.0-0
  libglib2.0-bin libglib2.0-data libglib2.0-dev libglib2.0-dev-bin libgmp-dev
  libgmpxx4ldbl libgraphite2-3 libgraphite2-dev libgs9 libgs9-common
  libgtk-3-0 libgtk-3-common libharfbuzz-dev libharfbuzz-gobject0
  libharfbuzz-icu0 libharfbuzz0b libheif1 libice-dev libice6 libicu-dev
  libidn12 libijs-0.35 libip4tc2 libjbig0 libjbig2dec0 libjpeg62-turbo
  libjs-jquery libjson-c5 libkmod2 libkpathsea6 liblcms2-2
  liblocale-gettext-perl liblqr-1-0 libltdl-dev libltdl7 liblzo2-2
  libmagic-mgc libmagic1 libmagickcore-6.q16-6 libmagickwand-6.q16-6
  libmime-charset-perl libmount-dev libmpdec3 libncurses-dev libncurses5-dev
  libncurses6 libncursesw6 libnetpbm10 libnspr4 libnss3 libnuma1 libopenjp2-7
  libpam-systemd libpango-1.0-0 libpango1.0-dev libpangocairo-1.0-0
  libpangoft2-1.0-0 libpangoxft-1.0-0 libpaper-utils libpaper1 libpcre16-3
  libpcre2-16-0 libpcre2-32-0 libpcre2-dev libpcre2-posix2 libpcre3-dev
  libpcre32-3 libpcrecpp0v5 libpdfbox-java libpipeline1 libpixman-1-0
  libpixman-1-dev libpng-dev libpng16-16 libpoppler102 libpopt0 libpotrace0
  libptexenc1 libpthread-stubs0-dev libpython3-stdlib libpython3.9
  libpython3.9-minimal libpython3.9-stdlib libreadline-dev libreadline8
  libselinux1-dev libsepol1-dev libsigsegv2 libsm-dev libsm6 libsombok3
  libspiro1 libsqlite3-0 libsub-override-perl libsynctex2 libteckit0
  libtexlua53 libtexluajit2 libtext-unidecode-perl libthai-data libthai-dev
  libthai0 libtiff5 libtool libuchardet0 libunicode-linebreak-perl
  libuninameslist1 libwayland-client0 libwayland-cursor0 libwayland-egl1
  libwebp6 libwebpdemux2 libwebpmux3 libwoff1 libx11-6 libx11-data libx11-dev
  libx265-199 libxau-dev libxau6 libxaw7 libxcb-render0 libxcb-render0-dev
  libxcb-shm0 libxcb-shm0-dev libxcb1 libxcb1-dev libxcomposite1 libxcursor1
  libxdamage1 libxdmcp-dev libxdmcp6 libxext-dev libxext6 libxfixes3
  libxft-dev libxft2 libxi6 libxinerama1 libxkbcommon0 libxml-libxml-perl
  libxml-namespacesupport-perl libxml-sax-base-perl libxml-sax-perl libxmu6
  libxpm4 libxrandr2 libxrender-dev libxrender1 libxslt1.1 libxt6 libzzip-0-13
  lmodern m4 man-db media-types mftrace netpbm pango1.0-tools pkg-config
  po-debconf poppler-data potrace preview-latex-style python-apt-common
  python3 python3-apt python3-distutils python3-lib2to3 python3-minimal
  python3.9 python3.9-minimal readline-common rsync sensible-utils sgml-base
  sgml-data shared-mime-info systemd systemd-sysv t1utils tex-common texi2html
  texinfo texlive texlive-base texlive-bibtex-extra texlive-binaries
  texlive-extra-utils texlive-fonts-recommended texlive-lang-cyrillic
  texlive-lang-greek texlive-latex-base texlive-latex-extra
  texlive-latex-recommended texlive-luatex texlive-metapost texlive-pictures
  texlive-plain-generic texlive-science ucf uuid-dev x11-common x11proto-dev
  xdg-utils xfonts-encodings xfonts-utils xkb-data xml-core xorg-sgml-doctools
  xsltproc xtrans-dev zip zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc bison-doc docbook inkscape
  latex-cjk-all opensp pdf-viewer texlive-lang-all texlive-xetex transfig
  xindy dh-make flit python3-toml docbook-dsssl docbook-xsl docbook-defguide
  flex-doc fontforge-doc fontforge-extras python3-fontforge gettext-doc
  libasprintf-dev libgettextpo-dev ghostscript-x imagemagick-doc autotrace
  cups-bsd | lpr | lprng curl enscript ffmpeg gimp gnuplot grads graphviz
  hp2xx html2ps libwmf-bin mplayer povray radiance sane-utils ufraw-batch
  libcairo2-doc colord libavalon-framework-java libcommons-logging-java-doc
  libexcalibur-logkit-java liblog4j1.2-java cups-common libdatrie-doc
  libfftw3-bin libfftw3-dev freetype2-doc libgirepository1.0-dev
  libglib2.0-doc libgdk-pixbuf2.0-bin | libgdk-pixbuf2.0-dev libxml2-utils
  gmp-doc libgmp10-doc libmpfr-dev libgraphite2-utils gvfs libice-doc icu-doc
  liblcms2-utils libtool-doc libmagickcore-6.q16-6-extra
  libencode-hanextra-perl libpod2-base-perl ncurses-doc libpango1.0-doc
  readline-doc libsm-doc libthai-doc gfortran | fortran95-compiler gcj-jdk
  libx11-doc libxcb-doc libxext-doc m4-doc apparmor less www-browser
  graphicsmagick libmail-box-perl poppler-utils fonts-japanese-gothic
  | fonts-ipafont-gothic fonts-arphic-ukai fonts-arphic-uming fonts-nanum
  python3-doc python3-tk python3-venv python3-apt-dbg python-apt-doc
  python3.9-venv python3.9-doc binfmt-support openssh-client openssh-server
  sgml-base-doc perlsgml w3-recs systemd-container policykit-1 latex2html
  perl-tk xpdf | pdf-viewer xzdec chktex default-jre-headless dvidvi dvipng
  fragmaster lacheck latexdiff latexmk purifyeps texlive-fonts-recommended-doc
  texlive-latex-base-doc python3-pygments icc-profiles libfile-which-perl
  libspreadsheet-parseexcel-perl texlive-latex-extra-doc
  texlive-latex-recommended-doc texlive-pstricks texlive-metapost-doc dot2tex
  prerex ruby-tcltk | libtcltk-ruby texlive-pictures-doc vprerex
  texlive-science-doc
Recommended packages:
  librsvg2-common libxml2-utils dblatex-doc fonts-cantarell fonts-inconsolata
  fonts-ipafont-gothic curl | wget | lynx psutils libmagickcore-6.q16-6-extra
  at-spi2-core libarchive-cpio-perl libgdk-pixbuf2.0-bin xdg-user-dirs
  fonts-droid-fallback libgtk-3-bin javascript-common libgpm2 libpng-tools
  ca-certificates libwww-perl libxml-sax-expat-perl libmail-sendmail-perl
  lsb-release iso-codes systemd-timesyncd | time-daemon libnss-systemd dvisvgm
  libfile-homedir-perl liblog-log4perl-perl libyaml-tiny-perl ruby tex-gyre
  tipa feynmf tk libfile-mimeinfo-perl libnet-dbus-perl libx11-protocol-perl
  x11-utils x11-xserver-utils unzip
The following NEW packages will be installed:
  adwaita-icon-theme autoconf automake autopoint autotools-dev bison
  bsdextrautils dblatex dbus dbus-bin dbus-daemon dbus-session-bus-common
  dbus-system-bus-common dbus-user-session dconf-gsettings-backend
  dconf-service debhelper dh-autoreconf dh-exec dh-python
  dh-strip-nondeterminism distro-info-data dmsetup docbook-xml dwz
  extractpdfmark file flex fontconfig fontconfig-config fontforge
  fontforge-common fonts-dejavu-core fonts-freefont-otf fonts-gfs-baskerville
  fonts-gfs-porson fonts-ipafont-mincho fonts-linuxlibertine fonts-lmodern
  fonts-texgyre fonts-urw-base35 gettext gettext-base ghostscript
  gir1.2-freedesktop gir1.2-glib-2.0 gir1.2-harfbuzz-0.0 gir1.2-pango-1.0
  groff groff-base gsfonts gtk-update-icon-cache help2man hicolor-icon-theme
  icu-devtools imagemagick-6-common imagemagick-6.q16 intltool-debian libaom0
  libapache-pom-java libapparmor1 libarchive-zip-perl libargon2-1
  libatk-bridge2.0-0 libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3
  libavahi-common-data libavahi-common3 libblkid-dev libbrotli-dev libbrotli1
  libcairo-gobject2 libcairo-script-interpreter2 libcairo2 libcairo2-dev
  libcolord2 libcommons-logging-java libcommons-parent-java libcryptsetup12
  libcups2 libdatrie-dev libdatrie1 libdav1d5 libdbus-1-3 libdconf1 libde265-0
  libdebhelper-perl libdeflate0 libdevmapper1.02.1 libepoxy0 libexpat1
  libexpat1-dev libffi-dev libfftw3-double3 libfile-stripnondeterminism-perl
  libfl-dev libfl2 libfontbox-java libfontconfig-dev libfontconfig1
  libfontconfig1-dev libfontenc1 libfontforge4 libfreetype-dev libfreetype6
  libfreetype6-dev libfribidi-dev libfribidi0 libgdk-pixbuf-2.0-0
  libgdk-pixbuf2.0-common libgif7 libgirepository-1.0-1 libglib2.0-0
  libglib2.0-bin libglib2.0-data libglib2.0-dev libglib2.0-dev-bin libgmp-dev
  libgmpxx4ldbl libgraphite2-3 libgraphite2-dev libgs9 libgs9-common
  libgtk-3-0 libgtk-3-common libharfbuzz-dev libharfbuzz-gobject0
  libharfbuzz-icu0 libharfbuzz0b libheif1 libice-dev libice6 libicu-dev
  libidn12 libijs-0.35 libip4tc2 libjbig0 libjbig2dec0 libjpeg62-turbo
  libjs-jquery libjson-c5 libkmod2 libkpathsea6 liblcms2-2
  liblocale-gettext-perl liblqr-1-0 libltdl-dev libltdl7 liblzo2-2
  libmagic-mgc libmagic1 libmagickcore-6.q16-6 libmagickwand-6.q16-6
  libmime-charset-perl libmount-dev libmpdec3 libncurses-dev libncurses5-dev
  libncurses6 libncursesw6 libnetpbm10 libnspr4 libnss3 libnuma1 libopenjp2-7
  libpam-systemd libpango-1.0-0 libpango1.0-dev libpangocairo-1.0-0
  libpangoft2-1.0-0 libpangoxft-1.0-0 libpaper-utils libpaper1 libpcre16-3
  libpcre2-16-0 libpcre2-32-0 libpcre2-dev libpcre2-posix2 libpcre3-dev
  libpcre32-3 libpcrecpp0v5 libpdfbox-java libpipeline1 libpixman-1-0
  libpixman-1-dev libpng-dev libpng16-16 libpoppler102 libpopt0 libpotrace0
  libptexenc1 libpthread-stubs0-dev libpython3-stdlib libpython3.9
  libpython3.9-minimal libpython3.9-stdlib libreadline-dev libreadline8
  libselinux1-dev libsepol1-dev libsigsegv2 libsm-dev libsm6 libsombok3
  libspiro1 libsqlite3-0 libsub-override-perl libsynctex2 libteckit0
  libtexlua53 libtexluajit2 libtext-unidecode-perl libthai-data libthai-dev
  libthai0 libtiff5 libtool libuchardet0 libunicode-linebreak-perl
  libuninameslist1 libwayland-client0 libwayland-cursor0 libwayland-egl1
  libwebp6 libwebpdemux2 libwebpmux3 libwoff1 libx11-6 libx11-data libx11-dev
  libx265-199 libxau-dev libxau6 libxaw7 libxcb-render0 libxcb-render0-dev
  libxcb-shm0 libxcb-shm0-dev libxcb1 libxcb1-dev libxcomposite1 libxcursor1
  libxdamage1 libxdmcp-dev libxdmcp6 libxext-dev libxext6 libxfixes3
  libxft-dev libxft2 libxi6 libxinerama1 libxkbcommon0 libxml-libxml-perl
  libxml-namespacesupport-perl libxml-sax-base-perl libxml-sax-perl libxmu6
  libxpm4 libxrandr2 libxrender-dev libxrender1 libxslt1.1 libxt6 libzzip-0-13
  lmodern m4 man-db media-types mftrace netpbm pango1.0-tools pkg-config
  po-debconf poppler-data potrace preview-latex-style python-apt-common
  python3 python3-apt python3-distutils python3-lib2to3 python3-minimal
  python3.9 python3.9-minimal readline-common rsync
  sbuild-build-depends-main-dummy sensible-utils sgml-base sgml-data
  shared-mime-info systemd systemd-sysv t1utils tex-common texi2html texinfo
  texlive texlive-base texlive-bibtex-extra texlive-binaries
  texlive-extra-utils texlive-fonts-recommended texlive-lang-cyrillic
  texlive-lang-greek texlive-latex-base texlive-latex-extra
  texlive-latex-recommended texlive-luatex texlive-metapost texlive-pictures
  texlive-plain-generic texlive-science ucf uuid-dev x11-common x11proto-dev
  xdg-utils xfonts-encodings xfonts-utils xkb-data xml-core xorg-sgml-doctools
  xsltproc xtrans-dev zip zlib1g-dev
0 upgraded, 330 newly installed, 0 to remove and 0 not upgraded.
Need to get 510 MB of archives.
After this operation, 1302 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [1192 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libapparmor1 amd64 3.0.3-5 [103 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libargon2-1 amd64 0~20171227-0.2 [19.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 dmsetup amd64 2:1.02.175-2.1 [92.1 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libdevmapper1.02.1 amd64 2:1.02.175-2.1 [143 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libjson-c5 amd64 0.15-2 [42.8 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libcryptsetup12 amd64 2:2.4.1-1 [240 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libip4tc2 amd64 1.8.7-1 [34.6 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libkmod2 amd64 29-1 [56.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 systemd amd64 249.5-1 [4446 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 systemd-sysv amd64 249.5-1 [116 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libdbus-1-3 amd64 1.12.20-3 [219 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 dbus-bin amd64 1.12.20-3 [124 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 dbus-session-bus-common all 1.12.20-3 [97.3 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.4.1-3 [104 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 dbus-daemon amd64 1.12.20-3 [201 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 dbus-system-bus-common all 1.12.20-3 [98.4 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 dbus amd64 1.12.20-3 [116 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 flex amd64 2.6.4-8 [440 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 fonts-ipafont-mincho all 00303-23 [4726 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 liblocale-gettext-perl amd64 1.07-4+b1 [19.0 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-double3 amd64 3.3.8-2 [733 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libbrotli1 amd64 1.0.9-2+b2 [279 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 libpng16-16 amd64 1.6.37-3 [294 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 libfreetype6 amd64 2.11.0+dfsg-1 [453 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 ucf all 3.0043 [74.0 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 fonts-dejavu-core all 2.37-2 [1069 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 fonts-freefont-otf all 20120503-10 [3171 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 fonts-urw-base35 all 20200910-1 [6367 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 fonts-texgyre all 20180621-3.1 [10.2 MB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 fontconfig-config all 2.13.1-4.2 [281 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 libfontconfig1 amd64 2.13.1-4.2 [347 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 libaom0 amd64 1.0.0.errata1.avif-1 [1544 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 libdav1d5 amd64 0.9.2-1+b1 [419 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libde265-0 amd64 1.0.8-1 [242 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libnuma1 amd64 2.0.14-3 [24.4 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libx265-199 amd64 3.5-2 [1090 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 libheif1 amd64 1.12.0-2+b2 [194 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libjbig0 amd64 2.1-3.1+b2 [31.0 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 libjpeg62-turbo amd64 1:2.0.6-4 [151 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 liblcms2-2 amd64 2.12~rc1-2 [150 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.70.0-3 [1401 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 liblqr-1-0 amd64 0.4.2-2.1 [29.1 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 libltdl7 amd64 2.4.6-15 [391 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 libopenjp2-7 amd64 2.4.0-3 [172 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 libdeflate0 amd64 1.8-1 [53.1 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 libwebp6 amd64 0.6.1-2.1 [258 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 libtiff5 amd64 4.3.0-2 [294 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 libwebpdemux2 amd64 0.6.1-2.1 [87.7 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 libwebpmux3 amd64 0.6.1-2.1 [97.6 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 libxau6 amd64 1:1.0.9-1 [19.7 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libxdmcp6 amd64 1:1.1.2-3 [26.3 kB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libxcb1 amd64 1.14-3 [140 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libx11-data all 2:1.7.2-2 [311 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libx11-6 amd64 2:1.7.2-2+b1 [772 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libxext6 amd64 2:1.3.4-1 [53.1 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 imagemagick-6-common all 8:6.9.11.60+dfsg-1.3 [211 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libmagickcore-6.q16-6 amd64 8:6.9.11.60+dfsg-1.3 [1814 kB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 libmagickwand-6.q16-6 amd64 8:6.9.11.60+dfsg-1.3 [452 kB]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 poppler-data all 0.4.11-1 [1608 kB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9-minimal amd64 3.9.7-4 [804 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 python3.9-minimal amd64 3.9.7-4 [1963 kB]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.9.2-3 [38.2 kB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 media-types all 4.0.0 [30.3 kB]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 libmpdec3 amd64 2.5.1-2 [87.8 kB]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 libncursesw6 amd64 6.2+20210905-1 [133 kB]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.1-2 [73.8 kB]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.1-2 [168 kB]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.36.0-2 [815 kB]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9-stdlib amd64 3.9.7-4 [1688 kB]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 python3.9 amd64 3.9.7-4 [480 kB]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.9.2-3 [21.4 kB]
Get:81 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.9.2-3 [37.9 kB]
Get:82 http://127.0.0.1:12990/debian sid/main amd64 libpopt0 amd64 1.18-3 [49.7 kB]
Get:83 http://127.0.0.1:12990/debian sid/main amd64 rsync amd64 3.2.3-8 [396 kB]
Get:84 http://127.0.0.1:12990/debian sid/main amd64 sgml-base all 1.30 [15.1 kB]
Get:85 http://127.0.0.1:12990/debian sid/main amd64 tex-common all 6.17 [53.6 kB]
Get:86 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:87 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:88 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:89 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:90 http://127.0.0.1:12990/debian sid/main amd64 libpam-systemd amd64 249.5-1 [292 kB]
Get:91 http://127.0.0.1:12990/debian sid/main amd64 hicolor-icon-theme all 0.17-2 [11.4 kB]
Get:92 http://127.0.0.1:12990/debian sid/main amd64 libgdk-pixbuf2.0-common all 2.42.6+dfsg-2 [327 kB]
Get:93 http://127.0.0.1:12990/debian sid/main amd64 shared-mime-info amd64 2.0-1 [701 kB]
Get:94 http://127.0.0.1:12990/debian sid/main amd64 libgdk-pixbuf-2.0-0 amd64 2.42.6+dfsg-2 [156 kB]
Get:95 http://127.0.0.1:12990/debian sid/main amd64 gtk-update-icon-cache amd64 3.24.30-3 [89.1 kB]
Get:96 http://127.0.0.1:12990/debian sid/main amd64 adwaita-icon-theme all 41.0-1 [10.8 MB]
Get:97 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:98 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:99 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:100 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:101 http://127.0.0.1:12990/debian sid/main amd64 bison amd64 2:3.8.2+dfsg-1 [1173 kB]
Get:102 http://127.0.0.1:12990/debian sid/main amd64 xml-core all 0.18+nmu1 [23.8 kB]
Get:103 http://127.0.0.1:12990/debian sid/main amd64 sgml-data all 2.0.11+nmu1 [179 kB]
Get:104 http://127.0.0.1:12990/debian sid/main amd64 docbook-xml all 4.5-11 [85.0 kB]
Get:105 http://127.0.0.1:12990/debian sid/main amd64 python-apt-common all 2.3.0 [96.6 kB]
Get:106 http://127.0.0.1:12990/debian sid/main amd64 distro-info-data all 0.52 [7596 B]
Get:107 http://127.0.0.1:12990/debian sid/main amd64 python3-apt amd64 2.3.0 [190 kB]
Get:108 http://127.0.0.1:12990/debian sid/main amd64 libpaper1 amd64 1.1.28+b1 [21.6 kB]
Get:109 http://127.0.0.1:12990/debian sid/main amd64 libpaper-utils amd64 1.1.28+b1 [18.3 kB]
Get:110 http://127.0.0.1:12990/debian sid/main amd64 libkpathsea6 amd64 2021.20210626.59705-1 [173 kB]
Get:111 http://127.0.0.1:12990/debian sid/main amd64 libptexenc1 amd64 2021.20210626.59705-1 [65.1 kB]
Get:112 http://127.0.0.1:12990/debian sid/main amd64 libsynctex2 amd64 2021.20210626.59705-1 [80.5 kB]
Get:113 http://127.0.0.1:12990/debian sid/main amd64 libtexlua53 amd64 2021.20210626.59705-1 [132 kB]
Get:114 http://127.0.0.1:12990/debian sid/main amd64 libtexluajit2 amd64 2021.20210626.59705-1 [267 kB]
Get:115 http://127.0.0.1:12990/debian sid/main amd64 t1utils amd64 1.41-4 [62.1 kB]
Get:116 http://127.0.0.1:12990/debian sid/main amd64 libpixman-1-0 amd64 0.40.0-1 [543 kB]
Get:117 http://127.0.0.1:12990/debian sid/main amd64 libxcb-render0 amd64 1.14-3 [111 kB]
Get:118 http://127.0.0.1:12990/debian sid/main amd64 libxcb-shm0 amd64 1.14-3 [101 kB]
Get:119 http://127.0.0.1:12990/debian sid/main amd64 libxrender1 amd64 1:0.9.10-1 [33.0 kB]
Get:120 http://127.0.0.1:12990/debian sid/main amd64 libcairo2 amd64 1.16.0-5 [694 kB]
Get:121 http://127.0.0.1:12990/debian sid/main amd64 libgraphite2-3 amd64 1.3.14-1 [81.2 kB]
Get:122 http://127.0.0.1:12990/debian sid/main amd64 libharfbuzz0b amd64 2.7.4-1 [1471 kB]
Get:123 http://127.0.0.1:12990/debian sid/main amd64 libteckit0 amd64 2.5.10+ds1-3 [329 kB]
Get:124 http://127.0.0.1:12990/debian sid/main amd64 x11-common all 1:7.7+23 [252 kB]
Get:125 http://127.0.0.1:12990/debian sid/main amd64 libice6 amd64 2:1.0.10-1 [58.5 kB]
Get:126 http://127.0.0.1:12990/debian sid/main amd64 libsm6 amd64 2:1.2.3-1 [35.1 kB]
Get:127 http://127.0.0.1:12990/debian sid/main amd64 libxt6 amd64 1:1.2.0-1 [189 kB]
Get:128 http://127.0.0.1:12990/debian sid/main amd64 libxmu6 amd64 2:1.1.2-2+b3 [60.8 kB]
Get:129 http://127.0.0.1:12990/debian sid/main amd64 libxpm4 amd64 1:3.5.12-1 [49.1 kB]
Get:130 http://127.0.0.1:12990/debian sid/main amd64 libxaw7 amd64 2:1.0.13-1.1 [202 kB]
Get:131 http://127.0.0.1:12990/debian sid/main amd64 libxi6 amd64 2:1.8-1 [84.0 kB]
Get:132 http://127.0.0.1:12990/debian sid/main amd64 libzzip-0-13 amd64 0.13.72+dfsg.1-1.1 [58.3 kB]
Get:133 http://127.0.0.1:12990/debian sid/main amd64 texlive-binaries amd64 2021.20210626.59705-1 [10.1 MB]
Get:134 http://127.0.0.1:12990/debian sid/main amd64 xdg-utils all 1.1.3-4.1 [75.5 kB]
Get:135 http://127.0.0.1:12990/debian sid/main amd64 texlive-base all 2021.20210921-1 [21.1 MB]
Get:136 http://127.0.0.1:12990/debian sid/main amd64 texlive-fonts-recommended all 2021.20210921-1 [5004 kB]
Get:137 http://127.0.0.1:12990/debian sid/main amd64 fonts-lmodern all 2.004.5-6.1 [4540 kB]
Get:138 http://127.0.0.1:12990/debian sid/main amd64 texlive-latex-base all 2021.20210921-1 [1150 kB]
Get:139 http://127.0.0.1:12990/debian sid/main amd64 texlive-latex-recommended all 2021.20210921-1 [14.4 MB]
Get:140 http://127.0.0.1:12990/debian sid/main amd64 texlive all 2021.20210921-1 [34.2 kB]
Get:141 http://127.0.0.1:12990/debian sid/main amd64 texlive-bibtex-extra all 2021.20210921-1 [64.0 MB]
Get:142 http://127.0.0.1:12990/debian sid/main amd64 libthai-data all 0.1.28-4.1 [171 kB]
Get:143 http://127.0.0.1:12990/debian sid/main amd64 libdatrie1 amd64 0.2.13-2 [43.0 kB]
Get:144 http://127.0.0.1:12990/debian sid/main amd64 libthai0 amd64 0.1.28-4.1 [54.5 kB]
Get:145 http://127.0.0.1:12990/debian sid/main amd64 libsombok3 amd64 2.4.0-2+b1 [31.4 kB]
Get:146 http://127.0.0.1:12990/debian sid/main amd64 libmime-charset-perl all 1.012.2-1 [35.4 kB]
Get:147 http://127.0.0.1:12990/debian sid/main amd64 libunicode-linebreak-perl amd64 0.0.20190101-1+b3 [102 kB]
Get:148 http://127.0.0.1:12990/debian sid/main amd64 libjs-jquery all 3.5.1+dfsg+~3.5.5-8 [315 kB]
Get:149 http://127.0.0.1:12990/debian sid/main amd64 libfontenc1 amd64 1:1.1.4-1 [24.3 kB]
Get:150 http://127.0.0.1:12990/debian sid/main amd64 xfonts-encodings all 1:1.0.4-2.1 [573 kB]
Get:151 http://127.0.0.1:12990/debian sid/main amd64 xfonts-utils amd64 1:7.7+6 [93.0 kB]
Get:152 http://127.0.0.1:12990/debian sid/main amd64 lmodern all 2.004.5-6.1 [9489 kB]
Get:153 http://127.0.0.1:12990/debian sid/main amd64 texlive-luatex all 2021.20210921-1 [16.7 MB]
Get:154 http://127.0.0.1:12990/debian sid/main amd64 texlive-plain-generic all 2021.20210921-1 [27.4 MB]
Get:155 http://127.0.0.1:12990/debian sid/main amd64 texlive-extra-utils all 2021.20210921-1 [52.3 MB]
Get:156 http://127.0.0.1:12990/debian sid/main amd64 libapache-pom-java all 18-1 [4676 B]
Get:157 http://127.0.0.1:12990/debian sid/main amd64 libcommons-parent-java all 43-1 [10.8 kB]
Get:158 http://127.0.0.1:12990/debian sid/main amd64 libcommons-logging-java all 1.2-2 [62.2 kB]
Get:159 http://127.0.0.1:12990/debian sid/main amd64 libfontbox-java all 1:1.8.16-2 [211 kB]
Get:160 http://127.0.0.1:12990/debian sid/main amd64 libpdfbox-java all 1:1.8.16-2 [5205 kB]
Get:161 http://127.0.0.1:12990/debian sid/main amd64 preview-latex-style all 12.2-1 [201 kB]
Get:162 http://127.0.0.1:12990/debian sid/main amd64 texlive-pictures all 2021.20210921-1 [8775 kB]
Get:163 http://127.0.0.1:12990/debian sid/main amd64 texlive-latex-extra all 2021.20210921-1 [14.5 MB]
Get:164 http://127.0.0.1:12990/debian sid/main amd64 fonts-gfs-baskerville all 1.1-6 [43.7 kB]
Get:165 http://127.0.0.1:12990/debian sid/main amd64 fonts-gfs-porson all 1.1-7 [33.8 kB]
Get:166 http://127.0.0.1:12990/debian sid/main amd64 texlive-lang-greek all 2021.20210921-1 [77.6 MB]
Get:167 http://127.0.0.1:12990/debian sid/main amd64 texlive-science all 2021.20210921-1 [3482 kB]
Get:168 http://127.0.0.1:12990/debian sid/main amd64 libxslt1.1 amd64 1.1.34-4 [239 kB]
Get:169 http://127.0.0.1:12990/debian sid/main amd64 xsltproc amd64 1.1.34-4 [124 kB]
Get:170 http://127.0.0.1:12990/debian sid/main amd64 dblatex all 0.3.12py3-1 [371 kB]
Get:171 http://127.0.0.1:12990/debian sid/main amd64 dbus-user-session amd64 1.12.20-3 [97.2 kB]
Get:172 http://127.0.0.1:12990/debian sid/main amd64 libdconf1 amd64 0.40.0-2 [47.4 kB]
Get:173 http://127.0.0.1:12990/debian sid/main amd64 dconf-service amd64 0.40.0-2 [37.9 kB]
Get:174 http://127.0.0.1:12990/debian sid/main amd64 dconf-gsettings-backend amd64 0.40.0-2 [34.0 kB]
Get:175 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:176 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:177 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:178 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:179 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:180 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:181 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:182 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:183 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:184 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:185 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:186 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
Get:187 http://127.0.0.1:12990/debian sid/main amd64 dh-exec amd64 0.23.4 [27.1 kB]
Get:188 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.9.7-1 [79.4 kB]
Get:189 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.9.7-1 [146 kB]
Get:190 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 5.20211022.1 [103 kB]
Get:191 http://127.0.0.1:12990/debian sid/main amd64 libnspr4 amd64 2:4.32-1 [112 kB]
Get:192 http://127.0.0.1:12990/debian sid/main amd64 libnss3 amd64 2:3.70-1 [1319 kB]
Get:193 http://127.0.0.1:12990/debian sid/main amd64 libpoppler102 amd64 20.09.0-3.1 [1675 kB]
Get:194 http://127.0.0.1:12990/debian sid/main amd64 extractpdfmark amd64 1.1.0-1.1 [36.2 kB]
Get:195 http://127.0.0.1:12990/debian sid/main amd64 fontconfig amd64 2.13.1-4.2 [417 kB]
Get:196 http://127.0.0.1:12990/debian sid/main amd64 fontforge-common all 1:20201107~dfsg-4 [2079 kB]
Get:197 http://127.0.0.1:12990/debian sid/main amd64 libgif7 amd64 5.1.9-2 [45.1 kB]
Get:198 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9 amd64 3.9.7-4 [1693 kB]
Get:199 http://127.0.0.1:12990/debian sid/main amd64 libspiro1 amd64 1:20200505-2 [20.6 kB]
Get:200 http://127.0.0.1:12990/debian sid/main amd64 libuninameslist1 amd64 20210917-1 [386 kB]
Get:201 http://127.0.0.1:12990/debian sid/main amd64 libwoff1 amd64 1.0.2-1+b1 [42.4 kB]
Get:202 http://127.0.0.1:12990/debian sid/main amd64 libfontforge4 amd64 1:20201107~dfsg-4 [1918 kB]
Get:203 http://127.0.0.1:12990/debian sid/main amd64 libatk1.0-data all 2.36.0-2 [149 kB]
Get:204 http://127.0.0.1:12990/debian sid/main amd64 libatk1.0-0 amd64 2.36.0-2 [52.2 kB]
Get:205 http://127.0.0.1:12990/debian sid/main amd64 libatspi2.0-0 amd64 2.42.0-1 [78.4 kB]
Get:206 http://127.0.0.1:12990/debian sid/main amd64 libatk-bridge2.0-0 amd64 2.38.0-2 [64.9 kB]
Get:207 http://127.0.0.1:12990/debian sid/main amd64 libcairo-gobject2 amd64 1.16.0-5 [125 kB]
Get:208 http://127.0.0.1:12990/debian sid/main amd64 libcolord2 amd64 1.4.5-3 [144 kB]
Get:209 http://127.0.0.1:12990/debian sid/main amd64 libavahi-common-data amd64 0.8-5 [124 kB]
Get:210 http://127.0.0.1:12990/debian sid/main amd64 libavahi-common3 amd64 0.8-5 [58.4 kB]
Get:211 http://127.0.0.1:12990/debian sid/main amd64 libavahi-client3 amd64 0.8-5 [62.1 kB]
Get:212 http://127.0.0.1:12990/debian sid/main amd64 libcups2 amd64 2.3.3op2-7 [349 kB]
Get:213 http://127.0.0.1:12990/debian sid/main amd64 libepoxy0 amd64 1.5.9-2 [189 kB]
Get:214 http://127.0.0.1:12990/debian sid/main amd64 libfribidi0 amd64 1.0.8-2 [64.8 kB]
Get:215 http://127.0.0.1:12990/debian sid/main amd64 libpango-1.0-0 amd64 1.48.10+ds1-1 [204 kB]
Get:216 http://127.0.0.1:12990/debian sid/main amd64 libpangoft2-1.0-0 amd64 1.48.10+ds1-1 [73.3 kB]
Get:217 http://127.0.0.1:12990/debian sid/main amd64 libpangocairo-1.0-0 amd64 1.48.10+ds1-1 [60.7 kB]
Get:218 http://127.0.0.1:12990/debian sid/main amd64 libwayland-client0 amd64 1.19.0-2+b1 [27.3 kB]
Get:219 http://127.0.0.1:12990/debian sid/main amd64 libwayland-cursor0 amd64 1.19.0-2+b1 [14.9 kB]
Get:220 http://127.0.0.1:12990/debian sid/main amd64 libwayland-egl1 amd64 1.19.0-2+b1 [8756 B]
Get:221 http://127.0.0.1:12990/debian sid/main amd64 libxcomposite1 amd64 1:0.4.5-1 [16.6 kB]
Get:222 http://127.0.0.1:12990/debian sid/main amd64 libxfixes3 amd64 1:5.0.3-2 [22.1 kB]
Get:223 http://127.0.0.1:12990/debian sid/main amd64 libxcursor1 amd64 1:1.2.0-2 [37.3 kB]
Get:224 http://127.0.0.1:12990/debian sid/main amd64 libxdamage1 amd64 1:1.1.5-2 [15.7 kB]
Get:225 http://127.0.0.1:12990/debian sid/main amd64 libxinerama1 amd64 2:1.1.4-2 [17.7 kB]
Get:226 http://127.0.0.1:12990/debian sid/main amd64 xkb-data all 2.33-1 [748 kB]
Get:227 http://127.0.0.1:12990/debian sid/main amd64 libxkbcommon0 amd64 1.3.1-1 [109 kB]
Get:228 http://127.0.0.1:12990/debian sid/main amd64 libxrandr2 amd64 2:1.5.2-1 [38.2 kB]
Get:229 http://127.0.0.1:12990/debian sid/main amd64 libgtk-3-common all 3.24.30-3 [3780 kB]
Get:230 http://127.0.0.1:12990/debian sid/main amd64 libgtk-3-0 amd64 3.24.30-3 [2860 kB]
Get:231 http://127.0.0.1:12990/debian sid/main amd64 fontforge amd64 1:20201107~dfsg-4 [1364 kB]
Get:232 http://127.0.0.1:12990/debian sid/main amd64 fonts-linuxlibertine all 5.3.0-6 [1653 kB]
Get:233 http://127.0.0.1:12990/debian sid/main amd64 libgs9-common all 9.54.0~dfsg-5 [740 kB]
Get:234 http://127.0.0.1:12990/debian sid/main amd64 libidn12 amd64 1.38-4 [82.6 kB]
Get:235 http://127.0.0.1:12990/debian sid/main amd64 libijs-0.35 amd64 0.35-15 [16.4 kB]
Get:236 http://127.0.0.1:12990/debian sid/main amd64 libjbig2dec0 amd64 0.19-3 [67.2 kB]
Get:237 http://127.0.0.1:12990/debian sid/main amd64 libgs9 amd64 9.54.0~dfsg-5 [2259 kB]
Get:238 http://127.0.0.1:12990/debian sid/main amd64 ghostscript amd64 9.54.0~dfsg-5 [98.4 kB]
Get:239 http://127.0.0.1:12990/debian sid/main amd64 libgirepository-1.0-1 amd64 1.70.0-2 [97.8 kB]
Get:240 http://127.0.0.1:12990/debian sid/main amd64 gir1.2-glib-2.0 amd64 1.70.0-2 [154 kB]
Get:241 http://127.0.0.1:12990/debian sid/main amd64 gir1.2-freedesktop amd64 1.70.0-2 [33.8 kB]
Get:242 http://127.0.0.1:12990/debian sid/main amd64 gir1.2-harfbuzz-0.0 amd64 2.7.4-1 [1154 kB]
Get:243 http://127.0.0.1:12990/debian sid/main amd64 libxft2 amd64 2.3.2-2 [57.2 kB]
Get:244 http://127.0.0.1:12990/debian sid/main amd64 libpangoxft-1.0-0 amd64 1.48.10+ds1-1 [53.5 kB]
Get:245 http://127.0.0.1:12990/debian sid/main amd64 gir1.2-pango-1.0 amd64 1.48.10+ds1-1 [62.5 kB]
Get:246 http://127.0.0.1:12990/debian sid/main amd64 groff amd64 1.22.4-7 [3983 kB]
Get:247 http://127.0.0.1:12990/debian sid/main amd64 gsfonts all 1:8.11+urwcyr1.0.7~pre44-4.5 [3125 kB]
Get:248 http://127.0.0.1:12990/debian sid/main amd64 help2man amd64 1.48.5 [143 kB]
Get:249 http://127.0.0.1:12990/debian sid/main amd64 icu-devtools amd64 67.1-7 [201 kB]
Get:250 http://127.0.0.1:12990/debian sid/main amd64 imagemagick-6.q16 amd64 8:6.9.11.60+dfsg-1.3 [383 kB]
Get:251 http://127.0.0.1:12990/debian sid/main amd64 uuid-dev amd64 2.37.2-4 [95.8 kB]
Get:252 http://127.0.0.1:12990/debian sid/main amd64 libblkid-dev amd64 2.37.2-4 [232 kB]
Get:253 http://127.0.0.1:12990/debian sid/main amd64 libbrotli-dev amd64 1.0.9-2+b2 [288 kB]
Get:254 http://127.0.0.1:12990/debian sid/main amd64 liblzo2-2 amd64 2.10-2 [56.9 kB]
Get:255 http://127.0.0.1:12990/debian sid/main amd64 libcairo-script-interpreter2 amd64 1.16.0-5 [163 kB]
Get:256 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.4.1-3 [156 kB]
Get:257 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2 [190 kB]
Get:258 http://127.0.0.1:12990/debian sid/main amd64 libpng-dev amd64 1.6.37-3 [298 kB]
Get:259 http://127.0.0.1:12990/debian sid/main amd64 libfreetype-dev amd64 2.11.0+dfsg-1 [614 kB]
Get:260 http://127.0.0.1:12990/debian sid/main amd64 libfreetype6-dev amd64 2.11.0+dfsg-1 [109 kB]
Get:261 http://127.0.0.1:12990/debian sid/main amd64 pkg-config amd64 0.29.2-1 [65.1 kB]
Get:262 http://127.0.0.1:12990/debian sid/main amd64 libfontconfig-dev amd64 2.13.1-4.2 [368 kB]
Get:263 http://127.0.0.1:12990/debian sid/main amd64 libfontconfig1-dev amd64 2.13.1-4.2 [238 kB]
Get:264 http://127.0.0.1:12990/debian sid/main amd64 xorg-sgml-doctools all 1:1.11-1.1 [22.1 kB]
Get:265 http://127.0.0.1:12990/debian sid/main amd64 x11proto-dev all 2021.5-1 [599 kB]
Get:266 http://127.0.0.1:12990/debian sid/main amd64 libxau-dev amd64 1:1.0.9-1 [22.9 kB]
Get:267 http://127.0.0.1:12990/debian sid/main amd64 libxdmcp-dev amd64 1:1.1.2-3 [42.2 kB]
Get:268 http://127.0.0.1:12990/debian sid/main amd64 xtrans-dev all 1.4.0-1 [98.7 kB]
Get:269 http://127.0.0.1:12990/debian sid/main amd64 libpthread-stubs0-dev amd64 0.4-1 [5344 B]
Get:270 http://127.0.0.1:12990/debian sid/main amd64 libxcb1-dev amd64 1.14-3 [176 kB]
Get:271 http://127.0.0.1:12990/debian sid/main amd64 libx11-dev amd64 2:1.7.2-2+b1 [844 kB]
Get:272 http://127.0.0.1:12990/debian sid/main amd64 libxrender-dev amd64 1:0.9.10-1 [40.8 kB]
Get:273 http://127.0.0.1:12990/debian sid/main amd64 libxext-dev amd64 2:1.3.4-1 [107 kB]
Get:274 http://127.0.0.1:12990/debian sid/main amd64 libice-dev amd64 2:1.0.10-1 [67.1 kB]
Get:275 http://127.0.0.1:12990/debian sid/main amd64 libsm-dev amd64 2:1.2.3-1 [38.0 kB]
Get:276 http://127.0.0.1:12990/debian sid/main amd64 libpixman-1-dev amd64 0.40.0-1 [560 kB]
Get:277 http://127.0.0.1:12990/debian sid/main amd64 libxcb-render0-dev amd64 1.14-3 [114 kB]
Get:278 http://127.0.0.1:12990/debian sid/main amd64 libxcb-shm0-dev amd64 1.14-3 [102 kB]
Get:279 http://127.0.0.1:12990/debian sid/main amd64 libffi-dev amd64 3.4.2-3 [60.4 kB]
Get:280 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-data all 2.70.0-3 [1189 kB]
Get:281 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-bin amd64 2.70.0-3 [145 kB]
Get:282 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-dev-bin amd64 2.70.0-3 [183 kB]
Get:283 http://127.0.0.1:12990/debian sid/main amd64 libsepol1-dev amd64 3.1-1 [338 kB]
Get:284 http://127.0.0.1:12990/debian sid/main amd64 libpcre2-16-0 amd64 10.36-2 [231 kB]
Get:285 http://127.0.0.1:12990/debian sid/main amd64 libpcre2-32-0 amd64 10.36-2 [220 kB]
Get:286 http://127.0.0.1:12990/debian sid/main amd64 libpcre2-posix2 amd64 10.36-2 [49.1 kB]
Get:287 http://127.0.0.1:12990/debian sid/main amd64 libpcre2-dev amd64 10.36-2 [731 kB]
Get:288 http://127.0.0.1:12990/debian sid/main amd64 libselinux1-dev amd64 3.1-3 [168 kB]
Get:289 http://127.0.0.1:12990/debian sid/main amd64 libmount-dev amd64 2.37.2-4 [79.0 kB]
Get:290 http://127.0.0.1:12990/debian sid/main amd64 libpcre16-3 amd64 2:8.39-13 [259 kB]
Get:291 http://127.0.0.1:12990/debian sid/main amd64 libpcre32-3 amd64 2:8.39-13 [250 kB]
Get:292 http://127.0.0.1:12990/debian sid/main amd64 libpcrecpp0v5 amd64 2:8.39-13 [152 kB]
Get:293 http://127.0.0.1:12990/debian sid/main amd64 libpcre3-dev amd64 2:8.39-13 [650 kB]
Get:294 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-dev amd64 2.70.0-3 [1599 kB]
Get:295 http://127.0.0.1:12990/debian sid/main amd64 libcairo2-dev amd64 1.16.0-5 [739 kB]
Get:296 http://127.0.0.1:12990/debian sid/main amd64 libdatrie-dev amd64 0.2.13-2 [18.2 kB]
Get:297 http://127.0.0.1:12990/debian sid/main amd64 libfl2 amd64 2.6.4-8 [103 kB]
Get:298 http://127.0.0.1:12990/debian sid/main amd64 libfl-dev amd64 2.6.4-8 [104 kB]
Get:299 http://127.0.0.1:12990/debian sid/main amd64 libfribidi-dev amd64 1.0.8-2 [105 kB]
Get:300 http://127.0.0.1:12990/debian sid/main amd64 libgmpxx4ldbl amd64 2:6.2.1+dfsg-2 [338 kB]
Get:301 http://127.0.0.1:12990/debian sid/main amd64 libgmp-dev amd64 2:6.2.1+dfsg-2 [641 kB]
Get:302 http://127.0.0.1:12990/debian sid/main amd64 libgraphite2-dev amd64 1.3.14-1 [24.0 kB]
Get:303 http://127.0.0.1:12990/debian sid/main amd64 libharfbuzz-icu0 amd64 2.7.4-1 [1132 kB]
Get:304 http://127.0.0.1:12990/debian sid/main amd64 libharfbuzz-gobject0 amd64 2.7.4-1 [1147 kB]
Get:305 http://127.0.0.1:12990/debian sid/main amd64 libicu-dev amd64 67.1-7 [9597 kB]
Get:306 http://127.0.0.1:12990/debian sid/main amd64 libharfbuzz-dev amd64 2.7.4-1 [1630 kB]
Get:307 http://127.0.0.1:12990/debian sid/main amd64 libltdl-dev amd64 2.4.6-15 [162 kB]
Get:308 http://127.0.0.1:12990/debian sid/main amd64 libncurses6 amd64 6.2+20210905-1 [102 kB]
Get:309 http://127.0.0.1:12990/debian sid/main amd64 libncurses-dev amd64 6.2+20210905-1 [344 kB]
Get:310 http://127.0.0.1:12990/debian sid/main amd64 libncurses5-dev amd64 6.2+20210905-1 [940 B]
Get:311 http://127.0.0.1:12990/debian sid/main amd64 libnetpbm10 amd64 2:10.0-15.4 [86.2 kB]
Get:312 http://127.0.0.1:12990/debian sid/main amd64 libthai-dev amd64 0.1.28-4.1 [24.1 kB]
Get:313 http://127.0.0.1:12990/debian sid/main amd64 libxft-dev amd64 2.3.2-2 [68.7 kB]
Get:314 http://127.0.0.1:12990/debian sid/main amd64 pango1.0-tools amd64 1.48.10+ds1-1 [64.1 kB]
Get:315 http://127.0.0.1:12990/debian sid/main amd64 libpango1.0-dev amd64 1.48.10+ds1-1 [168 kB]
Get:316 http://127.0.0.1:12990/debian sid/main amd64 libpotrace0 amd64 1.16-2 [26.2 kB]
Get:317 http://127.0.0.1:12990/debian sid/main amd64 libreadline-dev amd64 8.1-2 [148 kB]
Get:318 http://127.0.0.1:12990/debian sid/main amd64 libtext-unidecode-perl all 1.30-1 [103 kB]
Get:319 http://127.0.0.1:12990/debian sid/main amd64 libxml-namespacesupport-perl all 1.12-1.1 [14.9 kB]
Get:320 http://127.0.0.1:12990/debian sid/main amd64 libxml-sax-base-perl all 1.09-1.1 [20.7 kB]
Get:321 http://127.0.0.1:12990/debian sid/main amd64 libxml-sax-perl all 1.02+dfsg-3 [59.4 kB]
Get:322 http://127.0.0.1:12990/debian sid/main amd64 libxml-libxml-perl amd64 2.0134+dfsg-2+b1 [337 kB]
Get:323 http://127.0.0.1:12990/debian sid/main amd64 potrace amd64 1.16-2 [81.2 kB]
Get:324 http://127.0.0.1:12990/debian sid/main amd64 mftrace amd64 1.2.20+git20191022.3b4bc2e-2 [42.6 kB]
Get:325 http://127.0.0.1:12990/debian sid/main amd64 netpbm amd64 2:10.0-15.4 [1011 kB]
Get:326 http://127.0.0.1:12990/debian sid/main amd64 texi2html all 1.82+dfsg1-6 [356 kB]
Get:327 http://127.0.0.1:12990/debian sid/main amd64 texinfo amd64 6.8-3 [1825 kB]
Get:328 http://127.0.0.1:12990/debian sid/main amd64 texlive-lang-cyrillic all 2021.20210921-1 [20.9 MB]
Get:329 http://127.0.0.1:12990/debian sid/main amd64 texlive-metapost all 2021.20210921-1 [505 kB]
Get:330 http://127.0.0.1:12990/debian sid/main amd64 zip amd64 3.0-12 [232 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 510 MB in 4s (144 MB/s)
Selecting previously unselected package libapparmor1:amd64.
(Reading database ... 14272 files and directories currently installed.)
Preparing to unpack .../0-libapparmor1_3.0.3-5_amd64.deb ...
Unpacking libapparmor1:amd64 (3.0.3-5) ...
Selecting previously unselected package libargon2-1:amd64.
Preparing to unpack .../1-libargon2-1_0~20171227-0.2_amd64.deb ...
Unpacking libargon2-1:amd64 (0~20171227-0.2) ...
Selecting previously unselected package dmsetup.
Preparing to unpack .../2-dmsetup_2%3a1.02.175-2.1_amd64.deb ...
Unpacking dmsetup (2:1.02.175-2.1) ...
Selecting previously unselected package libdevmapper1.02.1:amd64.
Preparing to unpack .../3-libdevmapper1.02.1_2%3a1.02.175-2.1_amd64.deb ...
Unpacking libdevmapper1.02.1:amd64 (2:1.02.175-2.1) ...
Selecting previously unselected package libjson-c5:amd64.
Preparing to unpack .../4-libjson-c5_0.15-2_amd64.deb ...
Unpacking libjson-c5:amd64 (0.15-2) ...
Selecting previously unselected package libcryptsetup12:amd64.
Preparing to unpack .../5-libcryptsetup12_2%3a2.4.1-1_amd64.deb ...
Unpacking libcryptsetup12:amd64 (2:2.4.1-1) ...
Selecting previously unselected package libip4tc2:amd64.
Preparing to unpack .../6-libip4tc2_1.8.7-1_amd64.deb ...
Unpacking libip4tc2:amd64 (1.8.7-1) ...
Selecting previously unselected package libkmod2:amd64.
Preparing to unpack .../7-libkmod2_29-1_amd64.deb ...
Unpacking libkmod2:amd64 (29-1) ...
Selecting previously unselected package systemd.
Preparing to unpack .../8-systemd_249.5-1_amd64.deb ...
Unpacking systemd (249.5-1) ...
Setting up libapparmor1:amd64 (3.0.3-5) ...
Setting up libargon2-1:amd64 (0~20171227-0.2) ...
Setting up libjson-c5:amd64 (0.15-2) ...
Setting up libip4tc2:amd64 (1.8.7-1) ...
Setting up libkmod2:amd64 (29-1) ...
Setting up libdevmapper1.02.1:amd64 (2:1.02.175-2.1) ...
Setting up libcryptsetup12:amd64 (2:2.4.1-1) ...
Setting up systemd (249.5-1) ...
Created symlink /etc/systemd/system/getty.target.wants/getty@tty1.service → /lib/systemd/system/getty@.service.
Created symlink /etc/systemd/system/multi-user.target.wants/remote-fs.target → /lib/systemd/system/remote-fs.target.
Created symlink /etc/systemd/system/sysinit.target.wants/systemd-pstore.service → /lib/systemd/system/systemd-pstore.service.
Initializing machine ID from random generator.
Setting up dmsetup (2:1.02.175-2.1) ...
Selecting previously unselected package systemd-sysv.
(Reading database ... 15144 files and directories currently installed.)
Preparing to unpack .../00-systemd-sysv_249.5-1_amd64.deb ...
Unpacking systemd-sysv (249.5-1) ...
Selecting previously unselected package libdbus-1-3:amd64.
Preparing to unpack .../01-libdbus-1-3_1.12.20-3_amd64.deb ...
Unpacking libdbus-1-3:amd64 (1.12.20-3) ...
Selecting previously unselected package dbus-bin.
Preparing to unpack .../02-dbus-bin_1.12.20-3_amd64.deb ...
Unpacking dbus-bin (1.12.20-3) ...
Selecting previously unselected package dbus-session-bus-common.
Preparing to unpack .../03-dbus-session-bus-common_1.12.20-3_all.deb ...
Unpacking dbus-session-bus-common (1.12.20-3) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../04-libexpat1_2.4.1-3_amd64.deb ...
Unpacking libexpat1:amd64 (2.4.1-3) ...
Selecting previously unselected package dbus-daemon.
Preparing to unpack .../05-dbus-daemon_1.12.20-3_amd64.deb ...
Unpacking dbus-daemon (1.12.20-3) ...
Selecting previously unselected package dbus-system-bus-common.
Preparing to unpack .../06-dbus-system-bus-common_1.12.20-3_all.deb ...
Unpacking dbus-system-bus-common (1.12.20-3) ...
Selecting previously unselected package dbus.
Preparing to unpack .../07-dbus_1.12.20-3_amd64.deb ...
Unpacking dbus (1.12.20-3) ...
Selecting previously unselected package bsdextrautils.
Preparing to unpack .../08-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../09-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../10-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../11-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../12-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../13-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../14-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package flex.
Preparing to unpack .../15-flex_2.6.4-8_amd64.deb ...
Unpacking flex (2.6.4-8) ...
Selecting previously unselected package fonts-ipafont-mincho.
Preparing to unpack .../16-fonts-ipafont-mincho_00303-23_all.deb ...
Unpacking fonts-ipafont-mincho (00303-23) ...
Selecting previously unselected package liblocale-gettext-perl.
Preparing to unpack .../17-liblocale-gettext-perl_1.07-4+b1_amd64.deb ...
Unpacking liblocale-gettext-perl (1.07-4+b1) ...
Selecting previously unselected package libfftw3-double3:amd64.
Preparing to unpack .../18-libfftw3-double3_3.3.8-2_amd64.deb ...
Unpacking libfftw3-double3:amd64 (3.3.8-2) ...
Selecting previously unselected package libbrotli1:amd64.
Preparing to unpack .../19-libbrotli1_1.0.9-2+b2_amd64.deb ...
Unpacking libbrotli1:amd64 (1.0.9-2+b2) ...
Selecting previously unselected package libpng16-16:amd64.
Preparing to unpack .../20-libpng16-16_1.6.37-3_amd64.deb ...
Unpacking libpng16-16:amd64 (1.6.37-3) ...
Selecting previously unselected package libfreetype6:amd64.
Preparing to unpack .../21-libfreetype6_2.11.0+dfsg-1_amd64.deb ...
Unpacking libfreetype6:amd64 (2.11.0+dfsg-1) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../22-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package ucf.
Preparing to unpack .../23-ucf_3.0043_all.deb ...
Moving old data out of the way
Unpacking ucf (3.0043) ...
Selecting previously unselected package fonts-dejavu-core.
Preparing to unpack .../24-fonts-dejavu-core_2.37-2_all.deb ...
Unpacking fonts-dejavu-core (2.37-2) ...
Selecting previously unselected package fonts-freefont-otf.
Preparing to unpack .../25-fonts-freefont-otf_20120503-10_all.deb ...
Unpacking fonts-freefont-otf (20120503-10) ...
Selecting previously unselected package fonts-urw-base35.
Preparing to unpack .../26-fonts-urw-base35_20200910-1_all.deb ...
Unpacking fonts-urw-base35 (20200910-1) ...
Selecting previously unselected package fonts-texgyre.
Preparing to unpack .../27-fonts-texgyre_20180621-3.1_all.deb ...
Unpacking fonts-texgyre (20180621-3.1) ...
Selecting previously unselected package fontconfig-config.
Preparing to unpack .../28-fontconfig-config_2.13.1-4.2_all.deb ...
Unpacking fontconfig-config (2.13.1-4.2) ...
Selecting previously unselected package libfontconfig1:amd64.
Preparing to unpack .../29-libfontconfig1_2.13.1-4.2_amd64.deb ...
Unpacking libfontconfig1:amd64 (2.13.1-4.2) ...
Selecting previously unselected package libaom0:amd64.
Preparing to unpack .../30-libaom0_1.0.0.errata1.avif-1_amd64.deb ...
Unpacking libaom0:amd64 (1.0.0.errata1.avif-1) ...
Selecting previously unselected package libdav1d5:amd64.
Preparing to unpack .../31-libdav1d5_0.9.2-1+b1_amd64.deb ...
Unpacking libdav1d5:amd64 (0.9.2-1+b1) ...
Selecting previously unselected package libde265-0:amd64.
Preparing to unpack .../32-libde265-0_1.0.8-1_amd64.deb ...
Unpacking libde265-0:amd64 (1.0.8-1) ...
Selecting previously unselected package libnuma1:amd64.
Preparing to unpack .../33-libnuma1_2.0.14-3_amd64.deb ...
Unpacking libnuma1:amd64 (2.0.14-3) ...
Selecting previously unselected package libx265-199:amd64.
Preparing to unpack .../34-libx265-199_3.5-2_amd64.deb ...
Unpacking libx265-199:amd64 (3.5-2) ...
Selecting previously unselected package libheif1:amd64.
Preparing to unpack .../35-libheif1_1.12.0-2+b2_amd64.deb ...
Unpacking libheif1:amd64 (1.12.0-2+b2) ...
Selecting previously unselected package libjbig0:amd64.
Preparing to unpack .../36-libjbig0_2.1-3.1+b2_amd64.deb ...
Unpacking libjbig0:amd64 (2.1-3.1+b2) ...
Selecting previously unselected package libjpeg62-turbo:amd64.
Preparing to unpack .../37-libjpeg62-turbo_1%3a2.0.6-4_amd64.deb ...
Unpacking libjpeg62-turbo:amd64 (1:2.0.6-4) ...
Selecting previously unselected package liblcms2-2:amd64.
Preparing to unpack .../38-liblcms2-2_2.12~rc1-2_amd64.deb ...
Unpacking liblcms2-2:amd64 (2.12~rc1-2) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../39-libglib2.0-0_2.70.0-3_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.70.0-3) ...
Selecting previously unselected package liblqr-1-0:amd64.
Preparing to unpack .../40-liblqr-1-0_0.4.2-2.1_amd64.deb ...
Unpacking liblqr-1-0:amd64 (0.4.2-2.1) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../41-libltdl7_2.4.6-15_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-15) ...
Selecting previously unselected package libopenjp2-7:amd64.
Preparing to unpack .../42-libopenjp2-7_2.4.0-3_amd64.deb ...
Unpacking libopenjp2-7:amd64 (2.4.0-3) ...
Selecting previously unselected package libdeflate0:amd64.
Preparing to unpack .../43-libdeflate0_1.8-1_amd64.deb ...
Unpacking libdeflate0:amd64 (1.8-1) ...
Selecting previously unselected package libwebp6:amd64.
Preparing to unpack .../44-libwebp6_0.6.1-2.1_amd64.deb ...
Unpacking libwebp6:amd64 (0.6.1-2.1) ...
Selecting previously unselected package libtiff5:amd64.
Preparing to unpack .../45-libtiff5_4.3.0-2_amd64.deb ...
Unpacking libtiff5:amd64 (4.3.0-2) ...
Selecting previously unselected package libwebpdemux2:amd64.
Preparing to unpack .../46-libwebpdemux2_0.6.1-2.1_amd64.deb ...
Unpacking libwebpdemux2:amd64 (0.6.1-2.1) ...
Selecting previously unselected package libwebpmux3:amd64.
Preparing to unpack .../47-libwebpmux3_0.6.1-2.1_amd64.deb ...
Unpacking libwebpmux3:amd64 (0.6.1-2.1) ...
Selecting previously unselected package libxau6:amd64.
Preparing to unpack .../48-libxau6_1%3a1.0.9-1_amd64.deb ...
Unpacking libxau6:amd64 (1:1.0.9-1) ...
Selecting previously unselected package libxdmcp6:amd64.
Preparing to unpack .../49-libxdmcp6_1%3a1.1.2-3_amd64.deb ...
Unpacking libxdmcp6:amd64 (1:1.1.2-3) ...
Selecting previously unselected package libxcb1:amd64.
Preparing to unpack .../50-libxcb1_1.14-3_amd64.deb ...
Unpacking libxcb1:amd64 (1.14-3) ...
Selecting previously unselected package libx11-data.
Preparing to unpack .../51-libx11-data_2%3a1.7.2-2_all.deb ...
Unpacking libx11-data (2:1.7.2-2) ...
Selecting previously unselected package libx11-6:amd64.
Preparing to unpack .../52-libx11-6_2%3a1.7.2-2+b1_amd64.deb ...
Unpacking libx11-6:amd64 (2:1.7.2-2+b1) ...
Selecting previously unselected package libxext6:amd64.
Preparing to unpack .../53-libxext6_2%3a1.3.4-1_amd64.deb ...
Unpacking libxext6:amd64 (2:1.3.4-1) ...
Selecting previously unselected package imagemagick-6-common.
Preparing to unpack .../54-imagemagick-6-common_8%3a6.9.11.60+dfsg-1.3_all.deb ...
Unpacking imagemagick-6-common (8:6.9.11.60+dfsg-1.3) ...
Selecting previously unselected package libmagickcore-6.q16-6:amd64.
Preparing to unpack .../55-libmagickcore-6.q16-6_8%3a6.9.11.60+dfsg-1.3_amd64.deb ...
Unpacking libmagickcore-6.q16-6:amd64 (8:6.9.11.60+dfsg-1.3) ...
Selecting previously unselected package libmagickwand-6.q16-6:amd64.
Preparing to unpack .../56-libmagickwand-6.q16-6_8%3a6.9.11.60+dfsg-1.3_amd64.deb ...
Unpacking libmagickwand-6.q16-6:amd64 (8:6.9.11.60+dfsg-1.3) ...
Selecting previously unselected package poppler-data.
Preparing to unpack .../57-poppler-data_0.4.11-1_all.deb ...
Unpacking poppler-data (0.4.11-1) ...
Selecting previously unselected package libpython3.9-minimal:amd64.
Preparing to unpack .../58-libpython3.9-minimal_3.9.7-4_amd64.deb ...
Unpacking libpython3.9-minimal:amd64 (3.9.7-4) ...
Selecting previously unselected package python3.9-minimal.
Preparing to unpack .../59-python3.9-minimal_3.9.7-4_amd64.deb ...
Unpacking python3.9-minimal (3.9.7-4) ...
Setting up libpython3.9-minimal:amd64 (3.9.7-4) ...
Setting up libexpat1:amd64 (2.4.1-3) ...
Setting up python3.9-minimal (3.9.7-4) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 18145 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.9.2-3_amd64.deb ...
Unpacking python3-minimal (3.9.2-3) ...
Selecting previously unselected package media-types.
Preparing to unpack .../1-media-types_4.0.0_all.deb ...
Unpacking media-types (4.0.0) ...
Selecting previously unselected package libmpdec3:amd64.
Preparing to unpack .../2-libmpdec3_2.5.1-2_amd64.deb ...
Unpacking libmpdec3:amd64 (2.5.1-2) ...
Selecting previously unselected package libncursesw6:amd64.
Preparing to unpack .../3-libncursesw6_6.2+20210905-1_amd64.deb ...
Unpacking libncursesw6:amd64 (6.2+20210905-1) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../4-readline-common_8.1-2_all.deb ...
Unpacking readline-common (8.1-2) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../5-libreadline8_8.1-2_amd64.deb ...
Unpacking libreadline8:amd64 (8.1-2) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../6-libsqlite3-0_3.36.0-2_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.36.0-2) ...
Selecting previously unselected package libpython3.9-stdlib:amd64.
Preparing to unpack .../7-libpython3.9-stdlib_3.9.7-4_amd64.deb ...
Unpacking libpython3.9-stdlib:amd64 (3.9.7-4) ...
Selecting previously unselected package python3.9.
Preparing to unpack .../8-python3.9_3.9.7-4_amd64.deb ...
Unpacking python3.9 (3.9.7-4) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../9-libpython3-stdlib_3.9.2-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.9.2-3) ...
Setting up python3-minimal (3.9.2-3) ...
Selecting previously unselected package python3.
(Reading database ... 18584 files and directories currently installed.)
Preparing to unpack .../000-python3_3.9.2-3_amd64.deb ...
Unpacking python3 (3.9.2-3) ...
Selecting previously unselected package libpopt0:amd64.
Preparing to unpack .../001-libpopt0_1.18-3_amd64.deb ...
Unpacking libpopt0:amd64 (1.18-3) ...
Selecting previously unselected package rsync.
Preparing to unpack .../002-rsync_3.2.3-8_amd64.deb ...
Unpacking rsync (3.2.3-8) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../003-sgml-base_1.30_all.deb ...
Unpacking sgml-base (1.30) ...
Selecting previously unselected package tex-common.
Preparing to unpack .../004-tex-common_6.17_all.deb ...
Unpacking tex-common (6.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../005-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../006-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../007-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../008-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libpam-systemd:amd64.
Preparing to unpack .../009-libpam-systemd_249.5-1_amd64.deb ...
Unpacking libpam-systemd:amd64 (249.5-1) ...
Selecting previously unselected package hicolor-icon-theme.
Preparing to unpack .../010-hicolor-icon-theme_0.17-2_all.deb ...
Unpacking hicolor-icon-theme (0.17-2) ...
Selecting previously unselected package libgdk-pixbuf2.0-common.
Preparing to unpack .../011-libgdk-pixbuf2.0-common_2.42.6+dfsg-2_all.deb ...
Unpacking libgdk-pixbuf2.0-common (2.42.6+dfsg-2) ...
Selecting previously unselected package shared-mime-info.
Preparing to unpack .../012-shared-mime-info_2.0-1_amd64.deb ...
Unpacking shared-mime-info (2.0-1) ...
Selecting previously unselected package libgdk-pixbuf-2.0-0:amd64.
Preparing to unpack .../013-libgdk-pixbuf-2.0-0_2.42.6+dfsg-2_amd64.deb ...
Unpacking libgdk-pixbuf-2.0-0:amd64 (2.42.6+dfsg-2) ...
Selecting previously unselected package gtk-update-icon-cache.
Preparing to unpack .../014-gtk-update-icon-cache_3.24.30-3_amd64.deb ...
Unpacking gtk-update-icon-cache (3.24.30-3) ...
Selecting previously unselected package adwaita-icon-theme.
Preparing to unpack .../015-adwaita-icon-theme_41.0-1_all.deb ...
Unpacking adwaita-icon-theme (41.0-1) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../016-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../017-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../018-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../019-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package bison.
Preparing to unpack .../020-bison_2%3a3.8.2+dfsg-1_amd64.deb ...
Unpacking bison (2:3.8.2+dfsg-1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../021-xml-core_0.18+nmu1_all.deb ...
Unpacking xml-core (0.18+nmu1) ...
Selecting previously unselected package sgml-data.
Preparing to unpack .../022-sgml-data_2.0.11+nmu1_all.deb ...
Unpacking sgml-data (2.0.11+nmu1) ...
Selecting previously unselected package docbook-xml.
Preparing to unpack .../023-docbook-xml_4.5-11_all.deb ...
Unpacking docbook-xml (4.5-11) ...
Selecting previously unselected package python-apt-common.
Preparing to unpack .../024-python-apt-common_2.3.0_all.deb ...
Unpacking python-apt-common (2.3.0) ...
Selecting previously unselected package distro-info-data.
Preparing to unpack .../025-distro-info-data_0.52_all.deb ...
Unpacking distro-info-data (0.52) ...
Selecting previously unselected package python3-apt.
Preparing to unpack .../026-python3-apt_2.3.0_amd64.deb ...
Unpacking python3-apt (2.3.0) ...
Selecting previously unselected package libpaper1:amd64.
Preparing to unpack .../027-libpaper1_1.1.28+b1_amd64.deb ...
Unpacking libpaper1:amd64 (1.1.28+b1) ...
Selecting previously unselected package libpaper-utils.
Preparing to unpack .../028-libpaper-utils_1.1.28+b1_amd64.deb ...
Unpacking libpaper-utils (1.1.28+b1) ...
Selecting previously unselected package libkpathsea6:amd64.
Preparing to unpack .../029-libkpathsea6_2021.20210626.59705-1_amd64.deb ...
Unpacking libkpathsea6:amd64 (2021.20210626.59705-1) ...
Selecting previously unselected package libptexenc1:amd64.
Preparing to unpack .../030-libptexenc1_2021.20210626.59705-1_amd64.deb ...
Unpacking libptexenc1:amd64 (2021.20210626.59705-1) ...
Selecting previously unselected package libsynctex2:amd64.
Preparing to unpack .../031-libsynctex2_2021.20210626.59705-1_amd64.deb ...
Unpacking libsynctex2:amd64 (2021.20210626.59705-1) ...
Selecting previously unselected package libtexlua53:amd64.
Preparing to unpack .../032-libtexlua53_2021.20210626.59705-1_amd64.deb ...
Unpacking libtexlua53:amd64 (2021.20210626.59705-1) ...
Selecting previously unselected package libtexluajit2:amd64.
Preparing to unpack .../033-libtexluajit2_2021.20210626.59705-1_amd64.deb ...
Unpacking libtexluajit2:amd64 (2021.20210626.59705-1) ...
Selecting previously unselected package t1utils.
Preparing to unpack .../034-t1utils_1.41-4_amd64.deb ...
Unpacking t1utils (1.41-4) ...
Selecting previously unselected package libpixman-1-0:amd64.
Preparing to unpack .../035-libpixman-1-0_0.40.0-1_amd64.deb ...
Unpacking libpixman-1-0:amd64 (0.40.0-1) ...
Selecting previously unselected package libxcb-render0:amd64.
Preparing to unpack .../036-libxcb-render0_1.14-3_amd64.deb ...
Unpacking libxcb-render0:amd64 (1.14-3) ...
Selecting previously unselected package libxcb-shm0:amd64.
Preparing to unpack .../037-libxcb-shm0_1.14-3_amd64.deb ...
Unpacking libxcb-shm0:amd64 (1.14-3) ...
Selecting previously unselected package libxrender1:amd64.
Preparing to unpack .../038-libxrender1_1%3a0.9.10-1_amd64.deb ...
Unpacking libxrender1:amd64 (1:0.9.10-1) ...
Selecting previously unselected package libcairo2:amd64.
Preparing to unpack .../039-libcairo2_1.16.0-5_amd64.deb ...
Unpacking libcairo2:amd64 (1.16.0-5) ...
Selecting previously unselected package libgraphite2-3:amd64.
Preparing to unpack .../040-libgraphite2-3_1.3.14-1_amd64.deb ...
Unpacking libgraphite2-3:amd64 (1.3.14-1) ...
Selecting previously unselected package libharfbuzz0b:amd64.
Preparing to unpack .../041-libharfbuzz0b_2.7.4-1_amd64.deb ...
Unpacking libharfbuzz0b:amd64 (2.7.4-1) ...
Selecting previously unselected package libteckit0:amd64.
Preparing to unpack .../042-libteckit0_2.5.10+ds1-3_amd64.deb ...
Unpacking libteckit0:amd64 (2.5.10+ds1-3) ...
Selecting previously unselected package x11-common.
Preparing to unpack .../043-x11-common_1%3a7.7+23_all.deb ...
Unpacking x11-common (1:7.7+23) ...
Selecting previously unselected package libice6:amd64.
Preparing to unpack .../044-libice6_2%3a1.0.10-1_amd64.deb ...
Unpacking libice6:amd64 (2:1.0.10-1) ...
Selecting previously unselected package libsm6:amd64.
Preparing to unpack .../045-libsm6_2%3a1.2.3-1_amd64.deb ...
Unpacking libsm6:amd64 (2:1.2.3-1) ...
Selecting previously unselected package libxt6:amd64.
Preparing to unpack .../046-libxt6_1%3a1.2.0-1_amd64.deb ...
Unpacking libxt6:amd64 (1:1.2.0-1) ...
Selecting previously unselected package libxmu6:amd64.
Preparing to unpack .../047-libxmu6_2%3a1.1.2-2+b3_amd64.deb ...
Unpacking libxmu6:amd64 (2:1.1.2-2+b3) ...
Selecting previously unselected package libxpm4:amd64.
Preparing to unpack .../048-libxpm4_1%3a3.5.12-1_amd64.deb ...
Unpacking libxpm4:amd64 (1:3.5.12-1) ...
Selecting previously unselected package libxaw7:amd64.
Preparing to unpack .../049-libxaw7_2%3a1.0.13-1.1_amd64.deb ...
Unpacking libxaw7:amd64 (2:1.0.13-1.1) ...
Selecting previously unselected package libxi6:amd64.
Preparing to unpack .../050-libxi6_2%3a1.8-1_amd64.deb ...
Unpacking libxi6:amd64 (2:1.8-1) ...
Selecting previously unselected package libzzip-0-13:amd64.
Preparing to unpack .../051-libzzip-0-13_0.13.72+dfsg.1-1.1_amd64.deb ...
Unpacking libzzip-0-13:amd64 (0.13.72+dfsg.1-1.1) ...
Selecting previously unselected package texlive-binaries.
Preparing to unpack .../052-texlive-binaries_2021.20210626.59705-1_amd64.deb ...
Unpacking texlive-binaries (2021.20210626.59705-1) ...
Selecting previously unselected package xdg-utils.
Preparing to unpack .../053-xdg-utils_1.1.3-4.1_all.deb ...
Unpacking xdg-utils (1.1.3-4.1) ...
Selecting previously unselected package texlive-base.
Preparing to unpack .../054-texlive-base_2021.20210921-1_all.deb ...
Unpacking texlive-base (2021.20210921-1) ...
Selecting previously unselected package texlive-fonts-recommended.
Preparing to unpack .../055-texlive-fonts-recommended_2021.20210921-1_all.deb ...
Unpacking texlive-fonts-recommended (2021.20210921-1) ...
Selecting previously unselected package fonts-lmodern.
Preparing to unpack .../056-fonts-lmodern_2.004.5-6.1_all.deb ...
Unpacking fonts-lmodern (2.004.5-6.1) ...
Selecting previously unselected package texlive-latex-base.
Preparing to unpack .../057-texlive-latex-base_2021.20210921-1_all.deb ...
Unpacking texlive-latex-base (2021.20210921-1) ...
Selecting previously unselected package texlive-latex-recommended.
Preparing to unpack .../058-texlive-latex-recommended_2021.20210921-1_all.deb ...
Unpacking texlive-latex-recommended (2021.20210921-1) ...
Selecting previously unselected package texlive.
Preparing to unpack .../059-texlive_2021.20210921-1_all.deb ...
Unpacking texlive (2021.20210921-1) ...
Selecting previously unselected package texlive-bibtex-extra.
Preparing to unpack .../060-texlive-bibtex-extra_2021.20210921-1_all.deb ...
Unpacking texlive-bibtex-extra (2021.20210921-1) ...
Selecting previously unselected package libthai-data.
Preparing to unpack .../061-libthai-data_0.1.28-4.1_all.deb ...
Unpacking libthai-data (0.1.28-4.1) ...
Selecting previously unselected package libdatrie1:amd64.
Preparing to unpack .../062-libdatrie1_0.2.13-2_amd64.deb ...
Unpacking libdatrie1:amd64 (0.2.13-2) ...
Selecting previously unselected package libthai0:amd64.
Preparing to unpack .../063-libthai0_0.1.28-4.1_amd64.deb ...
Unpacking libthai0:amd64 (0.1.28-4.1) ...
Selecting previously unselected package libsombok3:amd64.
Preparing to unpack .../064-libsombok3_2.4.0-2+b1_amd64.deb ...
Unpacking libsombok3:amd64 (2.4.0-2+b1) ...
Selecting previously unselected package libmime-charset-perl.
Preparing to unpack .../065-libmime-charset-perl_1.012.2-1_all.deb ...
Unpacking libmime-charset-perl (1.012.2-1) ...
Selecting previously unselected package libunicode-linebreak-perl.
Preparing to unpack .../066-libunicode-linebreak-perl_0.0.20190101-1+b3_amd64.deb ...
Unpacking libunicode-linebreak-perl (0.0.20190101-1+b3) ...
Selecting previously unselected package libjs-jquery.
Preparing to unpack .../067-libjs-jquery_3.5.1+dfsg+~3.5.5-8_all.deb ...
Unpacking libjs-jquery (3.5.1+dfsg+~3.5.5-8) ...
Selecting previously unselected package libfontenc1:amd64.
Preparing to unpack .../068-libfontenc1_1%3a1.1.4-1_amd64.deb ...
Unpacking libfontenc1:amd64 (1:1.1.4-1) ...
Selecting previously unselected package xfonts-encodings.
Preparing to unpack .../069-xfonts-encodings_1%3a1.0.4-2.1_all.deb ...
Unpacking xfonts-encodings (1:1.0.4-2.1) ...
Selecting previously unselected package xfonts-utils.
Preparing to unpack .../070-xfonts-utils_1%3a7.7+6_amd64.deb ...
Unpacking xfonts-utils (1:7.7+6) ...
Selecting previously unselected package lmodern.
Preparing to unpack .../071-lmodern_2.004.5-6.1_all.deb ...
Unpacking lmodern (2.004.5-6.1) ...
Selecting previously unselected package texlive-luatex.
Preparing to unpack .../072-texlive-luatex_2021.20210921-1_all.deb ...
Unpacking texlive-luatex (2021.20210921-1) ...
Selecting previously unselected package texlive-plain-generic.
Preparing to unpack .../073-texlive-plain-generic_2021.20210921-1_all.deb ...
Unpacking texlive-plain-generic (2021.20210921-1) ...
Selecting previously unselected package texlive-extra-utils.
Preparing to unpack .../074-texlive-extra-utils_2021.20210921-1_all.deb ...
Unpacking texlive-extra-utils (2021.20210921-1) ...
Selecting previously unselected package libapache-pom-java.
Preparing to unpack .../075-libapache-pom-java_18-1_all.deb ...
Unpacking libapache-pom-java (18-1) ...
Selecting previously unselected package libcommons-parent-java.
Preparing to unpack .../076-libcommons-parent-java_43-1_all.deb ...
Unpacking libcommons-parent-java (43-1) ...
Selecting previously unselected package libcommons-logging-java.
Preparing to unpack .../077-libcommons-logging-java_1.2-2_all.deb ...
Unpacking libcommons-logging-java (1.2-2) ...
Selecting previously unselected package libfontbox-java.
Preparing to unpack .../078-libfontbox-java_1%3a1.8.16-2_all.deb ...
Unpacking libfontbox-java (1:1.8.16-2) ...
Selecting previously unselected package libpdfbox-java.
Preparing to unpack .../079-libpdfbox-java_1%3a1.8.16-2_all.deb ...
Unpacking libpdfbox-java (1:1.8.16-2) ...
Selecting previously unselected package preview-latex-style.
Preparing to unpack .../080-preview-latex-style_12.2-1_all.deb ...
Unpacking preview-latex-style (12.2-1) ...
Selecting previously unselected package texlive-pictures.
Preparing to unpack .../081-texlive-pictures_2021.20210921-1_all.deb ...
Unpacking texlive-pictures (2021.20210921-1) ...
Selecting previously unselected package texlive-latex-extra.
Preparing to unpack .../082-texlive-latex-extra_2021.20210921-1_all.deb ...
Unpacking texlive-latex-extra (2021.20210921-1) ...
Selecting previously unselected package fonts-gfs-baskerville.
Preparing to unpack .../083-fonts-gfs-baskerville_1.1-6_all.deb ...
Unpacking fonts-gfs-baskerville (1.1-6) ...
Selecting previously unselected package fonts-gfs-porson.
Preparing to unpack .../084-fonts-gfs-porson_1.1-7_all.deb ...
Unpacking fonts-gfs-porson (1.1-7) ...
Selecting previously unselected package texlive-lang-greek.
Preparing to unpack .../085-texlive-lang-greek_2021.20210921-1_all.deb ...
Unpacking texlive-lang-greek (2021.20210921-1) ...
Selecting previously unselected package texlive-science.
Preparing to unpack .../086-texlive-science_2021.20210921-1_all.deb ...
Unpacking texlive-science (2021.20210921-1) ...
Selecting previously unselected package libxslt1.1:amd64.
Preparing to unpack .../087-libxslt1.1_1.1.34-4_amd64.deb ...
Unpacking libxslt1.1:amd64 (1.1.34-4) ...
Selecting previously unselected package xsltproc.
Preparing to unpack .../088-xsltproc_1.1.34-4_amd64.deb ...
Unpacking xsltproc (1.1.34-4) ...
Selecting previously unselected package dblatex.
Preparing to unpack .../089-dblatex_0.3.12py3-1_all.deb ...
Unpacking dblatex (0.3.12py3-1) ...
Selecting previously unselected package dbus-user-session.
Preparing to unpack .../090-dbus-user-session_1.12.20-3_amd64.deb ...
Unpacking dbus-user-session (1.12.20-3) ...
Selecting previously unselected package libdconf1:amd64.
Preparing to unpack .../091-libdconf1_0.40.0-2_amd64.deb ...
Unpacking libdconf1:amd64 (0.40.0-2) ...
Selecting previously unselected package dconf-service.
Preparing to unpack .../092-dconf-service_0.40.0-2_amd64.deb ...
Unpacking dconf-service (0.40.0-2) ...
Selecting previously unselected package dconf-gsettings-backend:amd64.
Preparing to unpack .../093-dconf-gsettings-backend_0.40.0-2_amd64.deb ...
Unpacking dconf-gsettings-backend:amd64 (0.40.0-2) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../094-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../095-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../096-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../097-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../098-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../099-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../100-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../101-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../102-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../103-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../104-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../105-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package dh-exec.
Preparing to unpack .../106-dh-exec_0.23.4_amd64.deb ...
Unpacking dh-exec (0.23.4) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../107-python3-lib2to3_3.9.7-1_all.deb ...
Unpacking python3-lib2to3 (3.9.7-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../108-python3-distutils_3.9.7-1_all.deb ...
Unpacking python3-distutils (3.9.7-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../109-dh-python_5.20211022.1_all.deb ...
Unpacking dh-python (5.20211022.1) ...
Selecting previously unselected package libnspr4:amd64.
Preparing to unpack .../110-libnspr4_2%3a4.32-1_amd64.deb ...
Unpacking libnspr4:amd64 (2:4.32-1) ...
Selecting previously unselected package libnss3:amd64.
Preparing to unpack .../111-libnss3_2%3a3.70-1_amd64.deb ...
Unpacking libnss3:amd64 (2:3.70-1) ...
Selecting previously unselected package libpoppler102:amd64.
Preparing to unpack .../112-libpoppler102_20.09.0-3.1_amd64.deb ...
Unpacking libpoppler102:amd64 (20.09.0-3.1) ...
Selecting previously unselected package extractpdfmark.
Preparing to unpack .../113-extractpdfmark_1.1.0-1.1_amd64.deb ...
Unpacking extractpdfmark (1.1.0-1.1) ...
Selecting previously unselected package fontconfig.
Preparing to unpack .../114-fontconfig_2.13.1-4.2_amd64.deb ...
Unpacking fontconfig (2.13.1-4.2) ...
Selecting previously unselected package fontforge-common.
Preparing to unpack .../115-fontforge-common_1%3a20201107~dfsg-4_all.deb ...
Unpacking fontforge-common (1:20201107~dfsg-4) ...
Selecting previously unselected package libgif7:amd64.
Preparing to unpack .../116-libgif7_5.1.9-2_amd64.deb ...
Unpacking libgif7:amd64 (5.1.9-2) ...
Selecting previously unselected package libpython3.9:amd64.
Preparing to unpack .../117-libpython3.9_3.9.7-4_amd64.deb ...
Unpacking libpython3.9:amd64 (3.9.7-4) ...
Selecting previously unselected package libspiro1:amd64.
Preparing to unpack .../118-libspiro1_1%3a20200505-2_amd64.deb ...
Unpacking libspiro1:amd64 (1:20200505-2) ...
Selecting previously unselected package libuninameslist1:amd64.
Preparing to unpack .../119-libuninameslist1_20210917-1_amd64.deb ...
Unpacking libuninameslist1:amd64 (20210917-1) ...
Selecting previously unselected package libwoff1:amd64.
Preparing to unpack .../120-libwoff1_1.0.2-1+b1_amd64.deb ...
Unpacking libwoff1:amd64 (1.0.2-1+b1) ...
Selecting previously unselected package libfontforge4:amd64.
Preparing to unpack .../121-libfontforge4_1%3a20201107~dfsg-4_amd64.deb ...
Unpacking libfontforge4:amd64 (1:20201107~dfsg-4) ...
Selecting previously unselected package libatk1.0-data.
Preparing to unpack .../122-libatk1.0-data_2.36.0-2_all.deb ...
Unpacking libatk1.0-data (2.36.0-2) ...
Selecting previously unselected package libatk1.0-0:amd64.
Preparing to unpack .../123-libatk1.0-0_2.36.0-2_amd64.deb ...
Unpacking libatk1.0-0:amd64 (2.36.0-2) ...
Selecting previously unselected package libatspi2.0-0:amd64.
Preparing to unpack .../124-libatspi2.0-0_2.42.0-1_amd64.deb ...
Unpacking libatspi2.0-0:amd64 (2.42.0-1) ...
Selecting previously unselected package libatk-bridge2.0-0:amd64.
Preparing to unpack .../125-libatk-bridge2.0-0_2.38.0-2_amd64.deb ...
Unpacking libatk-bridge2.0-0:amd64 (2.38.0-2) ...
Selecting previously unselected package libcairo-gobject2:amd64.
Preparing to unpack .../126-libcairo-gobject2_1.16.0-5_amd64.deb ...
Unpacking libcairo-gobject2:amd64 (1.16.0-5) ...
Selecting previously unselected package libcolord2:amd64.
Preparing to unpack .../127-libcolord2_1.4.5-3_amd64.deb ...
Unpacking libcolord2:amd64 (1.4.5-3) ...
Selecting previously unselected package libavahi-common-data:amd64.
Preparing to unpack .../128-libavahi-common-data_0.8-5_amd64.deb ...
Unpacking libavahi-common-data:amd64 (0.8-5) ...
Selecting previously unselected package libavahi-common3:amd64.
Preparing to unpack .../129-libavahi-common3_0.8-5_amd64.deb ...
Unpacking libavahi-common3:amd64 (0.8-5) ...
Selecting previously unselected package libavahi-client3:amd64.
Preparing to unpack .../130-libavahi-client3_0.8-5_amd64.deb ...
Unpacking libavahi-client3:amd64 (0.8-5) ...
Selecting previously unselected package libcups2:amd64.
Preparing to unpack .../131-libcups2_2.3.3op2-7_amd64.deb ...
Unpacking libcups2:amd64 (2.3.3op2-7) ...
Selecting previously unselected package libepoxy0:amd64.
Preparing to unpack .../132-libepoxy0_1.5.9-2_amd64.deb ...
Unpacking libepoxy0:amd64 (1.5.9-2) ...
Selecting previously unselected package libfribidi0:amd64.
Preparing to unpack .../133-libfribidi0_1.0.8-2_amd64.deb ...
Unpacking libfribidi0:amd64 (1.0.8-2) ...
Selecting previously unselected package libpango-1.0-0:amd64.
Preparing to unpack .../134-libpango-1.0-0_1.48.10+ds1-1_amd64.deb ...
Unpacking libpango-1.0-0:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package libpangoft2-1.0-0:amd64.
Preparing to unpack .../135-libpangoft2-1.0-0_1.48.10+ds1-1_amd64.deb ...
Unpacking libpangoft2-1.0-0:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package libpangocairo-1.0-0:amd64.
Preparing to unpack .../136-libpangocairo-1.0-0_1.48.10+ds1-1_amd64.deb ...
Unpacking libpangocairo-1.0-0:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package libwayland-client0:amd64.
Preparing to unpack .../137-libwayland-client0_1.19.0-2+b1_amd64.deb ...
Unpacking libwayland-client0:amd64 (1.19.0-2+b1) ...
Selecting previously unselected package libwayland-cursor0:amd64.
Preparing to unpack .../138-libwayland-cursor0_1.19.0-2+b1_amd64.deb ...
Unpacking libwayland-cursor0:amd64 (1.19.0-2+b1) ...
Selecting previously unselected package libwayland-egl1:amd64.
Preparing to unpack .../139-libwayland-egl1_1.19.0-2+b1_amd64.deb ...
Unpacking libwayland-egl1:amd64 (1.19.0-2+b1) ...
Selecting previously unselected package libxcomposite1:amd64.
Preparing to unpack .../140-libxcomposite1_1%3a0.4.5-1_amd64.deb ...
Unpacking libxcomposite1:amd64 (1:0.4.5-1) ...
Selecting previously unselected package libxfixes3:amd64.
Preparing to unpack .../141-libxfixes3_1%3a5.0.3-2_amd64.deb ...
Unpacking libxfixes3:amd64 (1:5.0.3-2) ...
Selecting previously unselected package libxcursor1:amd64.
Preparing to unpack .../142-libxcursor1_1%3a1.2.0-2_amd64.deb ...
Unpacking libxcursor1:amd64 (1:1.2.0-2) ...
Selecting previously unselected package libxdamage1:amd64.
Preparing to unpack .../143-libxdamage1_1%3a1.1.5-2_amd64.deb ...
Unpacking libxdamage1:amd64 (1:1.1.5-2) ...
Selecting previously unselected package libxinerama1:amd64.
Preparing to unpack .../144-libxinerama1_2%3a1.1.4-2_amd64.deb ...
Unpacking libxinerama1:amd64 (2:1.1.4-2) ...
Selecting previously unselected package xkb-data.
Preparing to unpack .../145-xkb-data_2.33-1_all.deb ...
Unpacking xkb-data (2.33-1) ...
Selecting previously unselected package libxkbcommon0:amd64.
Preparing to unpack .../146-libxkbcommon0_1.3.1-1_amd64.deb ...
Unpacking libxkbcommon0:amd64 (1.3.1-1) ...
Selecting previously unselected package libxrandr2:amd64.
Preparing to unpack .../147-libxrandr2_2%3a1.5.2-1_amd64.deb ...
Unpacking libxrandr2:amd64 (2:1.5.2-1) ...
Selecting previously unselected package libgtk-3-common.
Preparing to unpack .../148-libgtk-3-common_3.24.30-3_all.deb ...
Unpacking libgtk-3-common (3.24.30-3) ...
Selecting previously unselected package libgtk-3-0:amd64.
Preparing to unpack .../149-libgtk-3-0_3.24.30-3_amd64.deb ...
Unpacking libgtk-3-0:amd64 (3.24.30-3) ...
Selecting previously unselected package fontforge.
Preparing to unpack .../150-fontforge_1%3a20201107~dfsg-4_amd64.deb ...
Unpacking fontforge (1:20201107~dfsg-4) ...
Selecting previously unselected package fonts-linuxlibertine.
Preparing to unpack .../151-fonts-linuxlibertine_5.3.0-6_all.deb ...
Unpacking fonts-linuxlibertine (5.3.0-6) ...
Selecting previously unselected package libgs9-common.
Preparing to unpack .../152-libgs9-common_9.54.0~dfsg-5_all.deb ...
Unpacking libgs9-common (9.54.0~dfsg-5) ...
Selecting previously unselected package libidn12:amd64.
Preparing to unpack .../153-libidn12_1.38-4_amd64.deb ...
Unpacking libidn12:amd64 (1.38-4) ...
Selecting previously unselected package libijs-0.35:amd64.
Preparing to unpack .../154-libijs-0.35_0.35-15_amd64.deb ...
Unpacking libijs-0.35:amd64 (0.35-15) ...
Selecting previously unselected package libjbig2dec0:amd64.
Preparing to unpack .../155-libjbig2dec0_0.19-3_amd64.deb ...
Unpacking libjbig2dec0:amd64 (0.19-3) ...
Selecting previously unselected package libgs9:amd64.
Preparing to unpack .../156-libgs9_9.54.0~dfsg-5_amd64.deb ...
Unpacking libgs9:amd64 (9.54.0~dfsg-5) ...
Selecting previously unselected package ghostscript.
Preparing to unpack .../157-ghostscript_9.54.0~dfsg-5_amd64.deb ...
Unpacking ghostscript (9.54.0~dfsg-5) ...
Selecting previously unselected package libgirepository-1.0-1:amd64.
Preparing to unpack .../158-libgirepository-1.0-1_1.70.0-2_amd64.deb ...
Unpacking libgirepository-1.0-1:amd64 (1.70.0-2) ...
Selecting previously unselected package gir1.2-glib-2.0:amd64.
Preparing to unpack .../159-gir1.2-glib-2.0_1.70.0-2_amd64.deb ...
Unpacking gir1.2-glib-2.0:amd64 (1.70.0-2) ...
Selecting previously unselected package gir1.2-freedesktop:amd64.
Preparing to unpack .../160-gir1.2-freedesktop_1.70.0-2_amd64.deb ...
Unpacking gir1.2-freedesktop:amd64 (1.70.0-2) ...
Selecting previously unselected package gir1.2-harfbuzz-0.0:amd64.
Preparing to unpack .../161-gir1.2-harfbuzz-0.0_2.7.4-1_amd64.deb ...
Unpacking gir1.2-harfbuzz-0.0:amd64 (2.7.4-1) ...
Selecting previously unselected package libxft2:amd64.
Preparing to unpack .../162-libxft2_2.3.2-2_amd64.deb ...
Unpacking libxft2:amd64 (2.3.2-2) ...
Selecting previously unselected package libpangoxft-1.0-0:amd64.
Preparing to unpack .../163-libpangoxft-1.0-0_1.48.10+ds1-1_amd64.deb ...
Unpacking libpangoxft-1.0-0:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package gir1.2-pango-1.0:amd64.
Preparing to unpack .../164-gir1.2-pango-1.0_1.48.10+ds1-1_amd64.deb ...
Unpacking gir1.2-pango-1.0:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package groff.
Preparing to unpack .../165-groff_1.22.4-7_amd64.deb ...
Unpacking groff (1.22.4-7) ...
Selecting previously unselected package gsfonts.
Preparing to unpack .../166-gsfonts_1%3a8.11+urwcyr1.0.7~pre44-4.5_all.deb ...
Unpacking gsfonts (1:8.11+urwcyr1.0.7~pre44-4.5) ...
Selecting previously unselected package help2man.
Preparing to unpack .../167-help2man_1.48.5_amd64.deb ...
Unpacking help2man (1.48.5) ...
Selecting previously unselected package icu-devtools.
Preparing to unpack .../168-icu-devtools_67.1-7_amd64.deb ...
Unpacking icu-devtools (67.1-7) ...
Selecting previously unselected package imagemagick-6.q16.
Preparing to unpack .../169-imagemagick-6.q16_8%3a6.9.11.60+dfsg-1.3_amd64.deb ...
Unpacking imagemagick-6.q16 (8:6.9.11.60+dfsg-1.3) ...
Selecting previously unselected package uuid-dev:amd64.
Preparing to unpack .../170-uuid-dev_2.37.2-4_amd64.deb ...
Unpacking uuid-dev:amd64 (2.37.2-4) ...
Selecting previously unselected package libblkid-dev:amd64.
Preparing to unpack .../171-libblkid-dev_2.37.2-4_amd64.deb ...
Unpacking libblkid-dev:amd64 (2.37.2-4) ...
Selecting previously unselected package libbrotli-dev:amd64.
Preparing to unpack .../172-libbrotli-dev_1.0.9-2+b2_amd64.deb ...
Unpacking libbrotli-dev:amd64 (1.0.9-2+b2) ...
Selecting previously unselected package liblzo2-2:amd64.
Preparing to unpack .../173-liblzo2-2_2.10-2_amd64.deb ...
Unpacking liblzo2-2:amd64 (2.10-2) ...
Selecting previously unselected package libcairo-script-interpreter2:amd64.
Preparing to unpack .../174-libcairo-script-interpreter2_1.16.0-5_amd64.deb ...
Unpacking libcairo-script-interpreter2:amd64 (1.16.0-5) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../175-libexpat1-dev_2.4.1-3_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.4.1-3) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../176-zlib1g-dev_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Selecting previously unselected package libpng-dev:amd64.
Preparing to unpack .../177-libpng-dev_1.6.37-3_amd64.deb ...
Unpacking libpng-dev:amd64 (1.6.37-3) ...
Selecting previously unselected package libfreetype-dev:amd64.
Preparing to unpack .../178-libfreetype-dev_2.11.0+dfsg-1_amd64.deb ...
Unpacking libfreetype-dev:amd64 (2.11.0+dfsg-1) ...
Selecting previously unselected package libfreetype6-dev:amd64.
Preparing to unpack .../179-libfreetype6-dev_2.11.0+dfsg-1_amd64.deb ...
Unpacking libfreetype6-dev:amd64 (2.11.0+dfsg-1) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../180-pkg-config_0.29.2-1_amd64.deb ...
Unpacking pkg-config (0.29.2-1) ...
Selecting previously unselected package libfontconfig-dev:amd64.
Preparing to unpack .../181-libfontconfig-dev_2.13.1-4.2_amd64.deb ...
Unpacking libfontconfig-dev:amd64 (2.13.1-4.2) ...
Selecting previously unselected package libfontconfig1-dev:amd64.
Preparing to unpack .../182-libfontconfig1-dev_2.13.1-4.2_amd64.deb ...
Unpacking libfontconfig1-dev:amd64 (2.13.1-4.2) ...
Selecting previously unselected package xorg-sgml-doctools.
Preparing to unpack .../183-xorg-sgml-doctools_1%3a1.11-1.1_all.deb ...
Unpacking xorg-sgml-doctools (1:1.11-1.1) ...
Selecting previously unselected package x11proto-dev.
Preparing to unpack .../184-x11proto-dev_2021.5-1_all.deb ...
Unpacking x11proto-dev (2021.5-1) ...
Selecting previously unselected package libxau-dev:amd64.
Preparing to unpack .../185-libxau-dev_1%3a1.0.9-1_amd64.deb ...
Unpacking libxau-dev:amd64 (1:1.0.9-1) ...
Selecting previously unselected package libxdmcp-dev:amd64.
Preparing to unpack .../186-libxdmcp-dev_1%3a1.1.2-3_amd64.deb ...
Unpacking libxdmcp-dev:amd64 (1:1.1.2-3) ...
Selecting previously unselected package xtrans-dev.
Preparing to unpack .../187-xtrans-dev_1.4.0-1_all.deb ...
Unpacking xtrans-dev (1.4.0-1) ...
Selecting previously unselected package libpthread-stubs0-dev:amd64.
Preparing to unpack .../188-libpthread-stubs0-dev_0.4-1_amd64.deb ...
Unpacking libpthread-stubs0-dev:amd64 (0.4-1) ...
Selecting previously unselected package libxcb1-dev:amd64.
Preparing to unpack .../189-libxcb1-dev_1.14-3_amd64.deb ...
Unpacking libxcb1-dev:amd64 (1.14-3) ...
Selecting previously unselected package libx11-dev:amd64.
Preparing to unpack .../190-libx11-dev_2%3a1.7.2-2+b1_amd64.deb ...
Unpacking libx11-dev:amd64 (2:1.7.2-2+b1) ...
Selecting previously unselected package libxrender-dev:amd64.
Preparing to unpack .../191-libxrender-dev_1%3a0.9.10-1_amd64.deb ...
Unpacking libxrender-dev:amd64 (1:0.9.10-1) ...
Selecting previously unselected package libxext-dev:amd64.
Preparing to unpack .../192-libxext-dev_2%3a1.3.4-1_amd64.deb ...
Unpacking libxext-dev:amd64 (2:1.3.4-1) ...
Selecting previously unselected package libice-dev:amd64.
Preparing to unpack .../193-libice-dev_2%3a1.0.10-1_amd64.deb ...
Unpacking libice-dev:amd64 (2:1.0.10-1) ...
Selecting previously unselected package libsm-dev:amd64.
Preparing to unpack .../194-libsm-dev_2%3a1.2.3-1_amd64.deb ...
Unpacking libsm-dev:amd64 (2:1.2.3-1) ...
Selecting previously unselected package libpixman-1-dev:amd64.
Preparing to unpack .../195-libpixman-1-dev_0.40.0-1_amd64.deb ...
Unpacking libpixman-1-dev:amd64 (0.40.0-1) ...
Selecting previously unselected package libxcb-render0-dev:amd64.
Preparing to unpack .../196-libxcb-render0-dev_1.14-3_amd64.deb ...
Unpacking libxcb-render0-dev:amd64 (1.14-3) ...
Selecting previously unselected package libxcb-shm0-dev:amd64.
Preparing to unpack .../197-libxcb-shm0-dev_1.14-3_amd64.deb ...
Unpacking libxcb-shm0-dev:amd64 (1.14-3) ...
Selecting previously unselected package libffi-dev:amd64.
Preparing to unpack .../198-libffi-dev_3.4.2-3_amd64.deb ...
Unpacking libffi-dev:amd64 (3.4.2-3) ...
Selecting previously unselected package libglib2.0-data.
Preparing to unpack .../199-libglib2.0-data_2.70.0-3_all.deb ...
Unpacking libglib2.0-data (2.70.0-3) ...
Selecting previously unselected package libglib2.0-bin.
Preparing to unpack .../200-libglib2.0-bin_2.70.0-3_amd64.deb ...
Unpacking libglib2.0-bin (2.70.0-3) ...
Selecting previously unselected package libglib2.0-dev-bin.
Preparing to unpack .../201-libglib2.0-dev-bin_2.70.0-3_amd64.deb ...
Unpacking libglib2.0-dev-bin (2.70.0-3) ...
Selecting previously unselected package libsepol1-dev:amd64.
Preparing to unpack .../202-libsepol1-dev_3.1-1_amd64.deb ...
Unpacking libsepol1-dev:amd64 (3.1-1) ...
Selecting previously unselected package libpcre2-16-0:amd64.
Preparing to unpack .../203-libpcre2-16-0_10.36-2_amd64.deb ...
Unpacking libpcre2-16-0:amd64 (10.36-2) ...
Selecting previously unselected package libpcre2-32-0:amd64.
Preparing to unpack .../204-libpcre2-32-0_10.36-2_amd64.deb ...
Unpacking libpcre2-32-0:amd64 (10.36-2) ...
Selecting previously unselected package libpcre2-posix2:amd64.
Preparing to unpack .../205-libpcre2-posix2_10.36-2_amd64.deb ...
Unpacking libpcre2-posix2:amd64 (10.36-2) ...
Selecting previously unselected package libpcre2-dev:amd64.
Preparing to unpack .../206-libpcre2-dev_10.36-2_amd64.deb ...
Unpacking libpcre2-dev:amd64 (10.36-2) ...
Selecting previously unselected package libselinux1-dev:amd64.
Preparing to unpack .../207-libselinux1-dev_3.1-3_amd64.deb ...
Unpacking libselinux1-dev:amd64 (3.1-3) ...
Selecting previously unselected package libmount-dev:amd64.
Preparing to unpack .../208-libmount-dev_2.37.2-4_amd64.deb ...
Unpacking libmount-dev:amd64 (2.37.2-4) ...
Selecting previously unselected package libpcre16-3:amd64.
Preparing to unpack .../209-libpcre16-3_2%3a8.39-13_amd64.deb ...
Unpacking libpcre16-3:amd64 (2:8.39-13) ...
Selecting previously unselected package libpcre32-3:amd64.
Preparing to unpack .../210-libpcre32-3_2%3a8.39-13_amd64.deb ...
Unpacking libpcre32-3:amd64 (2:8.39-13) ...
Selecting previously unselected package libpcrecpp0v5:amd64.
Preparing to unpack .../211-libpcrecpp0v5_2%3a8.39-13_amd64.deb ...
Unpacking libpcrecpp0v5:amd64 (2:8.39-13) ...
Selecting previously unselected package libpcre3-dev:amd64.
Preparing to unpack .../212-libpcre3-dev_2%3a8.39-13_amd64.deb ...
Unpacking libpcre3-dev:amd64 (2:8.39-13) ...
Selecting previously unselected package libglib2.0-dev:amd64.
Preparing to unpack .../213-libglib2.0-dev_2.70.0-3_amd64.deb ...
Unpacking libglib2.0-dev:amd64 (2.70.0-3) ...
Selecting previously unselected package libcairo2-dev:amd64.
Preparing to unpack .../214-libcairo2-dev_1.16.0-5_amd64.deb ...
Unpacking libcairo2-dev:amd64 (1.16.0-5) ...
Selecting previously unselected package libdatrie-dev:amd64.
Preparing to unpack .../215-libdatrie-dev_0.2.13-2_amd64.deb ...
Unpacking libdatrie-dev:amd64 (0.2.13-2) ...
Selecting previously unselected package libfl2:amd64.
Preparing to unpack .../216-libfl2_2.6.4-8_amd64.deb ...
Unpacking libfl2:amd64 (2.6.4-8) ...
Selecting previously unselected package libfl-dev:amd64.
Preparing to unpack .../217-libfl-dev_2.6.4-8_amd64.deb ...
Unpacking libfl-dev:amd64 (2.6.4-8) ...
Selecting previously unselected package libfribidi-dev:amd64.
Preparing to unpack .../218-libfribidi-dev_1.0.8-2_amd64.deb ...
Unpacking libfribidi-dev:amd64 (1.0.8-2) ...
Selecting previously unselected package libgmpxx4ldbl:amd64.
Preparing to unpack .../219-libgmpxx4ldbl_2%3a6.2.1+dfsg-2_amd64.deb ...
Unpacking libgmpxx4ldbl:amd64 (2:6.2.1+dfsg-2) ...
Selecting previously unselected package libgmp-dev:amd64.
Preparing to unpack .../220-libgmp-dev_2%3a6.2.1+dfsg-2_amd64.deb ...
Unpacking libgmp-dev:amd64 (2:6.2.1+dfsg-2) ...
Selecting previously unselected package libgraphite2-dev:amd64.
Preparing to unpack .../221-libgraphite2-dev_1.3.14-1_amd64.deb ...
Unpacking libgraphite2-dev:amd64 (1.3.14-1) ...
Selecting previously unselected package libharfbuzz-icu0:amd64.
Preparing to unpack .../222-libharfbuzz-icu0_2.7.4-1_amd64.deb ...
Unpacking libharfbuzz-icu0:amd64 (2.7.4-1) ...
Selecting previously unselected package libharfbuzz-gobject0:amd64.
Preparing to unpack .../223-libharfbuzz-gobject0_2.7.4-1_amd64.deb ...
Unpacking libharfbuzz-gobject0:amd64 (2.7.4-1) ...
Selecting previously unselected package libicu-dev:amd64.
Preparing to unpack .../224-libicu-dev_67.1-7_amd64.deb ...
Unpacking libicu-dev:amd64 (67.1-7) ...
Selecting previously unselected package libharfbuzz-dev:amd64.
Preparing to unpack .../225-libharfbuzz-dev_2.7.4-1_amd64.deb ...
Unpacking libharfbuzz-dev:amd64 (2.7.4-1) ...
Selecting previously unselected package libltdl-dev:amd64.
Preparing to unpack .../226-libltdl-dev_2.4.6-15_amd64.deb ...
Unpacking libltdl-dev:amd64 (2.4.6-15) ...
Selecting previously unselected package libncurses6:amd64.
Preparing to unpack .../227-libncurses6_6.2+20210905-1_amd64.deb ...
Unpacking libncurses6:amd64 (6.2+20210905-1) ...
Selecting previously unselected package libncurses-dev:amd64.
Preparing to unpack .../228-libncurses-dev_6.2+20210905-1_amd64.deb ...
Unpacking libncurses-dev:amd64 (6.2+20210905-1) ...
Selecting previously unselected package libncurses5-dev:amd64.
Preparing to unpack .../229-libncurses5-dev_6.2+20210905-1_amd64.deb ...
Unpacking libncurses5-dev:amd64 (6.2+20210905-1) ...
Selecting previously unselected package libnetpbm10.
Preparing to unpack .../230-libnetpbm10_2%3a10.0-15.4_amd64.deb ...
Unpacking libnetpbm10 (2:10.0-15.4) ...
Selecting previously unselected package libthai-dev:amd64.
Preparing to unpack .../231-libthai-dev_0.1.28-4.1_amd64.deb ...
Unpacking libthai-dev:amd64 (0.1.28-4.1) ...
Selecting previously unselected package libxft-dev:amd64.
Preparing to unpack .../232-libxft-dev_2.3.2-2_amd64.deb ...
Unpacking libxft-dev:amd64 (2.3.2-2) ...
Selecting previously unselected package pango1.0-tools.
Preparing to unpack .../233-pango1.0-tools_1.48.10+ds1-1_amd64.deb ...
Unpacking pango1.0-tools (1.48.10+ds1-1) ...
Selecting previously unselected package libpango1.0-dev:amd64.
Preparing to unpack .../234-libpango1.0-dev_1.48.10+ds1-1_amd64.deb ...
Unpacking libpango1.0-dev:amd64 (1.48.10+ds1-1) ...
Selecting previously unselected package libpotrace0:amd64.
Preparing to unpack .../235-libpotrace0_1.16-2_amd64.deb ...
Unpacking libpotrace0:amd64 (1.16-2) ...
Selecting previously unselected package libreadline-dev:amd64.
Preparing to unpack .../236-libreadline-dev_8.1-2_amd64.deb ...
Unpacking libreadline-dev:amd64 (8.1-2) ...
Selecting previously unselected package libtext-unidecode-perl.
Preparing to unpack .../237-libtext-unidecode-perl_1.30-1_all.deb ...
Unpacking libtext-unidecode-perl (1.30-1) ...
Selecting previously unselected package libxml-namespacesupport-perl.
Preparing to unpack .../238-libxml-namespacesupport-perl_1.12-1.1_all.deb ...
Unpacking libxml-namespacesupport-perl (1.12-1.1) ...
Selecting previously unselected package libxml-sax-base-perl.
Preparing to unpack .../239-libxml-sax-base-perl_1.09-1.1_all.deb ...
Unpacking libxml-sax-base-perl (1.09-1.1) ...
Selecting previously unselected package libxml-sax-perl.
Preparing to unpack .../240-libxml-sax-perl_1.02+dfsg-3_all.deb ...
Unpacking libxml-sax-perl (1.02+dfsg-3) ...
Selecting previously unselected package libxml-libxml-perl.
Preparing to unpack .../241-libxml-libxml-perl_2.0134+dfsg-2+b1_amd64.deb ...
Unpacking libxml-libxml-perl (2.0134+dfsg-2+b1) ...
Selecting previously unselected package potrace.
Preparing to unpack .../242-potrace_1.16-2_amd64.deb ...
Unpacking potrace (1.16-2) ...
Selecting previously unselected package mftrace.
Preparing to unpack .../243-mftrace_1.2.20+git20191022.3b4bc2e-2_amd64.deb ...
Unpacking mftrace (1.2.20+git20191022.3b4bc2e-2) ...
Selecting previously unselected package netpbm.
Preparing to unpack .../244-netpbm_2%3a10.0-15.4_amd64.deb ...
Unpacking netpbm (2:10.0-15.4) ...
Selecting previously unselected package texi2html.
Preparing to unpack .../245-texi2html_1.82+dfsg1-6_all.deb ...
Unpacking texi2html (1.82+dfsg1-6) ...
Selecting previously unselected package texinfo.
Preparing to unpack .../246-texinfo_6.8-3_amd64.deb ...
Unpacking texinfo (6.8-3) ...
Selecting previously unselected package texlive-lang-cyrillic.
Preparing to unpack .../247-texlive-lang-cyrillic_2021.20210921-1_all.deb ...
Unpacking texlive-lang-cyrillic (2021.20210921-1) ...
Selecting previously unselected package texlive-metapost.
Preparing to unpack .../248-texlive-metapost_2021.20210921-1_all.deb ...
Unpacking texlive-metapost (2021.20210921-1) ...
Selecting previously unselected package zip.
Preparing to unpack .../249-zip_3.0-12_amd64.deb ...
Unpacking zip (3.0-12) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../250-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up media-types (4.0.0) ...
Setting up libpcrecpp0v5:amd64 (2:8.39-13) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up libgraphite2-3:amd64 (1.3.14-1) ...
Setting up liblcms2-2:amd64 (2.12~rc1-2) ...
Setting up libpixman-1-0:amd64 (0.40.0-1) ...
Setting up systemd-sysv (249.5-1) ...
Setting up libxau6:amd64 (1:1.0.9-1) ...
Setting up imagemagick-6-common (8:6.9.11.60+dfsg-1.3) ...
Setting up libxdmcp6:amd64 (1:1.1.2-3) ...
Setting up libxcb1:amd64 (1.14-3) ...
Setting up libpixman-1-dev:amd64 (0.40.0-1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libpcre16-3:amd64 (2:8.39-13) ...
Setting up fonts-gfs-porson (1.1-7) ...
Setting up hicolor-icon-theme (0.17-2) ...
Setting up libdatrie1:amd64 (0.2.13-2) ...
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libtexlua53:amd64 (2021.20210626.59705-1) ...
Setting up libxcb-render0:amd64 (1.14-3) ...
Setting up libspiro1:amd64 (1:20200505-2) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libglib2.0-0:amd64 (2.70.0-3) ...
Setting up distro-info-data (0.52) ...
Setting up libijs-0.35:amd64 (0.35-15) ...
Setting up libaom0:amd64 (1.0.0.errata1.avif-1) ...
Setting up libtexluajit2:amd64 (2021.20210626.59705-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libbrotli1:amd64 (1.0.9-2+b2) ...
Setting up libfontbox-java (1:1.8.16-2) ...
Setting up libsqlite3-0:amd64 (3.36.0-2) ...
Setting up libgdk-pixbuf2.0-common (2.42.6+dfsg-2) ...
Setting up fonts-freefont-otf (20120503-10) ...
Setting up x11-common (1:7.7+23) ...
Running in chroot, ignoring request.
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of restart.
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up libsepol1-dev:amd64 (3.1-1) ...
Setting up libdeflate0:amd64 (1.8-1) ...
Setting up libxml-namespacesupport-perl (1.12-1.1) ...
Setting up gettext-base (0.21-4) ...
Setting up xkb-data (2.33-1) ...
Setting up liblzo2-2:amd64 (2.10-2) ...
Setting up libxcb-shm0:amd64 (1.14-3) ...
Setting up libzzip-0-13:amd64 (0.13.72+dfsg.1-1.1) ...
Setting up fontforge-common (1:20201107~dfsg-4) ...
Setting up file (1:5.39-3) ...
Setting up libnetpbm10 (2:10.0-15.4) ...
Setting up fonts-urw-base35 (20200910-1) ...
Setting up libffi-dev:amd64 (3.4.2-3) ...
Setting up libpthread-stubs0-dev:amd64 (0.4-1) ...
Setting up libjbig0:amd64 (2.1-3.1+b2) ...
Setting up libpcre2-16-0:amd64 (10.36-2) ...
Setting up libcolord2:amd64 (1.4.5-3) ...
Setting up poppler-data (0.4.11-1) ...
Setting up libdconf1:amd64 (0.40.0-2) ...
Setting up libxml-sax-base-perl (1.09-1.1) ...
Setting up xtrans-dev (1.4.0-1) ...
Setting up libgraphite2-dev:amd64 (1.3.14-1) ...
Setting up zip (3.0-12) ...
Setting up libfontenc1:amd64 (1:1.1.4-1) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libpcre2-32-0:amd64 (10.36-2) ...
Setting up libglib2.0-data (2.70.0-3) ...
Setting up libgmpxx4ldbl:amd64 (2:6.2.1+dfsg-2) ...
Setting up libexpat1-dev:amd64 (2.4.1-3) ...
Setting up libjpeg62-turbo:amd64 (1:2.0.6-4) ...
Setting up libx11-data (2:1.7.2-2) ...
Setting up libepoxy0:amd64 (1.5.9-2) ...
Setting up libnspr4:amd64 (2:4.32-1) ...
Setting up libjbig2dec0:amd64 (0.19-3) ...
Setting up libteckit0:amd64 (2.5.10+ds1-3) ...
Setting up uuid-dev:amd64 (2.37.2-4) ...
Setting up gsfonts (1:8.11+urwcyr1.0.7~pre44-4.5) ...
Setting up libapache-pom-java (18-1) ...
Setting up libavahi-common-data:amd64 (0.8-5) ...
Setting up libncurses6:amd64 (6.2+20210905-1) ...
Setting up libdbus-1-3:amd64 (1.12.20-3) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up xfonts-encodings (1:1.0.4-2.1) ...
Setting up libfribidi0:amd64 (1.0.8-2) ...
Setting up t1utils (1.41-4) ...
Setting up shared-mime-info (2.0-1) ...
Setting up libpng16-16:amd64 (1.6.37-3) ...
Setting up libpcre32-3:amd64 (2:8.39-13) ...
Setting up libidn12:amd64 (1.38-4) ...
Setting up autopoint (0.21-4) ...
Setting up libwebp6:amd64 (0.6.1-2.1) ...
Setting up icu-devtools (67.1-7) ...
Setting up pkg-config (0.29.2-1) ...
Setting up fonts-dejavu-core (2.37-2) ...
Setting up libfl2:amd64 (2.6.4-8) ...
Setting up libpcre2-posix2:amd64 (10.36-2) ...
Setting up fonts-texgyre (20180621-3.1) ...
Setting up libncursesw6:amd64 (6.2+20210905-1) ...
Setting up fonts-linuxlibertine (5.3.0-6) ...
Setting up libltdl7:amd64 (2.4.6-15) ...
Setting up libfftw3-double3:amd64 (3.3.8-2) ...
Setting up libkpathsea6:amd64 (2021.20210626.59705-1) ...
Setting up libgif7:amd64 (5.1.9-2) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Setting up libatk1.0-data (2.36.0-2) ...
Setting up libnuma1:amd64 (2.0.14-3) ...
Setting up dwz (0.14-1) ...
Setting up python-apt-common (2.3.0) ...
Setting up libdatrie-dev:amd64 (0.2.13-2) ...
Setting up liblqr-1-0:amd64 (0.4.2-2.1) ...
Setting up fonts-gfs-baskerville (1.1-6) ...
Setting up fonts-ipafont-mincho (00303-23) ...
update-alternatives: using /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf to provide /usr/share/fonts/truetype/fonts-japanese-mincho.ttf (fonts-japanese-mincho.ttf) in auto mode
Setting up sensible-utils (0.0.17) ...
Setting up libuninameslist1:amd64 (20210917-1) ...
Setting up libmime-charset-perl (1.012.2-1) ...
Setting up dbus-session-bus-common (1.12.20-3) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libxslt1.1:amd64 (1.1.34-4) ...
Setting up libmpdec3:amd64 (2.5.1-2) ...
Setting up fonts-lmodern (2.004.5-6.1) ...
Setting up libopenjp2-7:amd64 (2.4.0-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libx11-6:amd64 (2:1.7.2-2+b1) ...
Setting up libthai-data (0.1.28-4.1) ...
Setting up libgirepository-1.0-1:amd64 (1.70.0-2) ...
Setting up xorg-sgml-doctools (1:1.11-1.1) ...
Setting up sgml-base (1.30) ...
Setting up libatk1.0-0:amd64 (2.36.0-2) ...
Setting up libtiff5:amd64 (4.3.0-2) ...
Setting up libwayland-egl1:amd64 (1.19.0-2+b1) ...
Setting up libjs-jquery (3.5.1+dfsg+~3.5.5-8) ...
Setting up libdav1d5:amd64 (0.9.2-1+b1) ...
Setting up dbus-system-bus-common (1.12.20-3) ...
Setting up libtext-unidecode-perl (1.30-1) ...
Setting up libde265-0:amd64 (1.0.8-1) ...
Setting up libwebpmux3:amd64 (0.6.1-2.1) ...
Setting up libxcomposite1:amd64 (1:0.4.5-1) ...
Setting up readline-common (8.1-2) ...
Setting up libicu-dev:amd64 (67.1-7) ...
Setting up xdg-utils (1.1.3-4.1) ...
update-alternatives: using /usr/bin/xdg-open to provide /usr/bin/open (open) in auto mode
Setting up dbus-bin (1.12.20-3) ...
Setting up liblocale-gettext-perl (1.07-4+b1) ...
Setting up libbrotli-dev:amd64 (1.0.9-2+b2) ...
Setting up libsynctex2:amd64 (2021.20210626.59705-1) ...
Setting up libpopt0:amd64 (1.18-3) ...
Setting up libxkbcommon0:amd64 (1.3.1-1) ...
Setting up libpotrace0:amd64 (1.16-2) ...
Setting up libwayland-client0:amd64 (1.19.0-2+b1) ...
Setting up libgs9-common (9.54.0~dfsg-5) ...
Setting up x11proto-dev (2021.5-1) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up libblkid-dev:amd64 (2.37.2-4) ...
Setting up libice6:amd64 (2:1.0.10-1) ...
Setting up libncurses-dev:amd64 (6.2+20210905-1) ...
Setting up gettext (0.21-4) ...
Setting up libxdamage1:amd64 (1:1.1.5-2) ...
Setting up libgmp-dev:amd64 (2:6.2.1+dfsg-2) ...
Setting up libpdfbox-java (1:1.8.16-2) ...
Setting up libxau-dev:amd64 (1:1.0.9-1) ...
Setting up libxpm4:amd64 (1:3.5.12-1) ...
Setting up libpcre2-dev:amd64 (10.36-2) ...
Setting up libwoff1:amd64 (1.0.2-1+b1) ...
Setting up libxrender1:amd64 (1:0.9.10-1) ...
Setting up libice-dev:amd64 (2:1.0.10-1) ...
Setting up libtool (2.4.6-15) ...
Setting up libselinux1-dev:amd64 (3.1-3) ...
Setting up libpcre3-dev:amd64 (2:8.39-13) ...
Setting up libfribidi-dev:amd64 (1.0.8-2) ...
Setting up libwebpdemux2:amd64 (0.6.1-2.1) ...
Setting up libreadline8:amd64 (8.1-2) ...
Setting up libpng-dev:amd64 (1.6.37-3) ...
Setting up xsltproc (1.1.34-4) ...
Setting up libcommons-parent-java (43-1) ...
Setting up libavahi-common3:amd64 (0.8-5) ...
Setting up libcommons-logging-java (1.2-2) ...
Setting up libxext6:amd64 (2:1.3.4-1) ...
Setting up libglib2.0-bin (2.70.0-3) ...
Setting up m4 (1.4.18-5) ...
Setting up libnss3:amd64 (2:3.70-1) ...
Setting up dbus-daemon (1.12.20-3) ...
Setting up libreadline-dev:amd64 (8.1-2) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up help2man (1.48.5) ...
Setting up libthai0:amd64 (0.1.28-4.1) ...
Setting up libxdmcp-dev:amd64 (1:1.1.2-3) ...
Setting up libptexenc1:amd64 (2021.20210626.59705-1) ...
Setting up libfreetype6:amd64 (2.11.0+dfsg-1) ...
Setting up libxfixes3:amd64 (1:5.0.3-2) ...
Setting up dbus (1.12.20-3) ...
Running in chroot, ignoring request.
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up texi2html (1.82+dfsg1-6) ...
Setting up libxinerama1:amd64 (2:1.1.4-2) ...
Setting up libxrandr2:amd64 (2:1.5.2-1) ...
Setting up ucf (3.0043) ...
Setting up gir1.2-glib-2.0:amd64 (1.70.0-2) ...
Setting up netpbm (2:10.0-15.4) ...
Setting up autoconf (2.71-2) ...
Setting up libx265-199:amd64 (3.5-2) ...
Setting up libthai-dev:amd64 (0.1.28-4.1) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up groff-base (1.22.4-7) ...
Setting up libwayland-cursor0:amd64 (1.19.0-2+b1) ...
Setting up xml-core (0.18+nmu1) ...
Setting up libncurses5-dev:amd64 (6.2+20210905-1) ...
Setting up bison (2:3.8.2+dfsg-1) ...
update-alternatives: using /usr/bin/bison.yacc to provide /usr/bin/yacc (yacc) in auto mode
Setting up libpam-systemd:amd64 (249.5-1) ...
Setting up libharfbuzz0b:amd64 (2.7.4-1) ...
Setting up libgdk-pixbuf-2.0-0:amd64 (2.42.6+dfsg-2) ...
Setting up potrace (1.16-2) ...
Setting up libsm6:amd64 (2:1.2.3-1) ...
Setting up libavahi-client3:amd64 (0.8-5) ...
Setting up libmount-dev:amd64 (2.37.2-4) ...
Setting up rsync (3.2.3-8) ...
Running in chroot, ignoring request.
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of restart.
Setting up libpython3.9-stdlib:amd64 (3.9.7-4) ...
Setting up libpython3-stdlib:amd64 (3.9.2-3) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libpaper1:amd64 (1.1.28+b1) ...

Creating config file /etc/papersize with new version
Setting up gtk-update-icon-cache (3.24.30-3) ...
Setting up flex (2.6.4-8) ...
Setting up gir1.2-freedesktop:amd64 (1.70.0-2) ...
Setting up libharfbuzz-icu0:amd64 (2.7.4-1) ...
Setting up libxcb1-dev:amd64 (1.14-3) ...
Setting up libxi6:amd64 (2:1.8-1) ...
Setting up libsombok3:amd64 (2.4.0-2+b1) ...
Setting up libsm-dev:amd64 (2:1.2.3-1) ...
Setting up fontconfig-config (2.13.1-4.2) ...
Setting up po-debconf (1.0.21+nmu1) ...
Setting up libxcursor1:amd64 (1:1.2.0-2) ...
Setting up libheif1:amd64 (1.12.0-2+b2) ...
Setting up libx11-dev:amd64 (2:1.7.2-2+b1) ...
Setting up libharfbuzz-gobject0:amd64 (2.7.4-1) ...
Setting up libpaper-utils (1.1.28+b1) ...
Setting up libatspi2.0-0:amd64 (2.42.0-1) ...
Setting up xfonts-utils (1:7.7+6) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Created symlink /etc/systemd/system/timers.target.wants/man-db.timer → /lib/systemd/system/man-db.timer.
Setting up libxml-sax-perl (1.02+dfsg-3) ...
update-perl-sax-parsers: Registering Perl SAX parser XML::SAX::PurePerl with priority 10...
update-perl-sax-parsers: Updating overall Perl SAX parser modules info file...

Creating config file /etc/perl/XML/SAX/ParserDetails.ini with new version
Setting up gir1.2-harfbuzz-0.0:amd64 (2.7.4-1) ...
Setting up libfl-dev:amd64 (2.6.4-8) ...
Setting up libfreetype-dev:amd64 (2.11.0+dfsg-1) ...
Setting up dh-autoreconf (20) ...
Setting up tex-common (6.17) ...
update-language: texlive-base not installed and configured, doing nothing!
Setting up libatk-bridge2.0-0:amd64 (2.38.0-2) ...
Setting up libxcb-shm0-dev:amd64 (1.14-3) ...
Setting up libltdl-dev:amd64 (2.4.6-15) ...
Setting up dbus-user-session (1.12.20-3) ...
Setting up libpython3.9:amd64 (3.9.7-4) ...
Setting up adwaita-icon-theme (41.0-1) ...
update-alternatives: using /usr/share/icons/Adwaita/cursor.theme to provide /usr/share/icons/default/index.theme (x-cursor-theme) in auto mode
Setting up libunicode-linebreak-perl (0.0.20190101-1+b3) ...
Setting up libxcb-render0-dev:amd64 (1.14-3) ...
Setting up libxt6:amd64 (1:1.2.0-1) ...
Setting up libxext-dev:amd64 (2:1.3.4-1) ...
Setting up libxml-libxml-perl (2.0134+dfsg-2+b1) ...
update-perl-sax-parsers: Registering Perl SAX parser XML::LibXML::SAX::Parser with priority 50...
update-perl-sax-parsers: Registering Perl SAX parser XML::LibXML::SAX with priority 50...
update-perl-sax-parsers: Updating overall Perl SAX parser modules info file...
Replacing config file /etc/perl/XML/SAX/ParserDetails.ini with new version
Setting up libcups2:amd64 (2.3.3op2-7) ...
Setting up lmodern (2.004.5-6.1) ...
Setting up libfontconfig1:amd64 (2.13.1-4.2) ...
Setting up libxrender-dev:amd64 (1:0.9.10-1) ...
Setting up python3.9 (3.9.7-4) ...
Setting up fontconfig (2.13.1-4.2) ...
Regenerating fonts cache... done.
Setting up libxft2:amd64 (2.3.2-2) ...
Setting up libxmu6:amd64 (2:1.1.2-2+b3) ...
Setting up libgs9:amd64 (9.54.0~dfsg-5) ...
Setting up preview-latex-style (12.2-1) ...
Setting up libpango-1.0-0:amd64 (1.48.10+ds1-1) ...
Setting up debhelper (13.5.2) ...
Setting up dconf-service (0.40.0-2) ...
Setting up python3 (3.9.2-3) ...
Setting up dh-exec (0.23.4) ...
Setting up libxaw7:amd64 (2:1.0.13-1.1) ...
Setting up libfontforge4:amd64 (1:20201107~dfsg-4) ...
Setting up ghostscript (9.54.0~dfsg-5) ...
Setting up libcairo2:amd64 (1.16.0-5) ...
Setting up libfreetype6-dev:amd64 (2.11.0+dfsg-1) ...
Setting up groff (1.22.4-7) ...
Setting up libmagickcore-6.q16-6:amd64 (8:6.9.11.60+dfsg-1.3) ...
Setting up texinfo (6.8-3) ...
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
Running mktexlsr. This may take some time. ... done.
Setting up libpoppler102:amd64 (20.09.0-3.1) ...
Setting up texlive-binaries (2021.20210626.59705-1) ...
update-alternatives: using /usr/bin/xdvi-xaw to provide /usr/bin/xdvi.bin (xdvi.bin) in auto mode
update-alternatives: using /usr/bin/bibtex.original to provide /usr/bin/bibtex (bibtex) in auto mode
Setting up libmagickwand-6.q16-6:amd64 (8:6.9.11.60+dfsg-1.3) ...
Setting up libcairo-gobject2:amd64 (1.16.0-5) ...
Setting up libpangoft2-1.0-0:amd64 (1.48.10+ds1-1) ...
Setting up python3-lib2to3 (3.9.7-1) ...
Setting up texlive-base (2021.20210921-1) ...
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
/usr/bin/which: this version of `which' is deprecated; use `command -v' in scripts instead.
tl-paper: setting paper size for dvips to a4: /var/lib/texmf/dvips/config/config-paper.ps
tl-paper: setting paper size for dvipdfmx to a4: /var/lib/texmf/dvipdfmx/dvipdfmx-paper.cfg
tl-paper: setting paper size for xdvi to a4: /var/lib/texmf/xdvi/XDvi-paper
tl-paper: setting paper size for pdftex to a4: /var/lib/texmf/tex/generic/tex-ini-files/pdftexconfig.tex
Setting up libpangocairo-1.0-0:amd64 (1.48.10+ds1-1) ...
Setting up python3-distutils (3.9.7-1) ...
Setting up dh-python (5.20211022.1) ...
Setting up libcairo-script-interpreter2:amd64 (1.16.0-5) ...
Setting up libglib2.0-dev-bin (2.70.0-3) ...
Setting up texlive-metapost (2021.20210921-1) ...
Setting up libpangoxft-1.0-0:amd64 (1.48.10+ds1-1) ...
Setting up dconf-gsettings-backend:amd64 (0.40.0-2) ...
Setting up extractpdfmark (1.1.0-1.1) ...
Setting up texlive-luatex (2021.20210921-1) ...
Setting up libfontconfig-dev:amd64 (2.13.1-4.2) ...
Setting up python3-apt (2.3.0) ...
Setting up pango1.0-tools (1.48.10+ds1-1) ...
Setting up texlive-plain-generic (2021.20210921-1) ...
Setting up texlive-lang-greek (2021.20210921-1) ...
Setting up gir1.2-pango-1.0:amd64 (1.48.10+ds1-1) ...
Setting up libglib2.0-dev:amd64 (2.70.0-3) ...
Setting up texlive-latex-base (2021.20210921-1) ...
Setting up texlive-extra-utils (2021.20210921-1) ...
Setting up texlive-latex-recommended (2021.20210921-1) ...
Setting up texlive-pictures (2021.20210921-1) ...
Setting up texlive-lang-cyrillic (2021.20210921-1) ...
Setting up imagemagick-6.q16 (8:6.9.11.60+dfsg-1.3) ...
update-alternatives: using /usr/bin/compare-im6.q16 to provide /usr/bin/compare (compare) in auto mode
update-alternatives: using /usr/bin/compare-im6.q16 to provide /usr/bin/compare-im6 (compare-im6) in auto mode
update-alternatives: using /usr/bin/animate-im6.q16 to provide /usr/bin/animate (animate) in auto mode
update-alternatives: using /usr/bin/animate-im6.q16 to provide /usr/bin/animate-im6 (animate-im6) in auto mode
update-alternatives: using /usr/bin/convert-im6.q16 to provide /usr/bin/convert (convert) in auto mode
update-alternatives: using /usr/bin/convert-im6.q16 to provide /usr/bin/convert-im6 (convert-im6) in auto mode
update-alternatives: using /usr/bin/composite-im6.q16 to provide /usr/bin/composite (composite) in auto mode
update-alternatives: using /usr/bin/composite-im6.q16 to provide /usr/bin/composite-im6 (composite-im6) in auto mode
update-alternatives: using /usr/bin/conjure-im6.q16 to provide /usr/bin/conjure (conjure) in auto mode
update-alternatives: using /usr/bin/conjure-im6.q16 to provide /usr/bin/conjure-im6 (conjure-im6) in auto mode
update-alternatives: using /usr/bin/import-im6.q16 to provide /usr/bin/import (import) in auto mode
update-alternatives: using /usr/bin/import-im6.q16 to provide /usr/bin/import-im6 (import-im6) in auto mode
update-alternatives: using /usr/bin/identify-im6.q16 to provide /usr/bin/identify (identify) in auto mode
update-alternatives: using /usr/bin/identify-im6.q16 to provide /usr/bin/identify-im6 (identify-im6) in auto mode
update-alternatives: using /usr/bin/stream-im6.q16 to provide /usr/bin/stream (stream) in auto mode
update-alternatives: using /usr/bin/stream-im6.q16 to provide /usr/bin/stream-im6 (stream-im6) in auto mode
update-alternatives: using /usr/bin/display-im6.q16 to provide /usr/bin/display (display) in auto mode
update-alternatives: using /usr/bin/display-im6.q16 to provide /usr/bin/display-im6 (display-im6) in auto mode
update-alternatives: using /usr/bin/montage-im6.q16 to provide /usr/bin/montage (montage) in auto mode
update-alternatives: using /usr/bin/montage-im6.q16 to provide /usr/bin/montage-im6 (montage-im6) in auto mode
update-alternatives: using /usr/bin/mogrify-im6.q16 to provide /usr/bin/mogrify (mogrify) in auto mode
update-alternatives: using /usr/bin/mogrify-im6.q16 to provide /usr/bin/mogrify-im6 (mogrify-im6) in auto mode
Setting up texlive-fonts-recommended (2021.20210921-1) ...
Setting up libcairo2-dev:amd64 (1.16.0-5) ...
Setting up libgtk-3-common (3.24.30-3) ...
Setting up libxft-dev:amd64 (2.3.2-2) ...
Setting up libharfbuzz-dev:amd64 (2.7.4-1) ...
Setting up libfontconfig1-dev:amd64 (2.13.1-4.2) ...
Setting up texlive (2021.20210921-1) ...
Setting up libgtk-3-0:amd64 (3.24.30-3) ...
Setting up texlive-science (2021.20210921-1) ...
Setting up texlive-latex-extra (2021.20210921-1) ...
Setting up texlive-bibtex-extra (2021.20210921-1) ...
Setting up libpango1.0-dev:amd64 (1.48.10+ds1-1) ...
Setting up fontforge (1:20201107~dfsg-4) ...
Setting up mftrace (1.2.20+git20191022.3b4bc2e-2) ...
Processing triggers for libc-bin (2.32-4) ...
Processing triggers for sgml-base (1.30) ...
Setting up sgml-data (2.0.11+nmu1) ...
Processing triggers for sgml-base (1.30) ...
Setting up docbook-xml (4.5-11) ...
Processing triggers for sgml-base (1.30) ...
Setting up dblatex (0.3.12py3-1) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for tex-common (6.17) ...
Running updmap-sys. This may take some time... done.
Running mktexlsr /var/lib/texmf ... done.
Building format(s) --all.
	This may take some time... done.

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 adwaita-icon-theme_41.0-1 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bison_2:3.8.2+dfsg-1 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-12_1:12.0.1-15 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 dblatex_0.3.12py3-1 dbus_1.12.20-3 dbus-bin_1.12.20-3 dbus-daemon_1.12.20-3 dbus-session-bus-common_1.12.20-3 dbus-system-bus-common_1.12.20-3 dbus-user-session_1.12.20-3 dconf-gsettings-backend_0.40.0-2 dconf-service_0.40.0-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-exec_0.23.4 dh-python_5.20211022.1 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 distro-info-data_0.52 dmsetup_2:1.02.175-2.1 docbook-xml_4.5-11 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 extractpdfmark_1.1.0-1.1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 flex_2.6.4-8 fontconfig_2.13.1-4.2 fontconfig-config_2.13.1-4.2 fontforge_1:20201107~dfsg-4 fontforge-common_1:20201107~dfsg-4 fonts-dejavu-core_2.37-2 fonts-freefont-otf_20120503-10 fonts-gfs-baskerville_1.1-6 fonts-gfs-porson_1.1-7 fonts-ipafont-mincho_00303-23 fonts-linuxlibertine_5.3.0-6 fonts-lmodern_2.004.5-6.1 fonts-texgyre_20180621-3.1 fonts-urw-base35_20200910-1 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 ghostscript_9.54.0~dfsg-5 gir1.2-freedesktop_1.70.0-2 gir1.2-glib-2.0_1.70.0-2 gir1.2-harfbuzz-0.0_2.7.4-1 gir1.2-pango-1.0_1.48.10+ds1-1 gpgv_2.2.27-2 grep_3.7-1 groff_1.22.4-7 groff-base_1.22.4-7 gsfonts_1:8.11+urwcyr1.0.7~pre44-4.5 gtk-update-icon-cache_3.24.30-3 gzip_1.10-4 help2man_1.48.5 hicolor-icon-theme_0.17-2 hostname_3.23 icu-devtools_67.1-7 imagemagick-6-common_8:6.9.11.60+dfsg-1.3 imagemagick-6.q16_8:6.9.11.60+dfsg-1.3 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libaom0_1.0.0.errata1.avif-1 libapache-pom-java_18-1 libapparmor1_3.0.3-5 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libargon2-1_0~20171227-0.2 libasan5_9.4.0-3 libasan6_11.2.0-10 libatk-bridge2.0-0_2.38.0-2 libatk1.0-0_2.36.0-2 libatk1.0-data_2.36.0-2 libatomic1_11.2.0-10 libatspi2.0-0_2.42.0-1 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libavahi-client3_0.8-5 libavahi-common-data_0.8-5 libavahi-common3_0.8-5 libbinutils_2.37-7 libblkid-dev_2.37.2-4 libblkid1_2.37.2-4 libbrotli-dev_1.0.9-2+b2 libbrotli1_1.0.9-2+b2 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcairo-gobject2_1.16.0-5 libcairo-script-interpreter2_1.16.0-5 libcairo2_1.16.0-5 libcairo2-dev_1.16.0-5 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-12-dev_1:12.0.1-15 libclang-cpp12_1:12.0.1-15 libclang1-12_1:12.0.1-15 libcolord2_1.4.5-3 libcom-err2_1.46.4-1 libcommons-logging-java_1.2-2 libcommons-parent-java_43-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libcryptsetup12_2:2.4.1-1 libctf-nobfd0_2.37-7 libctf0_2.37-7 libcups2_2.3.3op2-7 libdatrie-dev_0.2.13-2 libdatrie1_0.2.13-2 libdav1d5_0.9.2-1+b1 libdb5.3_5.3.28+dfsg1-0.8 libdbus-1-3_1.12.20-3 libdconf1_0.40.0-2 libde265-0_1.0.8-1 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdeflate0_1.8-1 libdevmapper1.02.1_2:1.02.175-2.1 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libepoxy0_1.5.9-2 libexpat1_2.4.1-3 libexpat1-dev_2.4.1-3 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi-dev_3.4.2-3 libffi8_3.4.2-3 libfftw3-double3_3.3.8-2 libfile-stripnondeterminism-perl_1.12.0-2 libfl-dev_2.6.4-8 libfl2_2.6.4-8 libfontbox-java_1:1.8.16-2 libfontconfig-dev_2.13.1-4.2 libfontconfig1_2.13.1-4.2 libfontconfig1-dev_2.13.1-4.2 libfontenc1_1:1.1.4-1 libfontforge4_1:20201107~dfsg-4 libfreetype-dev_2.11.0+dfsg-1 libfreetype6_2.11.0+dfsg-1 libfreetype6-dev_2.11.0+dfsg-1 libfribidi-dev_1.0.8-2 libfribidi0_1.0.8-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgdk-pixbuf-2.0-0_2.42.6+dfsg-2 libgdk-pixbuf2.0-common_2.42.6+dfsg-2 libgif7_5.1.9-2 libgirepository-1.0-1_1.70.0-2 libglib2.0-0_2.70.0-3 libglib2.0-bin_2.70.0-3 libglib2.0-data_2.70.0-3 libglib2.0-dev_2.70.0-3 libglib2.0-dev-bin_2.70.0-3 libgmp-dev_2:6.2.1+dfsg-2 libgmp10_2:6.2.1+dfsg-2 libgmpxx4ldbl_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgraphite2-3_1.3.14-1 libgraphite2-dev_1.3.14-1 libgs9_9.54.0~dfsg-5 libgs9-common_9.54.0~dfsg-5 libgssapi-krb5-2_1.18.3-7 libgtk-3-0_3.24.30-3 libgtk-3-common_3.24.30-3 libharfbuzz-dev_2.7.4-1 libharfbuzz-gobject0_2.7.4-1 libharfbuzz-icu0_2.7.4-1 libharfbuzz0b_2.7.4-1 libheif1_1.12.0-2+b2 libhogweed6_3.7.3-1 libice-dev_2:1.0.10-1 libice6_2:1.0.10-1 libicu-dev_67.1-7 libicu67_67.1-7 libidn12_1.38-4 libidn2-0_2.3.2-2 libijs-0.35_0.35-15 libip4tc2_1.8.7-1 libisl23_0.24-2 libitm1_11.2.0-10 libjbig0_2.1-3.1+b2 libjbig2dec0_0.19-3 libjpeg62-turbo_1:2.0.6-4 libjs-jquery_3.5.1+dfsg+~3.5.5-8 libjson-c5_0.15-2 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkmod2_29-1 libkpathsea6_2021.20210626.59705-1 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 liblcms2-2_2.12~rc1-2 libllvm12_1:12.0.1-15 liblocale-gettext-perl_1.07-4+b1 liblqr-1-0_0.4.2-2.1 liblsan0_11.2.0-10 libltdl-dev_2.4.6-15 libltdl7_2.4.6-15 liblz4-1_1.9.3-2 liblzma5_5.2.5-2 liblzo2-2_2.10-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmagickcore-6.q16-6_8:6.9.11.60+dfsg-1.3 libmagickwand-6.q16-6_8:6.9.11.60+dfsg-1.3 libmd0_1.0.4-1 libmime-charset-perl_1.012.2-1 libmount-dev_2.37.2-4 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpdec3_2.5.1-2 libmpfr6_4.1.0-3 libncurses-dev_6.2+20210905-1 libncurses5-dev_6.2+20210905-1 libncurses6_6.2+20210905-1 libncursesw6_6.2+20210905-1 libnetpbm10_2:10.0-15.4 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libnspr4_2:4.32-1 libnss3_2:3.70-1 libnuma1_2.0.14-3 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libomp-12-dev_1:12.0.1-15 libomp5-12_1:12.0.1-15 libopenjp2-7_2.4.0-3 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam-systemd_249.5-1 libpam0g_1.4.0-10 libpango-1.0-0_1.48.10+ds1-1 libpango1.0-dev_1.48.10+ds1-1 libpangocairo-1.0-0_1.48.10+ds1-1 libpangoft2-1.0-0_1.48.10+ds1-1 libpangoxft-1.0-0_1.48.10+ds1-1 libpaper-utils_1.1.28+b1 libpaper1_1.1.28+b1 libpcre16-3_2:8.39-13 libpcre2-16-0_10.36-2 libpcre2-32-0_10.36-2 libpcre2-8-0_10.36-2 libpcre2-dev_10.36-2 libpcre2-posix2_10.36-2 libpcre3_2:8.39-13 libpcre3-dev_2:8.39-13 libpcre32-3_2:8.39-13 libpcrecpp0v5_2:8.39-13 libpdfbox-java_1:1.8.16-2 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libpixman-1-0_0.40.0-1 libpixman-1-dev_0.40.0-1 libpng-dev_1.6.37-3 libpng16-16_1.6.37-3 libpoppler102_20.09.0-3.1 libpopt0_1.18-3 libpotrace0_1.16-2 libptexenc1_2021.20210626.59705-1 libpthread-stubs0-dev_0.4-1 libpython3-stdlib_3.9.2-3 libpython3.9_3.9.7-4 libpython3.9-minimal_3.9.7-4 libpython3.9-stdlib_3.9.7-4 libquadmath0_11.2.0-10 libreadline-dev_8.1-2 libreadline8_8.1-2 libseccomp2_2.5.2-2 libselinux1_3.1-3 libselinux1-dev_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsepol1-dev_3.1-1 libsigsegv2_2.13-1 libsm-dev_2:1.2.3-1 libsm6_2:1.2.3-1 libsmartcols1_2.37.2-4 libsombok3_2.4.0-2+b1 libspiro1_1:20200505-2 libsqlite3-0_3.36.0-2 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsynctex2_2021.20210626.59705-1 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libteckit0_2.5.10+ds1-3 libtexlua53_2021.20210626.59705-1 libtexluajit2_2021.20210626.59705-1 libtext-unidecode-perl_1.30-1 libthai-data_0.1.28-4.1 libthai-dev_0.1.28-4.1 libthai0_0.1.28-4.1 libtiff5_4.3.0-2 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunicode-linebreak-perl_0.0.20190101-1+b3 libuninameslist1_20210917-1 libunistring2_0.9.10-6 libunwind-12_1:12.0.1-15 libuuid1_2.37.2-4 libwayland-client0_1.19.0-2+b1 libwayland-cursor0_1.19.0-2+b1 libwayland-egl1_1.19.0-2+b1 libwebp6_0.6.1-2.1 libwebpdemux2_0.6.1-2.1 libwebpmux3_0.6.1-2.1 libwoff1_1.0.2-1+b1 libx11-6_2:1.7.2-2+b1 libx11-data_2:1.7.2-2 libx11-dev_2:1.7.2-2+b1 libx265-199_3.5-2 libxau-dev_1:1.0.9-1 libxau6_1:1.0.9-1 libxaw7_2:1.0.13-1.1 libxcb-render0_1.14-3 libxcb-render0-dev_1.14-3 libxcb-shm0_1.14-3 libxcb-shm0-dev_1.14-3 libxcb1_1.14-3 libxcb1-dev_1.14-3 libxcomposite1_1:0.4.5-1 libxcursor1_1:1.2.0-2 libxdamage1_1:1.1.5-2 libxdmcp-dev_1:1.1.2-3 libxdmcp6_1:1.1.2-3 libxext-dev_2:1.3.4-1 libxext6_2:1.3.4-1 libxfixes3_1:5.0.3-2 libxft-dev_2.3.2-2 libxft2_2.3.2-2 libxi6_2:1.8-1 libxinerama1_2:1.1.4-2 libxkbcommon0_1.3.1-1 libxml-libxml-perl_2.0134+dfsg-2+b1 libxml-namespacesupport-perl_1.12-1.1 libxml-sax-base-perl_1.09-1.1 libxml-sax-perl_1.02+dfsg-3 libxml2_2.9.12+dfsg-5 libxmu6_2:1.1.2-2+b3 libxpm4_1:3.5.12-1 libxrandr2_2:1.5.2-1 libxrender-dev_1:0.9.10-1 libxrender1_1:0.9.10-1 libxslt1.1_1.1.34-4 libxt6_1:1.2.0-1 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 libzzip-0-13_0.13.72+dfsg.1-1.1 linux-libc-dev_5.14.12-1 llvm-12-linker-tools_1:12.0.1-15 lmodern_2.004.5-6.1 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 media-types_4.0.0 mftrace_1.2.20+git20191022.3b4bc2e-2 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 netpbm_2:10.0-15.4 pango1.0-tools_1.48.10+ds1-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 pkg-config_0.29.2-1 po-debconf_1.0.21+nmu1 poppler-data_0.4.11-1 potrace_1.16-2 preview-latex-style_12.2-1 python-apt-common_2.3.0 python3_3.9.2-3 python3-apt_2.3.0 python3-distutils_3.9.7-1 python3-lib2to3_3.9.7-1 python3-minimal_3.9.2-3 python3.9_3.9.7-4 python3.9-minimal_3.9.7-4 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 readline-common_8.1-2 rpcsvc-proto_1.4.2-4 rsync_3.2.3-8 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sgml-base_1.30 sgml-data_2.0.11+nmu1 shared-mime-info_2.0-1 systemd_249.5-1 systemd-sysv_249.5-1 sysvinit-utils_3.00-1 t1utils_1.41-4 tar_1.34+dfsg-1 tex-common_6.17 texi2html_1.82+dfsg1-6 texinfo_6.8-3 texlive_2021.20210921-1 texlive-base_2021.20210921-1 texlive-bibtex-extra_2021.20210921-1 texlive-binaries_2021.20210626.59705-1 texlive-extra-utils_2021.20210921-1 texlive-fonts-recommended_2021.20210921-1 texlive-lang-cyrillic_2021.20210921-1 texlive-lang-greek_2021.20210921-1 texlive-latex-base_2021.20210921-1 texlive-latex-extra_2021.20210921-1 texlive-latex-recommended_2021.20210921-1 texlive-luatex_2021.20210921-1 texlive-metapost_2021.20210921-1 texlive-pictures_2021.20210921-1 texlive-plain-generic_2021.20210921-1 texlive-science_2021.20210921-1 tzdata_2021e-1 ucf_3.0043 util-linux_2.37.2-4 uuid-dev_2.37.2-4 x11-common_1:7.7+23 x11proto-dev_2021.5-1 xdg-utils_1.1.3-4.1 xfonts-encodings_1:1.0.4-2.1 xfonts-utils_1:7.7+6 xkb-data_2.33-1 xml-core_0.18+nmu1 xorg-sgml-doctools_1:1.11-1.1 xsltproc_1.1.34-4 xtrans-dev_1.4.0-1 xz-utils_5.2.5-2 zip_3.0-12 zlib1g_1:1.2.11.dfsg-2 zlib1g-dev_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: lilypond
Binary: lilypond, lilypond-data, lilypond-fonts, lilypond-doc, lilypond-doc-pdf, lilypond-doc-html, lilypond-doc-html-ca, lilypond-doc-html-cs, lilypond-doc-html-de, lilypond-doc-html-es, lilypond-doc-html-fr, lilypond-doc-html-hu, lilypond-doc-html-it, lilypond-doc-html-ja, lilypond-doc-html-nl, lilypond-doc-html-pt, lilypond-doc-html-zh, lilypond-doc-pdf-ca, lilypond-doc-pdf-de, lilypond-doc-pdf-es, lilypond-doc-pdf-fr, lilypond-doc-pdf-hu, lilypond-doc-pdf-it, lilypond-doc-pdf-nl, lilypond-doc-pdf-pt
Architecture: any all
Version: 2.22.1-2
Maintainer: Anthony Fok <foka@debian.org>
Uploaders: Don Armstrong <don@debian.org>, Dr. Tobias Quathamer <toddy@debian.org>
Homepage: http://lilypond.org/
Standards-Version: 4.6.0
Vcs-Browser: https://salsa.debian.org/debian/lilypond
Vcs-Git: https://salsa.debian.org/debian/lilypond.git
Build-Depends: autoconf, automake, bison, dblatex, debhelper-compat (= 13), dh-exec, dh-python, extractpdfmark, flex, fontconfig, fontforge, fonts-freefont-otf, fonts-ipafont-mincho, fonts-linuxlibertine, fonts-texgyre, fonts-urw-base35, gettext, ghostscript, groff, gsfonts, help2man, imagemagick [kfreebsd-any], imagemagick-6.q16 [!kfreebsd-any], libfl-dev, libfontconfig1-dev, libfreetype6-dev, libgmp-dev, libltdl-dev, libncurses5-dev, libpango1.0-dev, libreadline6-dev, libtool, m4, mftrace, netpbm, pkg-config, python3, rsync, texi2html, texinfo, texlive-fonts-recommended, texlive-lang-cyrillic, texlive-latex-base, texlive-latex-recommended, texlive-metapost, texlive-plain-generic, zip
Build-Conflicts: fonts-noto-cjk
Package-List:
 lilypond deb tex optional arch=any
 lilypond-data deb tex optional arch=all
 lilypond-doc deb doc optional arch=all
 lilypond-doc-html deb doc optional arch=all
 lilypond-doc-html-ca deb doc optional arch=all
 lilypond-doc-html-cs deb doc optional arch=all
 lilypond-doc-html-de deb doc optional arch=all
 lilypond-doc-html-es deb doc optional arch=all
 lilypond-doc-html-fr deb doc optional arch=all
 lilypond-doc-html-hu deb doc optional arch=all
 lilypond-doc-html-it deb doc optional arch=all
 lilypond-doc-html-ja deb doc optional arch=all
 lilypond-doc-html-nl deb doc optional arch=all
 lilypond-doc-html-pt deb doc optional arch=all
 lilypond-doc-html-zh deb doc optional arch=all
 lilypond-doc-pdf deb doc optional arch=all
 lilypond-doc-pdf-ca deb doc optional arch=all
 lilypond-doc-pdf-de deb doc optional arch=all
 lilypond-doc-pdf-es deb doc optional arch=all
 lilypond-doc-pdf-fr deb doc optional arch=all
 lilypond-doc-pdf-hu deb doc optional arch=all
 lilypond-doc-pdf-it deb doc optional arch=all
 lilypond-doc-pdf-nl deb doc optional arch=all
 lilypond-doc-pdf-pt deb doc optional arch=all
 lilypond-fonts deb tex optional arch=all
Checksums-Sha1:
 13b37383e69d96123630fc7519af4cd8b0feadb0 2510038 lilypond_2.22.1.orig-guile18.tar.gz
 a79c28f1f9956c756df357ef4ab7051131881cf2 18033161 lilypond_2.22.1.orig.tar.gz
 39015084756cde4007ee710bce23d397780fb981 80620 lilypond_2.22.1-2.debian.tar.xz
Checksums-Sha256:
 55ff45dd426c58ef7a5530b4e701c2a6a1e54043c2b69c64206fc105ddd247db 2510038 lilypond_2.22.1.orig-guile18.tar.gz
 72ac2d54c310c3141c0b782d4e0bef9002d5519cf46632759b1f03ef6969cc30 18033161 lilypond_2.22.1.orig.tar.gz
 254a0c06ada924f7a42da7a86af096831842ea256c0569f60ec3e801f6c49706 80620 lilypond_2.22.1-2.debian.tar.xz
Files:
 2863f46023dd38e33ac37978302c078f 2510038 lilypond_2.22.1.orig-guile18.tar.gz
 07321f2d9dc45d2f14d5057609184aae 18033161 lilypond_2.22.1.orig.tar.gz
 b7dbb50fa9c539785249181a1e4b7788 80620 lilypond_2.22.1-2.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQJEBAEBCAAuFiEEFCQhsZrUqVmW+VBy6iUAtBLFms8FAmEsIAoQHGZva2FAZGVi
aWFuLm9yZwAKCRDqJQC0EsWaz0ZTEACQ4LeFmcdnI2gRueLMSr678WT/nqeADhqs
RUH3gvVysPyFyiF621/Q4Q+NwS420l0zHPfmeUc8DYK6WERlRrnlI7idFITOnmpl
BaDrtaHRioUWwYchm61BDbd4dQhkGPf3A6cUv3mn9bMMxGMM2hey+tCkGRnDkPMD
w44j7aMTK209aLf4CXzY/2EYGNuZ966M2p5/x8dvOpgvMO5c3YSC66QK9RCpehsi
pXXaYo4KjZembauB1tLzqWAWBjZIhdm+cdigVBHfIed8WPDRnEhOqNDbiN6cXEkR
vZxYvO2WbVmva8OF7CR3PvdiGQleZYA6gXUEOAreg4Q73byF0epAxiyATJfJf0W1
wi5dD2NKvsjc7H/Ppnwb43kk93epukgjEuDVmlsSS+pkboGXYTo9lW0Wl6OK20qX
Wr80qGUf3ZN4qRj2iu5eCKKOUVp+4MeSdPhmkW72DrlIahjVTG2mSQdY2qm6rAg0
vLcKQZWzS6DOjMeXy/j+aUo8UqKfkxyEoa5aseikY8YGVwdH9cjQI5mMTrQYmh3t
0sE/B4ZDl4jDE7xp60zeFk4Cb8yGvaXu4vzjboItTmLBrnNsvIYR8tI5yIUJvTYg
S1eW/X0jxOTXkpKaHoV2G/hRsll5gkCtwFHGHpkkmED8ovVFgvL47qi0w2yYSie4
mMotOkVc6g==
=Zik/
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.dUkiV9xw/trustedkeys.kbx': General error
gpgv: Signature made Mon Aug 30 00:02:18 2021 UTC
gpgv:                using RSA key 142421B19AD4A95996F95072EA2500B412C59ACF
gpgv:                issuer "foka@debian.org"
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./lilypond_2.22.1-2.dsc
dpkg-source: info: extracting lilypond in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking lilypond_2.22.1.orig.tar.gz
dpkg-source: info: unpacking lilypond_2.22.1.orig-guile18.tar.gz
dpkg-source: info: unpacking lilypond_2.22.1-2.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying add_dircategories_to_documentation
dpkg-source: info: applying 0003-Hurd-PATH_MAX.patch
dpkg-source: info: applying 0002-Handle-the-DFSG-package-split.patch
dpkg-source: info: applying 0003-Fix-the-SRFI-60-copy-bit-documentation.patch
dpkg-source: info: applying 0004-Define-_GNU_SOURCE-to-fix-the-GNU-kFreeBSD-build.patch
dpkg-source: info: applying 0005-Don-t-access-uninitialised-memory-in-scm_to_sockaddr.patch
dpkg-source: info: applying 0007-Mark-Unused-modules-are-removed-gc-test-as-unresolve.patch
dpkg-source: info: applying 0009-Fix-r5rs.texi-makeinfo-failure-by-applying-changes-f.patch
dpkg-source: info: applying 0100-guile-config-link-static-libguile.a-for-lilypond.patch
dpkg-source: info: applying 1801-Couple-of-README-updates.patch
dpkg-source: info: applying 1802-Make-sockets.test-more-robust.patch
dpkg-source: info: applying 1803-fix-write-beyond-end-of-an-on-stack-buffer-while-rea.patch
dpkg-source: info: applying 1804-Default-to-using-poll-2-in-fport_input_waiting.patch
dpkg-source: info: applying 1805-Don-t-rely-on-HAVE_-macros-in-public-header-tags.h.patch
dpkg-source: info: applying 1806-Remove-duplicate-definitions.patch
dpkg-source: info: applying 1807-Remove-unused-variable.patch
dpkg-source: info: applying 1808-Remove-set-but-unused-variables-from-libguile.patch
dpkg-source: info: applying 1809-Build-without-Werror-by-default.patch
dpkg-source: info: applying 1810-configure-Provide-guesses-for-AC_RUN_IFELSE-tests-wh.patch
dpkg-source: info: applying 1811-Remove-unnecessary-chmod-in-test-suite-standalone.patch
dpkg-source: info: applying 1812-Fix-stack-growth-direction-check.patch
dpkg-source: info: applying 1813-Fix-texinfo-files-for-makeinfo-5.1.patch
dpkg-source: info: applying 1814-build-Use-Automake-1.12-and-serial-tests.patch
dpkg-source: info: applying 1815-Fix-configure.in-macro-for-automake-1.13.patch
dpkg-source: info: applying 1816-Rename-configure.in-to-configure.ac-twice.patch
dpkg-source: info: applying 1817-build-int-Add-abstraction-CONFIG_SCRIPT.patch
dpkg-source: info: applying 1818-build-int-Dose-configure.ac-w-proper-m4-quoting.patch
dpkg-source: info: applying 1819-build-int-Remove-EOF-Local-Variables-block-nfc.patch
dpkg-source: info: applying 1820-build-int-Add-more-AC_LANG_PROGRAM-calls.patch
dpkg-source: info: applying 1821-libguile-Fix-bug-Don-t-expect-send-string-to-be-writ.patch
dpkg-source: info: applying 1822-Improve-ice-9-documentation-file-commentary-default-.patch
dpkg-source: info: applying 1823-build-doc-Accomodate-whitespace-injecting-makeinfo.patch
dpkg-source: info: applying 1824-doc-Clean-up-.texi-for-modern-GNU-Texinfo.patch
dpkg-source: info: applying 1825-maint-Update-years-in-copyright-notice-nfc.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-f322cd83-f060-47ed-a5b5-a3c9f98a9b89
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package lilypond
dpkg-buildpackage: info: source version 2.22.1-2
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Anthony Fok <foka@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean --without autoreconf --with python3
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/<<PKGBUILDDIR>>'
[ ! -f guile18/Makefile ] || /usr/bin/make -C guile18 maintainer-clean
dh_auto_clean --no-parallel
git restore configure || rm -f configure
/bin/sh: 1: git: not found
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_clean
 debian/rules binary
dh binary --without autoreconf --with python3
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
cd guile18 && ./autogen.sh
autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4
autoreconf: configure.ac: tracing
autoreconf: configure.ac: adding subdirectory guile-readline to autoreconf
autoreconf: Entering directory 'guile-readline'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force 
autoreconf: configure.ac: tracing
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, '.'.
libtoolize: copying file './ltmain.sh'
libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
libtoolize: and rerunning libtoolize and aclocal.
libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
autoreconf: running: aclocal --force 
autoreconf: running: /usr/bin/autoconf --force
configure.ac:19: warning: The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
configure.ac:19: You should run autoupdate.
aclocal.m4:8540: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:19: the top level
configure.ac:19: warning: AC_LIBTOOL_WIN32_DLL: Remove this warning and the call to _LT_SET_OPTION when you
configure.ac:19: put the 'win32-dll' option into LT_INIT's first parameter.
./lib/autoconf/general.m4:2434: AC_DIAGNOSE is expanded from...
aclocal.m4:8540: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:19: the top level
configure.ac:20: warning: The macro `AC_PROG_LIBTOOL' is obsolete.
configure.ac:20: You should run autoupdate.
aclocal.m4:121: AC_PROG_LIBTOOL is expanded from...
configure.ac:20: the top level
configure.ac:25: warning: The macro `AC_CYGWIN' is obsolete.
configure.ac:25: You should run autoupdate.
./lib/autoconf/specific.m4:319: AC_CYGWIN is expanded from...
configure.ac:25: the top level
configure.ac:26: warning: The macro `AC_MINGW32' is obsolete.
configure.ac:26: You should run autoupdate.
./lib/autoconf/specific.m4:347: AC_MINGW32 is expanded from...
configure.ac:26: the top level
configure.ac:55: warning: The macro `AC_TRY_LINK' is obsolete.
configure.ac:55: You should run autoupdate.
./lib/autoconf/general.m4:2920: AC_TRY_LINK is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
configure.ac:55: the top level
autoreconf: running: /usr/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:18: installing './compile'
configure.ac:19: installing './config.guess'
configure.ac:19: installing './config.sub'
configure.ac:13: installing './install-sh'
configure.ac:13: installing './missing'
Makefile.am:29: warning: 'INCLUDES' is the old name for 'AM_CPPFLAGS' (or '*_CPPFLAGS')
Makefile.am: installing './depcomp'
autoreconf: Leaving directory 'guile-readline'
configure.ac: warning: AM_GNU_GETTEXT is used, but not AM_GNU_GETTEXT_VERSION or AM_GNU_GETTEXT_REQUIRE_VERSION
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
autoreconf: running: aclocal --force -I m4
autoreconf: running: /usr/bin/autoconf --force
configure.ac:76: warning: The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
configure.ac:76: You should run autoupdate.
m4/ltoptions.m4:148: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:76: the top level
configure.ac:76: warning: AC_LIBTOOL_WIN32_DLL: Remove this warning and the call to _LT_SET_OPTION when you
configure.ac:76: put the 'win32-dll' option into LT_INIT's first parameter.
./lib/autoconf/general.m4:2434: AC_DIAGNOSE is expanded from...
m4/ltoptions.m4:148: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:76: the top level
configure.ac:85: warning: The macro `AC_PROG_CC_C89' is obsolete.
configure.ac:85: You should run autoupdate.
./lib/autoconf/c.m4:1652: AC_PROG_CC_C89 is expanded from...
configure.ac:85: the top level
configure.ac:90: warning: The macro `AC_LIBTOOL_DLOPEN' is obsolete.
configure.ac:90: You should run autoupdate.
m4/ltoptions.m4:113: AC_LIBTOOL_DLOPEN is expanded from...
configure.ac:90: the top level
configure.ac:90: warning: AC_LIBTOOL_DLOPEN: Remove this warning and the call to _LT_SET_OPTION when you
configure.ac:90: put the 'dlopen' option into LT_INIT's first parameter.
./lib/autoconf/general.m4:2434: AC_DIAGNOSE is expanded from...
m4/ltoptions.m4:113: AC_LIBTOOL_DLOPEN is expanded from...
configure.ac:90: the top level
configure.ac:91: warning: The macro `AC_PROG_LIBTOOL' is obsolete.
configure.ac:91: You should run autoupdate.
m4/libtool.m4:99: AC_PROG_LIBTOOL is expanded from...
configure.ac:91: the top level
configure.ac:668: warning: The macro `AC_HEADER_STDC' is obsolete.
configure.ac:668: You should run autoupdate.
./lib/autoconf/headers.m4:704: AC_HEADER_STDC is expanded from...
configure.ac:668: the top level
configure.ac:669: warning: The macro `AC_HEADER_TIME' is obsolete.
configure.ac:669: You should run autoupdate.
./lib/autoconf/headers.m4:743: AC_HEADER_TIME is expanded from...
configure.ac:669: the top level
configure.ac:734: warning: The macro `AC_TRY_COMPILE' is obsolete.
configure.ac:734: You should run autoupdate.
./lib/autoconf/general.m4:2847: AC_TRY_COMPILE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
acinclude.m4:33: GUILE_HEADER_LIBC_WITH_UNISTD is expanded from...
configure.ac:734: the top level
configure.ac:737: warning: The macro `AC_TYPE_SIGNAL' is obsolete.
configure.ac:737: You should run autoupdate.
./lib/autoconf/types.m4:776: AC_TYPE_SIGNAL is expanded from...
configure.ac:737: the top level
configure.ac:981: warning: whitespace-separated list contains macros;
configure.ac:981: in a future version of Autoconf they will not be expanded
configure.ac:981: note: `dnl' is a macro
./lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
configure.ac:981: the top level
configure.ac:1137: warning: The macro `AC_TRY_LINK' is obsolete.
configure.ac:1137: You should run autoupdate.
./lib/autoconf/general.m4:2920: AC_TRY_LINK is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
configure.ac:1137: the top level
configure.ac:1137: warning: The macro `AC_TRY_LINK' is obsolete.
configure.ac:1137: You should run autoupdate.
./lib/autoconf/general.m4:2920: AC_TRY_LINK is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
configure.ac:1137: the top level
configure.ac:1137: warning: The macro `AC_TRY_LINK' is obsolete.
configure.ac:1137: You should run autoupdate.
./lib/autoconf/general.m4:2920: AC_TRY_LINK is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
acinclude.m4:74: GUILE_NAMED_CHECK_FUNC is expanded from...
configure.ac:1137: the top level
configure.ac:1200: warning: The macro `AC_ERROR' is obsolete.
configure.ac:1200: You should run autoupdate.
./lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
configure.ac:1200: the top level
configure.ac:1229: warning: The macro `AC_TRY_CPP' is obsolete.
configure.ac:1229: You should run autoupdate.
./lib/autoconf/general.m4:2762: AC_TRY_CPP is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
acinclude.m4:4: GUILE_STRUCT_UTIMBUF is expanded from...
configure.ac:1229: the top level
configure.ac:1332: warning: The macro `AC_LANG_C' is obsolete.
configure.ac:1332: You should run autoupdate.
./lib/autoconf/c.m4:72: AC_LANG_C is expanded from...
acinclude.m4:117: ACX_PTHREAD is expanded from...
configure.ac:1332: the top level
configure.ac:1332: warning: The macro `AC_TRY_LINK' is obsolete.
configure.ac:1332: You should run autoupdate.
./lib/autoconf/general.m4:2920: AC_TRY_LINK is expanded from...
acinclude.m4:117: ACX_PTHREAD is expanded from...
configure.ac:1332: the top level
autoreconf: running: /usr/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:79: installing 'build-aux/compile'
configure.ac:72: installing 'build-aux/config.guess'
configure.ac:72: installing 'build-aux/config.sub'
configure.ac:48: installing 'build-aux/install-sh'
configure.ac:48: installing 'build-aux/missing'
Makefile.am: installing './INSTALL'
doc/r5rs/Makefile.am:24: installing 'build-aux/texinfo.tex'
doc/tutorial/Makefile.am:24: installing 'build-aux/mdate-sh'
libguile/Makefile.am: installing 'build-aux/depcomp'
/usr/share/automake-1.16/am/ltlibrary.am: warning: 'libtest-asmobs.la': linking libtool libraries using a non-POSIX
/usr/share/automake-1.16/am/ltlibrary.am: archiver requires 'AM_PROG_AR' in 'configure.ac'
test-suite/standalone/Makefile.am:25:   while processing Libtool library 'libtest-asmobs.la'
autoreconf: Leaving directory '.'
Now run configure and make.
cd guile18 && CFLAGS="-O2 -g" ./configure --host=x86_64-linux-gnu --build=x86_64-linux-gnu --with-threads=no --disable-error-on-warning --prefix=/usr
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
configure: autobuild project... guile
configure: autobuild revision... 1.8.8
configure: autobuild hostname... ip-172-31-4-235
configure: autobuild timestamp... 20211026T183559Z
checking for x86_64-linux-gnu-gcc... x86_64-linux-gnu-gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether x86_64-linux-gnu-gcc accepts -g... yes
checking for x86_64-linux-gnu-gcc option to enable C11 features... none needed
checking whether x86_64-linux-gnu-gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of x86_64-linux-gnu-gcc... gcc3
checking how to run the C preprocessor... x86_64-linux-gnu-gcc -E
checking for gawk... (cached) mawk
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking for sys/time.h... yes
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking how to print strings... printf
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for fgrep... /bin/grep -F
checking for ld used by x86_64-linux-gnu-gcc... /usr/bin/x86_64-linux-gnu-ld
checking if the linker (/usr/bin/x86_64-linux-gnu-ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/x86_64-linux-gnu-nm -B
checking the name lister (/usr/bin/x86_64-linux-gnu-nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/x86_64-linux-gnu-ld option to reload object files... -r
checking for x86_64-linux-gnu-objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for x86_64-linux-gnu-dlltool... dlltool
checking how to associate runtime and link libraries... printf %s\n
checking for x86_64-linux-gnu-ar... x86_64-linux-gnu-ar
checking for archiver @FILE support... @
checking for x86_64-linux-gnu-strip... x86_64-linux-gnu-strip
checking for x86_64-linux-gnu-ranlib... x86_64-linux-gnu-ranlib
checking command to parse /usr/bin/x86_64-linux-gnu-nm -B output from x86_64-linux-gnu-gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for x86_64-linux-gnu-mt... no
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if x86_64-linux-gnu-gcc supports -fno-rtti -fno-exceptions... yes
checking for x86_64-linux-gnu-gcc option to produce PIC... -fPIC -DPIC
checking if x86_64-linux-gnu-gcc PIC flag -fPIC -DPIC works... yes
checking if x86_64-linux-gnu-gcc static flag -static works... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... (cached) yes
checking whether the x86_64-linux-gnu-gcc linker (/usr/bin/x86_64-linux-gnu-ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for shl_load... no
checking for shl_load in -ldld... no
checking for dlopen... no
checking for dlopen in -ldl... yes
checking whether a program can dlopen itself... yes
checking whether a statically linked program can dlopen itself... no
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for lt_dlinit in -lltdl... yes
checking for ltdl.h... yes
checking for makeinfo... yes
checking for emacs... no
checking for xemacs... no
checking where .elc files should go... ${datadir}/emacs/site-lisp
checking whether to use system and library "64" calls... yes
checking whether the compiler defaults to IEEE floating point behavior... yes
checking for __uc_get_ar_bsp in -luca... no
checking for an ANSI C-conforming const... yes
checking for working volatile... yes
checking for inline... inline
checking for __uc_get_ar_bsp in -luca... (cached) no
checking whether byte ordering is bigendian... no
checking size of char... 1
checking size of unsigned char... 1
checking size of short... 2
checking size of unsigned short... 2
checking size of int... 4
checking size of unsigned int... 4
checking size of long... 8
checking size of unsigned long... 8
checking size of size_t... 8
checking size of long long... 8
checking size of unsigned long long... 8
checking size of __int64... 0
checking size of unsigned __int64... 0
checking size of void *... 8
checking size of intptr_t... 8
checking size of uintptr_t... 8
checking size of ptrdiff_t... 8
checking size of size_t... (cached) 8
checking size of off_t... 8
checking for stdint.h... (cached) yes
checking for inttypes.h... (cached) yes
checking size of intmax_t... 8
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for intmax_t... yes
checking for uintmax_t... yes
checking for intptr_t... yes
checking for uintptr_t... yes
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for intmax_t... yes
checking for uintmax_t... yes
checking for intptr_t... (cached) yes
checking for uintptr_t... (cached) yes
checking for egrep... (cached) /bin/grep -E
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required
checking for struct dirent64.d_name... yes
checking for complex.h... yes
checking for fenv.h... yes
checking for io.h... no
checking for libc.h... no
checking for limits.h... yes
checking for malloc.h... yes
checking for memory.h... yes
checking for process.h... no
checking for string.h... (cached) yes
checking for regex.h... yes
checking for rxposix.h... no
checking for rx/rxposix.h... no
checking for sys/dir.h... yes
checking for sys/ioctl.h... yes
checking for sys/select.h... yes
checking for sys/time.h... (cached) yes
checking for sys/timeb.h... yes
checking for sys/times.h... yes
checking for sys/stdtypes.h... no
checking for sys/types.h... (cached) yes
checking for sys/utime.h... no
checking for time.h... yes
checking for unistd.h... (cached) yes
checking for utime.h... yes
checking for pwd.h... yes
checking for grp.h... yes
checking for sys/utsname.h... yes
checking for direct.h... no
checking for strings.h... (cached) yes
checking for machine/fpu.h... no
checking for poll.h... yes
checking for complex double... yes
checking for socklen_t... yes
checking for struct ip_mreq... no
checking for libc.h... (cached) no
checking for unistd.h... (cached) yes
checking whether libc.h and unistd.h can be included together... no
checking for uid_t in sys/types.h... yes
checking type of array argument to getgroups... gid_t
checking return type of signal handlers... void
checking for mode_t... yes
checking for cos in -lm... yes
checking for gethostbyname... yes
checking for connect... yes
checking for assert.h... yes
checking for crt_externs.h... no
checking for DINFINITY... no
checking for DQNAN... no
checking for cexp... yes
checking for chsize... no
checking for clog... yes
checking for clog10... yes
checking for ctermid... yes
checking for fesetround... yes
checking for ftime... yes
checking for ftruncate... yes
checking for fchown... yes
checking for getcwd... yes
checking for geteuid... yes
checking for gettimeofday... yes
checking for gmtime_r... yes
checking for ioctl... yes
checking for lstat... yes
checking for mkdir... yes
checking for mknod... yes
checking for nice... yes
checking for pipe... yes
checking for _pipe... no
checking for readdir_r... yes
checking for readdir64_r... yes
checking for readlink... yes
checking for rename... yes
checking for rmdir... yes
checking for select... yes
checking for setegid... yes
checking for seteuid... yes
checking for setlocale... yes
checking for setpgid... yes
checking for setsid... yes
checking for sigaction... yes
checking for siginterrupt... yes
checking for stat64... yes
checking for strftime... yes
checking for strptime... yes
checking for symlink... yes
checking for sync... yes
checking for sysconf... yes
checking for tcgetpgrp... yes
checking for tcsetpgrp... yes
checking for times... yes
checking for uname... yes
checking for waitpid... yes
checking for strdup... yes
checking for system... yes
checking for usleep... yes
checking for atexit... yes
checking for on_exit... yes
checking for chown... yes
checking for link... yes
checking for fcntl... yes
checking for ttyname... yes
checking for getpwent... yes
checking for getgrent... yes
checking for kill... yes
checking for getppid... yes
checking for getpgrp... yes
checking for fork... yes
checking for setitimer... yes
checking for getitimer... yes
checking for strchr... yes
checking for strcmp... yes
checking for index... yes
checking for bcopy... yes
checking for memcpy... yes
checking for rindex... yes
checking for truncate... yes
checking for unsetenv... yes
checking for isblank... yes
checking for _NSGetEnviron... no
checking for strncasecmp... yes
checking for poll... yes
checking for crypt.h... yes
checking for netdb.h... yes
checking for pthread.h... yes
checking for sys/param.h... yes
checking for sys/resource.h... yes
checking for sys/file.h... yes
checking for chroot... yes
checking for flock... yes
checking for getlogin... yes
checking for cuserid... yes
checking for getpriority... yes
checking for setpriority... yes
checking for getpass... yes
checking for sethostname... yes
checking for gethostname... yes
checking for x86_64-linux-gnu-gcc options needed to detect all undeclared functions... -fno-builtin
checking whether sethostname is declared... yes
checking whether strncasecmp is declared... yes
checking whether unsetenv is declared... yes
checking whether hstrerror is declared... no
checking whether cuserid is declared... yes
checking whether flock is declared... no
checking whether vsnprintf is declared... yes
checking for library containing crypt... -lcrypt
checking for i... _Complex_I
checking whether csqrt is usable... yes
checking for __gmpz_init in -lgmp... yes
checking whether NLS is requested... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for msgmerge... /usr/bin/msgmerge
checking for ld... /usr/bin/x86_64-linux-gnu-ld -m elf_x86_64
checking if the linker (/usr/bin/x86_64-linux-gnu-ld -m elf_x86_64) is GNU ld... yes
checking for shared library run path origin... done
checking 32-bit host C ABI... no
checking for ELF binary format... yes
checking for the common suffixes of directories in the library search path... lib,lib,lib64
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyPreferredLanguages... no
checking for GNU gettext in libc... yes
checking whether to use NLS... yes
checking where the gettext function comes from... libc
checking for sleep declaration... yes
checking for usleep declaration... yes
checking whether strptime is declared... yes
checking return type of usleep... int
checking for sys/un.h... yes
checking for socketpair... yes
checking for getgroups... yes
checking for setgroups... yes
checking for setpwent... yes
checking for pause... yes
checking for tzset... yes
checking for sethostent... yes
checking for gethostent... yes
checking for endhostent... yes
checking for setnetent... yes
checking for getnetent... yes
checking for endnetent... yes
checking for setprotoent... yes
checking for getprotoent... yes
checking for endprotoent... yes
checking for setservent... yes
checking for getservent... yes
checking for endservent... yes
checking for getnetbyaddr... yes
checking for getnetbyname... yes
checking for inet_lnaof... yes
checking for inet_makeaddr... yes
checking for inet_netof... yes
checking for hstrerror... yes
checking for inet_pton... yes
checking for inet_ntop... yes
checking for struct sockaddr.sin_len... no
checking for __libc_stack_end... yes
checking whether netdb.h declares h_errno... yes
checking whether uint32_t is defined... yes
checking for working IPv6 support... yes
checking whether sockaddr_in6 has sin6_scope_id... yes
checking for struct sockaddr_in6.sin6_len... no
checking whether localtime caches TZ... no
checking for regcomp... yes
checking for inet_aton... yes
checking for putenv... yes
checking for strerror... yes
checking for memmove... yes
checking for mkstemp... yes
checking for floatingpoint.h... no
checking for ieeefp.h... no
checking for nan.h... no
checking for asinh... yes
checking for acosh... yes
checking for atanh... yes
checking for copysign... yes
checking for finite... yes
checking for sincos... yes
checking for trunc... yes
checking for isinf... yes
checking for isnan... yes
checking for size_t... yes
checking for working alloca.h... yes
checking for alloca... yes
checking for struct stat.st_rdev... yes
checking for struct stat.st_blksize... yes
checking for struct stat.st_blocks... yes
checking whether struct tm is in sys/time.h or time.h... time.h
checking for struct tm.tm_zone... yes
checking for struct tm.tm_gmtoff... yes
checking whether we need POSIX to get struct utimbuf... no
checking size of float... 4
checking for struct linger... yes
checking for struct timespec... yes
checking what kind of threads to support... null-threads
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating libguile/gen-scmconfig.h
config.status: creating Makefile
config.status: creating am/Makefile
config.status: creating benchmark-suite/Makefile
config.status: creating doc/Makefile
config.status: creating doc/r5rs/Makefile
config.status: creating doc/tutorial/Makefile
config.status: creating emacs/Makefile
config.status: creating examples/Makefile
config.status: creating guile-config/Makefile
config.status: creating ice-9/Makefile
config.status: creating lang/Makefile
config.status: creating libguile/Makefile
config.status: creating oop/Makefile
config.status: creating oop/goops/Makefile
config.status: creating scripts/Makefile
config.status: creating srfi/Makefile
config.status: creating test-suite/Makefile
config.status: creating test-suite/standalone/Makefile
config.status: creating guile-1.8.pc
config.status: creating check-guile
config.status: creating benchmark-guile
config.status: creating guile-tools
config.status: creating pre-inst-guile
config.status: creating pre-inst-guile-env
config.status: creating libguile/guile-snarf
config.status: creating libguile/guile-doc-snarf
config.status: creating libguile/guile-func-name-check
config.status: creating libguile/guile-snarf-docs
config.status: creating test-suite/standalone/test-use-srfi
config.status: creating test-suite/standalone/test-fast-slot-ref
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands
config.status: executing po-directories commands
=== configuring in guile-readline (/<<PKGBUILDDIR>>/guile18/guile-readline)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr'  '--host=x86_64-linux-gnu' '--build=x86_64-linux-gnu' '--with-threads=no' '--disable-error-on-warning' 'build_alias=x86_64-linux-gnu' 'host_alias=x86_64-linux-gnu' 'CFLAGS=-O2 -g' 'LDFLAGS=-Wl,-z,relro' 'CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2' --cache-file=/dev/null --srcdir=.
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for x86_64-linux-gnu-gcc... x86_64-linux-gnu-gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether x86_64-linux-gnu-gcc accepts -g... yes
checking for x86_64-linux-gnu-gcc option to enable C11 features... none needed
checking whether x86_64-linux-gnu-gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of x86_64-linux-gnu-gcc... gcc3
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking how to print strings... printf
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for fgrep... /bin/grep -F
checking for ld used by x86_64-linux-gnu-gcc... /usr/bin/x86_64-linux-gnu-ld
checking if the linker (/usr/bin/x86_64-linux-gnu-ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/x86_64-linux-gnu-nm -B
checking the name lister (/usr/bin/x86_64-linux-gnu-nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/x86_64-linux-gnu-ld option to reload object files... -r
checking for x86_64-linux-gnu-objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for x86_64-linux-gnu-dlltool... dlltool
checking how to associate runtime and link libraries... printf %s\n
checking for x86_64-linux-gnu-ar... x86_64-linux-gnu-ar
checking for archiver @FILE support... @
checking for x86_64-linux-gnu-strip... x86_64-linux-gnu-strip
checking for x86_64-linux-gnu-ranlib... x86_64-linux-gnu-ranlib
checking command to parse /usr/bin/x86_64-linux-gnu-nm -B output from x86_64-linux-gnu-gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for x86_64-linux-gnu-mt... no
checking for mt... no
checking if : is a manifest tool... no
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if x86_64-linux-gnu-gcc supports -fno-rtti -fno-exceptions... yes
checking for x86_64-linux-gnu-gcc option to produce PIC... -fPIC -DPIC
checking if x86_64-linux-gnu-gcc PIC flag -fPIC -DPIC works... yes
checking if x86_64-linux-gnu-gcc static flag -static works... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... (cached) yes
checking whether the x86_64-linux-gnu-gcc linker (/usr/bin/x86_64-linux-gnu-ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for tgoto in -lncurses... yes
checking for readline in -lreadline... yes
checking for siginterrupt... yes
checking for rl_clear_signals... yes
checking for rl_cleanup_after_signal... yes
checking for rl_filename_completion_function... yes
checking for rl_get_keymap... yes
checking for rl_getc_function pointer in readline... yes
checking for strdup... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating ice-9/Makefile
config.status: creating guile-readline-config.h
config.status: executing depfiles commands
config.status: executing libtool commands
cd guile18 && /usr/bin/make -j4 
make[2]: Entering directory '/<<PKGBUILDDIR>>/guile18'
/usr/bin/make  all-recursive
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18'
Making all in oop
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop'
Making all in goops
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop'
make[5]: Nothing to be done for 'all-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop'
Making all in libguile
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
mawk -f ./cpp_cnvt.awk < ./cpp_err_symbols.in > \
	cpp_err_symbols.tmp
mawk -f ./cpp_cnvt.awk < ./cpp_sig_symbols.in > \
	cpp_sig_symbols.tmp
sed < ./version.h.in > version.h.tmp \
  -e s:@-GUILE_MAJOR_VERSION-@:1: \
  -e s:@-GUILE_MINOR_VERSION-@:8: \
  -e s:@-GUILE_MICRO_VERSION-@:8:
Generating libpath.h...
mv cpp_err_symbols.tmp cpp_err_symbols.c
mv cpp_sig_symbols.tmp cpp_sig_symbols.c
mv version.h.tmp version.h
if [ "no" = "yes" ]; then \
	x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I.. -I.. -I.. -c -o gen-scmconfig.o gen-scmconfig.c; \
else \
	x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -c -o gen-scmconfig.o gen-scmconfig.c; \
fi
if [ "no" = "yes" ]; then \
	x86_64-linux-gnu-gcc -o gen-scmconfig gen-scmconfig.o; \
else \
	/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes  -Wl,-z,relro -o gen-scmconfig gen-scmconfig.o  -lgmp -lcrypt -lm -lltdl ; \
fi
libtool: link: x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -Wl,-z -Wl,relro -o gen-scmconfig gen-scmconfig.o  -lgmp -lcrypt -lm -lltdl
rm -f scmconfig.h.tmp
cat ./scmconfig.h.top > scmconfig.h.tmp
./gen-scmconfig >> scmconfig.h.tmp
chmod 444 scmconfig.h.tmp
rm -f scmconfig.h
mv scmconfig.h.tmp scmconfig.h
./guile-snarf -o alist.x alist.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o arbiters.x arbiters.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o async.x async.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o backtrace.x backtrace.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o boolean.x boolean.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o chars.x chars.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o continuations.x continuations.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o debug.x debug.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o deprecation.x deprecation.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o deprecated.x deprecated.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o discouraged.x discouraged.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o dynl.x dynl.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o dynwind.x dynwind.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o environments.x environments.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o eq.x eq.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o error.x error.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o eval.x eval.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o evalext.x evalext.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o extensions.x extensions.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o feature.x feature.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o fluids.x fluids.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o fports.x fports.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o futures.x futures.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gc.x gc.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gc-mark.x gc-mark.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gc-segment.x gc-segment.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gc-malloc.x gc-malloc.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gc-card.x gc-card.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o goops.x goops.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o gsubr.x gsubr.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o guardians.x guardians.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o hash.x hash.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o hashtab.x hashtab.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o hooks.x hooks.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o i18n.x i18n.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o init.x init.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o ioext.x ioext.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o keywords.x keywords.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o lang.x lang.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o list.x list.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o load.x load.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o macros.x macros.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o mallocs.x mallocs.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o modules.x modules.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o numbers.x numbers.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o objects.x objects.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o objprop.x objprop.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o options.x options.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o pairs.x pairs.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o ports.x ports.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o print.x print.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o procprop.x procprop.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o procs.x procs.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o properties.x properties.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o random.x random.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o rdelim.x rdelim.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o read.x read.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o root.x root.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o rw.x rw.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o scmsigs.x scmsigs.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o script.x script.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o simpos.x simpos.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o smob.x smob.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o sort.x sort.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o srcprop.x srcprop.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o stackchk.x stackchk.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o stacks.x stacks.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o stime.x stime.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o strings.x strings.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o srfi-4.x srfi-4.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o srfi-13.x srfi-13.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o srfi-14.x srfi-14.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o strorder.x strorder.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o strports.x strports.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o struct.x struct.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o symbols.x symbols.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o threads.x threads.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o throw.x throw.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o values.x values.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o variable.x variable.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o vectors.x vectors.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o version.x version.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o vports.x vports.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o weaks.x weaks.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o ramap.x ramap.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o unif.x unif.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o filesys.x filesys.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o posix.x posix.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o net_db.x net_db.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o socket.x socket.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
./guile-snarf -o regex-posix.x regex-posix.c -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
/usr/bin/make  all-am
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT guile-guile.o -MD -MP -MF .deps/guile-guile.Tpo -c -o guile-guile.o `test -f 'guile.c' || echo './'`guile.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-alist.lo -MD -MP -MF .deps/libguile_la-alist.Tpo -c -o libguile_la-alist.lo `test -f 'alist.c' || echo './'`alist.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-arbiters.lo -MD -MP -MF .deps/libguile_la-arbiters.Tpo -c -o libguile_la-arbiters.lo `test -f 'arbiters.c' || echo './'`arbiters.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-async.lo -MD -MP -MF .deps/libguile_la-async.Tpo -c -o libguile_la-async.lo `test -f 'async.c' || echo './'`async.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-arbiters.lo -MD -MP -MF .deps/libguile_la-arbiters.Tpo -c arbiters.c  -fPIC -DPIC -o .libs/libguile_la-arbiters.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-async.lo -MD -MP -MF .deps/libguile_la-async.Tpo -c async.c  -fPIC -DPIC -o .libs/libguile_la-async.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-alist.lo -MD -MP -MF .deps/libguile_la-alist.Tpo -c alist.c  -fPIC -DPIC -o .libs/libguile_la-alist.o
mv -f .deps/guile-guile.Tpo .deps/guile-guile.Po
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-backtrace.lo -MD -MP -MF .deps/libguile_la-backtrace.Tpo -c -o libguile_la-backtrace.lo `test -f 'backtrace.c' || echo './'`backtrace.c
async.c:250:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
      write (sleep_fd, &dummy, 1);
      ^~~~~  ~~~~~~~~~~~~~~~~~~~
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-arbiters.lo -MD -MP -MF .deps/libguile_la-arbiters.Tpo -c arbiters.c -o libguile_la-arbiters.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-backtrace.lo -MD -MP -MF .deps/libguile_la-backtrace.Tpo -c backtrace.c  -fPIC -DPIC -o .libs/libguile_la-backtrace.o
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-async.lo -MD -MP -MF .deps/libguile_la-async.Tpo -c async.c -o libguile_la-async.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-alist.lo -MD -MP -MF .deps/libguile_la-alist.Tpo -c alist.c -o libguile_la-alist.o >/dev/null 2>&1
mv -f .deps/libguile_la-arbiters.Tpo .deps/libguile_la-arbiters.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-boolean.lo -MD -MP -MF .deps/libguile_la-boolean.Tpo -c -o libguile_la-boolean.lo `test -f 'boolean.c' || echo './'`boolean.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-boolean.lo -MD -MP -MF .deps/libguile_la-boolean.Tpo -c boolean.c  -fPIC -DPIC -o .libs/libguile_la-boolean.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-boolean.lo -MD -MP -MF .deps/libguile_la-boolean.Tpo -c boolean.c -o libguile_la-boolean.o >/dev/null 2>&1
mv -f .deps/libguile_la-async.Tpo .deps/libguile_la-async.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-chars.lo -MD -MP -MF .deps/libguile_la-chars.Tpo -c -o libguile_la-chars.lo `test -f 'chars.c' || echo './'`chars.c
mv -f .deps/libguile_la-alist.Tpo .deps/libguile_la-alist.Plo
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-chars.lo -MD -MP -MF .deps/libguile_la-chars.Tpo -c chars.c  -fPIC -DPIC -o .libs/libguile_la-chars.o
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-continuations.lo -MD -MP -MF .deps/libguile_la-continuations.Tpo -c -o libguile_la-continuations.lo `test -f 'continuations.c' || echo './'`continuations.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-continuations.lo -MD -MP -MF .deps/libguile_la-continuations.Tpo -c continuations.c  -fPIC -DPIC -o .libs/libguile_la-continuations.o
mv -f .deps/libguile_la-boolean.Tpo .deps/libguile_la-boolean.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-convert.lo -MD -MP -MF .deps/libguile_la-convert.Tpo -c -o libguile_la-convert.lo `test -f 'convert.c' || echo './'`convert.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-convert.lo -MD -MP -MF .deps/libguile_la-convert.Tpo -c convert.c  -fPIC -DPIC -o .libs/libguile_la-convert.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-backtrace.lo -MD -MP -MF .deps/libguile_la-backtrace.Tpo -c backtrace.c -o libguile_la-backtrace.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-chars.lo -MD -MP -MF .deps/libguile_la-chars.Tpo -c chars.c -o libguile_la-chars.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-continuations.lo -MD -MP -MF .deps/libguile_la-continuations.Tpo -c continuations.c -o libguile_la-continuations.o >/dev/null 2>&1
mv -f .deps/libguile_la-continuations.Tpo .deps/libguile_la-continuations.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-debug.lo -MD -MP -MF .deps/libguile_la-debug.Tpo -c -o libguile_la-debug.lo `test -f 'debug.c' || echo './'`debug.c
mv -f .deps/libguile_la-chars.Tpo .deps/libguile_la-chars.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecation.lo -MD -MP -MF .deps/libguile_la-deprecation.Tpo -c -o libguile_la-deprecation.lo `test -f 'deprecation.c' || echo './'`deprecation.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-convert.lo -MD -MP -MF .deps/libguile_la-convert.Tpo -c convert.c -o libguile_la-convert.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-debug.lo -MD -MP -MF .deps/libguile_la-debug.Tpo -c debug.c  -fPIC -DPIC -o .libs/libguile_la-debug.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecation.lo -MD -MP -MF .deps/libguile_la-deprecation.Tpo -c deprecation.c  -fPIC -DPIC -o .libs/libguile_la-deprecation.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecation.lo -MD -MP -MF .deps/libguile_la-deprecation.Tpo -c deprecation.c -o libguile_la-deprecation.o >/dev/null 2>&1
mv -f .deps/libguile_la-backtrace.Tpo .deps/libguile_la-backtrace.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecated.lo -MD -MP -MF .deps/libguile_la-deprecated.Tpo -c -o libguile_la-deprecated.lo `test -f 'deprecated.c' || echo './'`deprecated.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecated.lo -MD -MP -MF .deps/libguile_la-deprecated.Tpo -c deprecated.c  -fPIC -DPIC -o .libs/libguile_la-deprecated.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-debug.lo -MD -MP -MF .deps/libguile_la-debug.Tpo -c debug.c -o libguile_la-debug.o >/dev/null 2>&1
mv -f .deps/libguile_la-convert.Tpo .deps/libguile_la-convert.Plo
mv -f .deps/libguile_la-deprecation.Tpo .deps/libguile_la-deprecation.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-discouraged.lo -MD -MP -MF .deps/libguile_la-discouraged.Tpo -c -o libguile_la-discouraged.lo `test -f 'discouraged.c' || echo './'`discouraged.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-dynwind.lo -MD -MP -MF .deps/libguile_la-dynwind.Tpo -c -o libguile_la-dynwind.lo `test -f 'dynwind.c' || echo './'`dynwind.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-discouraged.lo -MD -MP -MF .deps/libguile_la-discouraged.Tpo -c discouraged.c  -fPIC -DPIC -o .libs/libguile_la-discouraged.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-dynwind.lo -MD -MP -MF .deps/libguile_la-dynwind.Tpo -c dynwind.c  -fPIC -DPIC -o .libs/libguile_la-dynwind.o
mv -f .deps/libguile_la-debug.Tpo .deps/libguile_la-debug.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-environments.lo -MD -MP -MF .deps/libguile_la-environments.Tpo -c -o libguile_la-environments.lo `test -f 'environments.c' || echo './'`environments.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-environments.lo -MD -MP -MF .deps/libguile_la-environments.Tpo -c environments.c  -fPIC -DPIC -o .libs/libguile_la-environments.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-discouraged.lo -MD -MP -MF .deps/libguile_la-discouraged.Tpo -c discouraged.c -o libguile_la-discouraged.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-dynwind.lo -MD -MP -MF .deps/libguile_la-dynwind.Tpo -c dynwind.c -o libguile_la-dynwind.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-deprecated.lo -MD -MP -MF .deps/libguile_la-deprecated.Tpo -c deprecated.c -o libguile_la-deprecated.o >/dev/null 2>&1
mv -f .deps/libguile_la-discouraged.Tpo .deps/libguile_la-discouraged.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eq.lo -MD -MP -MF .deps/libguile_la-eq.Tpo -c -o libguile_la-eq.lo `test -f 'eq.c' || echo './'`eq.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eq.lo -MD -MP -MF .deps/libguile_la-eq.Tpo -c eq.c  -fPIC -DPIC -o .libs/libguile_la-eq.o
mv -f .deps/libguile_la-dynwind.Tpo .deps/libguile_la-dynwind.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-error.lo -MD -MP -MF .deps/libguile_la-error.Tpo -c -o libguile_la-error.lo `test -f 'error.c' || echo './'`error.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-error.lo -MD -MP -MF .deps/libguile_la-error.Tpo -c error.c  -fPIC -DPIC -o .libs/libguile_la-error.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eq.lo -MD -MP -MF .deps/libguile_la-eq.Tpo -c eq.c -o libguile_la-eq.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-error.lo -MD -MP -MF .deps/libguile_la-error.Tpo -c error.c -o libguile_la-error.o >/dev/null 2>&1
mv -f .deps/libguile_la-eq.Tpo .deps/libguile_la-eq.Plo
mv -f .deps/libguile_la-deprecated.Tpo .deps/libguile_la-deprecated.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eval.lo -MD -MP -MF .deps/libguile_la-eval.Tpo -c -o libguile_la-eval.lo `test -f 'eval.c' || echo './'`eval.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-evalext.lo -MD -MP -MF .deps/libguile_la-evalext.Tpo -c -o libguile_la-evalext.lo `test -f 'evalext.c' || echo './'`evalext.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eval.lo -MD -MP -MF .deps/libguile_la-eval.Tpo -c eval.c  -fPIC -DPIC -o .libs/libguile_la-eval.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-evalext.lo -MD -MP -MF .deps/libguile_la-evalext.Tpo -c evalext.c  -fPIC -DPIC -o .libs/libguile_la-evalext.o
mv -f .deps/libguile_la-error.Tpo .deps/libguile_la-error.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-extensions.lo -MD -MP -MF .deps/libguile_la-extensions.Tpo -c -o libguile_la-extensions.lo `test -f 'extensions.c' || echo './'`extensions.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-environments.lo -MD -MP -MF .deps/libguile_la-environments.Tpo -c environments.c -o libguile_la-environments.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-extensions.lo -MD -MP -MF .deps/libguile_la-extensions.Tpo -c extensions.c  -fPIC -DPIC -o .libs/libguile_la-extensions.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-evalext.lo -MD -MP -MF .deps/libguile_la-evalext.Tpo -c evalext.c -o libguile_la-evalext.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-extensions.lo -MD -MP -MF .deps/libguile_la-extensions.Tpo -c extensions.c -o libguile_la-extensions.o >/dev/null 2>&1
mv -f .deps/libguile_la-evalext.Tpo .deps/libguile_la-evalext.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-feature.lo -MD -MP -MF .deps/libguile_la-feature.Tpo -c -o libguile_la-feature.lo `test -f 'feature.c' || echo './'`feature.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-feature.lo -MD -MP -MF .deps/libguile_la-feature.Tpo -c feature.c  -fPIC -DPIC -o .libs/libguile_la-feature.o
mv -f .deps/libguile_la-extensions.Tpo .deps/libguile_la-extensions.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fluids.lo -MD -MP -MF .deps/libguile_la-fluids.Tpo -c -o libguile_la-fluids.lo `test -f 'fluids.c' || echo './'`fluids.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fluids.lo -MD -MP -MF .deps/libguile_la-fluids.Tpo -c fluids.c  -fPIC -DPIC -o .libs/libguile_la-fluids.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-feature.lo -MD -MP -MF .deps/libguile_la-feature.Tpo -c feature.c -o libguile_la-feature.o >/dev/null 2>&1
mv -f .deps/libguile_la-feature.Tpo .deps/libguile_la-feature.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fports.lo -MD -MP -MF .deps/libguile_la-fports.Tpo -c -o libguile_la-fports.lo `test -f 'fports.c' || echo './'`fports.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fports.lo -MD -MP -MF .deps/libguile_la-fports.Tpo -c fports.c  -fPIC -DPIC -o .libs/libguile_la-fports.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fluids.lo -MD -MP -MF .deps/libguile_la-fluids.Tpo -c fluids.c -o libguile_la-fluids.o >/dev/null 2>&1
mv -f .deps/libguile_la-environments.Tpo .deps/libguile_la-environments.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-futures.lo -MD -MP -MF .deps/libguile_la-futures.Tpo -c -o libguile_la-futures.lo `test -f 'futures.c' || echo './'`futures.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-futures.lo -MD -MP -MF .deps/libguile_la-futures.Tpo -c futures.c  -fPIC -DPIC -o .libs/libguile_la-futures.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-futures.lo -MD -MP -MF .deps/libguile_la-futures.Tpo -c futures.c -o libguile_la-futures.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-fports.lo -MD -MP -MF .deps/libguile_la-fports.Tpo -c fports.c -o libguile_la-fports.o >/dev/null 2>&1
mv -f .deps/libguile_la-fluids.Tpo .deps/libguile_la-fluids.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc.lo -MD -MP -MF .deps/libguile_la-gc.Tpo -c -o libguile_la-gc.lo `test -f 'gc.c' || echo './'`gc.c
mv -f .deps/libguile_la-futures.Tpo .deps/libguile_la-futures.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-mark.lo -MD -MP -MF .deps/libguile_la-gc-mark.Tpo -c -o libguile_la-gc-mark.lo `test -f 'gc-mark.c' || echo './'`gc-mark.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc.lo -MD -MP -MF .deps/libguile_la-gc.Tpo -c gc.c  -fPIC -DPIC -o .libs/libguile_la-gc.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-mark.lo -MD -MP -MF .deps/libguile_la-gc-mark.Tpo -c gc-mark.c  -fPIC -DPIC -o .libs/libguile_la-gc-mark.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-mark.lo -MD -MP -MF .deps/libguile_la-gc-mark.Tpo -c gc-mark.c -o libguile_la-gc-mark.o >/dev/null 2>&1
mv -f .deps/libguile_la-fports.Tpo .deps/libguile_la-fports.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-segment.lo -MD -MP -MF .deps/libguile_la-gc-segment.Tpo -c -o libguile_la-gc-segment.lo `test -f 'gc-segment.c' || echo './'`gc-segment.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc.lo -MD -MP -MF .deps/libguile_la-gc.Tpo -c gc.c -o libguile_la-gc.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-segment.lo -MD -MP -MF .deps/libguile_la-gc-segment.Tpo -c gc-segment.c  -fPIC -DPIC -o .libs/libguile_la-gc-segment.o
gc-segment.c:415:5: warning: misleading indentation; statement is not part of the previous 'if' [-Wmisleading-indentation]
    {
    ^
gc-segment.c:411:3: note: previous statement is here
  if ((scm_t_cell* ) obj < lowest_cell || (scm_t_cell*) obj >= highest_cell)
  ^
mv -f .deps/libguile_la-gc-mark.Tpo .deps/libguile_la-gc-mark.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-malloc.lo -MD -MP -MF .deps/libguile_la-gc-malloc.Tpo -c -o libguile_la-gc-malloc.lo `test -f 'gc-malloc.c' || echo './'`gc-malloc.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-malloc.lo -MD -MP -MF .deps/libguile_la-gc-malloc.Tpo -c gc-malloc.c  -fPIC -DPIC -o .libs/libguile_la-gc-malloc.o
mv -f .deps/libguile_la-gc.Tpo .deps/libguile_la-gc.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-card.lo -MD -MP -MF .deps/libguile_la-gc-card.Tpo -c -o libguile_la-gc-card.lo `test -f 'gc-card.c' || echo './'`gc-card.c
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-segment.lo -MD -MP -MF .deps/libguile_la-gc-segment.Tpo -c gc-segment.c -o libguile_la-gc-segment.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-card.lo -MD -MP -MF .deps/libguile_la-gc-card.Tpo -c gc-card.c  -fPIC -DPIC -o .libs/libguile_la-gc-card.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-malloc.lo -MD -MP -MF .deps/libguile_la-gc-malloc.Tpo -c gc-malloc.c -o libguile_la-gc-malloc.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-card.lo -MD -MP -MF .deps/libguile_la-gc-card.Tpo -c gc-card.c -o libguile_la-gc-card.o >/dev/null 2>&1
mv -f .deps/libguile_la-gc-segment.Tpo .deps/libguile_la-gc-segment.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-freelist.lo -MD -MP -MF .deps/libguile_la-gc-freelist.Tpo -c -o libguile_la-gc-freelist.lo `test -f 'gc-freelist.c' || echo './'`gc-freelist.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-freelist.lo -MD -MP -MF .deps/libguile_la-gc-freelist.Tpo -c gc-freelist.c  -fPIC -DPIC -o .libs/libguile_la-gc-freelist.o
mv -f .deps/libguile_la-gc-malloc.Tpo .deps/libguile_la-gc-malloc.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc_os_dep.lo -MD -MP -MF .deps/libguile_la-gc_os_dep.Tpo -c -o libguile_la-gc_os_dep.lo `test -f 'gc_os_dep.c' || echo './'`gc_os_dep.c
mv -f .deps/libguile_la-gc-card.Tpo .deps/libguile_la-gc-card.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gdbint.lo -MD -MP -MF .deps/libguile_la-gdbint.Tpo -c -o libguile_la-gdbint.lo `test -f 'gdbint.c' || echo './'`gdbint.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc_os_dep.lo -MD -MP -MF .deps/libguile_la-gc_os_dep.Tpo -c gc_os_dep.c  -fPIC -DPIC -o .libs/libguile_la-gc_os_dep.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc-freelist.lo -MD -MP -MF .deps/libguile_la-gc-freelist.Tpo -c gc-freelist.c -o libguile_la-gc-freelist.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gdbint.lo -MD -MP -MF .deps/libguile_la-gdbint.Tpo -c gdbint.c  -fPIC -DPIC -o .libs/libguile_la-gdbint.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gc_os_dep.lo -MD -MP -MF .deps/libguile_la-gc_os_dep.Tpo -c gc_os_dep.c -o libguile_la-gc_os_dep.o >/dev/null 2>&1
mv -f .deps/libguile_la-gc-freelist.Tpo .deps/libguile_la-gc-freelist.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_data.lo -MD -MP -MF .deps/libguile_la-gh_data.Tpo -c -o libguile_la-gh_data.lo `test -f 'gh_data.c' || echo './'`gh_data.c
mv -f .deps/libguile_la-gc_os_dep.Tpo .deps/libguile_la-gc_os_dep.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_eval.lo -MD -MP -MF .deps/libguile_la-gh_eval.Tpo -c -o libguile_la-gh_eval.lo `test -f 'gh_eval.c' || echo './'`gh_eval.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_data.lo -MD -MP -MF .deps/libguile_la-gh_data.Tpo -c gh_data.c  -fPIC -DPIC -o .libs/libguile_la-gh_data.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_eval.lo -MD -MP -MF .deps/libguile_la-gh_eval.Tpo -c gh_eval.c  -fPIC -DPIC -o .libs/libguile_la-gh_eval.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gdbint.lo -MD -MP -MF .deps/libguile_la-gdbint.Tpo -c gdbint.c -o libguile_la-gdbint.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_eval.lo -MD -MP -MF .deps/libguile_la-gh_eval.Tpo -c gh_eval.c -o libguile_la-gh_eval.o >/dev/null 2>&1
mv -f .deps/libguile_la-gdbint.Tpo .deps/libguile_la-gdbint.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_funcs.lo -MD -MP -MF .deps/libguile_la-gh_funcs.Tpo -c -o libguile_la-gh_funcs.lo `test -f 'gh_funcs.c' || echo './'`gh_funcs.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_funcs.lo -MD -MP -MF .deps/libguile_la-gh_funcs.Tpo -c gh_funcs.c  -fPIC -DPIC -o .libs/libguile_la-gh_funcs.o
mv -f .deps/libguile_la-gh_eval.Tpo .deps/libguile_la-gh_eval.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_init.lo -MD -MP -MF .deps/libguile_la-gh_init.Tpo -c -o libguile_la-gh_init.lo `test -f 'gh_init.c' || echo './'`gh_init.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_data.lo -MD -MP -MF .deps/libguile_la-gh_data.Tpo -c gh_data.c -o libguile_la-gh_data.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_init.lo -MD -MP -MF .deps/libguile_la-gh_init.Tpo -c gh_init.c  -fPIC -DPIC -o .libs/libguile_la-gh_init.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_funcs.lo -MD -MP -MF .deps/libguile_la-gh_funcs.Tpo -c gh_funcs.c -o libguile_la-gh_funcs.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_init.lo -MD -MP -MF .deps/libguile_la-gh_init.Tpo -c gh_init.c -o libguile_la-gh_init.o >/dev/null 2>&1
mv -f .deps/libguile_la-gh_funcs.Tpo .deps/libguile_la-gh_funcs.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_io.lo -MD -MP -MF .deps/libguile_la-gh_io.Tpo -c -o libguile_la-gh_io.lo `test -f 'gh_io.c' || echo './'`gh_io.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_io.lo -MD -MP -MF .deps/libguile_la-gh_io.Tpo -c gh_io.c  -fPIC -DPIC -o .libs/libguile_la-gh_io.o
mv -f .deps/libguile_la-gh_init.Tpo .deps/libguile_la-gh_init.Plo
mv -f .deps/libguile_la-gh_data.Tpo .deps/libguile_la-gh_data.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_list.lo -MD -MP -MF .deps/libguile_la-gh_list.Tpo -c -o libguile_la-gh_list.lo `test -f 'gh_list.c' || echo './'`gh_list.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_predicates.lo -MD -MP -MF .deps/libguile_la-gh_predicates.Tpo -c -o libguile_la-gh_predicates.lo `test -f 'gh_predicates.c' || echo './'`gh_predicates.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_list.lo -MD -MP -MF .deps/libguile_la-gh_list.Tpo -c gh_list.c  -fPIC -DPIC -o .libs/libguile_la-gh_list.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_predicates.lo -MD -MP -MF .deps/libguile_la-gh_predicates.Tpo -c gh_predicates.c  -fPIC -DPIC -o .libs/libguile_la-gh_predicates.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_io.lo -MD -MP -MF .deps/libguile_la-gh_io.Tpo -c gh_io.c -o libguile_la-gh_io.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_list.lo -MD -MP -MF .deps/libguile_la-gh_list.Tpo -c gh_list.c -o libguile_la-gh_list.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gh_predicates.lo -MD -MP -MF .deps/libguile_la-gh_predicates.Tpo -c gh_predicates.c -o libguile_la-gh_predicates.o >/dev/null 2>&1
mv -f .deps/libguile_la-gh_io.Tpo .deps/libguile_la-gh_io.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-goops.lo -MD -MP -MF .deps/libguile_la-goops.Tpo -c -o libguile_la-goops.lo `test -f 'goops.c' || echo './'`goops.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-goops.lo -MD -MP -MF .deps/libguile_la-goops.Tpo -c goops.c  -fPIC -DPIC -o .libs/libguile_la-goops.o
mv -f .deps/libguile_la-gh_predicates.Tpo .deps/libguile_la-gh_predicates.Plo
mv -f .deps/libguile_la-gh_list.Tpo .deps/libguile_la-gh_list.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gsubr.lo -MD -MP -MF .deps/libguile_la-gsubr.Tpo -c -o libguile_la-gsubr.lo `test -f 'gsubr.c' || echo './'`gsubr.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-guardians.lo -MD -MP -MF .deps/libguile_la-guardians.Tpo -c -o libguile_la-guardians.lo `test -f 'guardians.c' || echo './'`guardians.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-guardians.lo -MD -MP -MF .deps/libguile_la-guardians.Tpo -c guardians.c  -fPIC -DPIC -o .libs/libguile_la-guardians.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gsubr.lo -MD -MP -MF .deps/libguile_la-gsubr.Tpo -c gsubr.c  -fPIC -DPIC -o .libs/libguile_la-gsubr.o
goops.c:908:8: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                   + 2 * scm_vtable_offset_user);
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
goops.c:908:8: note: use array indexing to silence this warning
                                   + 2 * scm_vtable_offset_user);
                                   ^
                                   [                           ]
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-guardians.lo -MD -MP -MF .deps/libguile_la-guardians.Tpo -c guardians.c -o libguile_la-guardians.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-gsubr.lo -MD -MP -MF .deps/libguile_la-gsubr.Tpo -c gsubr.c -o libguile_la-gsubr.o >/dev/null 2>&1
mv -f .deps/libguile_la-guardians.Tpo .deps/libguile_la-guardians.Plo
mv -f .deps/libguile_la-gsubr.Tpo .deps/libguile_la-gsubr.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hash.lo -MD -MP -MF .deps/libguile_la-hash.Tpo -c -o libguile_la-hash.lo `test -f 'hash.c' || echo './'`hash.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hashtab.lo -MD -MP -MF .deps/libguile_la-hashtab.Tpo -c -o libguile_la-hashtab.lo `test -f 'hashtab.c' || echo './'`hashtab.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hash.lo -MD -MP -MF .deps/libguile_la-hash.Tpo -c hash.c  -fPIC -DPIC -o .libs/libguile_la-hash.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hashtab.lo -MD -MP -MF .deps/libguile_la-hashtab.Tpo -c hashtab.c  -fPIC -DPIC -o .libs/libguile_la-hashtab.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hash.lo -MD -MP -MF .deps/libguile_la-hash.Tpo -c hash.c -o libguile_la-hash.o >/dev/null 2>&1
mv -f .deps/libguile_la-hash.Tpo .deps/libguile_la-hash.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hooks.lo -MD -MP -MF .deps/libguile_la-hooks.Tpo -c -o libguile_la-hooks.lo `test -f 'hooks.c' || echo './'`hooks.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hashtab.lo -MD -MP -MF .deps/libguile_la-hashtab.Tpo -c hashtab.c -o libguile_la-hashtab.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hooks.lo -MD -MP -MF .deps/libguile_la-hooks.Tpo -c hooks.c  -fPIC -DPIC -o .libs/libguile_la-hooks.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-hooks.lo -MD -MP -MF .deps/libguile_la-hooks.Tpo -c hooks.c -o libguile_la-hooks.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-goops.lo -MD -MP -MF .deps/libguile_la-goops.Tpo -c goops.c -o libguile_la-goops.o >/dev/null 2>&1
mv -f .deps/libguile_la-hashtab.Tpo .deps/libguile_la-hashtab.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-i18n.lo -MD -MP -MF .deps/libguile_la-i18n.Tpo -c -o libguile_la-i18n.lo `test -f 'i18n.c' || echo './'`i18n.c
mv -f .deps/libguile_la-hooks.Tpo .deps/libguile_la-hooks.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-init.lo -MD -MP -MF .deps/libguile_la-init.Tpo -c -o libguile_la-init.lo `test -f 'init.c' || echo './'`init.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-i18n.lo -MD -MP -MF .deps/libguile_la-i18n.Tpo -c i18n.c  -fPIC -DPIC -o .libs/libguile_la-i18n.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-init.lo -MD -MP -MF .deps/libguile_la-init.Tpo -c init.c  -fPIC -DPIC -o .libs/libguile_la-init.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-i18n.lo -MD -MP -MF .deps/libguile_la-i18n.Tpo -c i18n.c -o libguile_la-i18n.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-init.lo -MD -MP -MF .deps/libguile_la-init.Tpo -c init.c -o libguile_la-init.o >/dev/null 2>&1
mv -f .deps/libguile_la-i18n.Tpo .deps/libguile_la-i18n.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-inline.lo -MD -MP -MF .deps/libguile_la-inline.Tpo -c -o libguile_la-inline.lo `test -f 'inline.c' || echo './'`inline.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-inline.lo -MD -MP -MF .deps/libguile_la-inline.Tpo -c inline.c  -fPIC -DPIC -o .libs/libguile_la-inline.o
mv -f .deps/libguile_la-init.Tpo .deps/libguile_la-init.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ioext.lo -MD -MP -MF .deps/libguile_la-ioext.Tpo -c -o libguile_la-ioext.lo `test -f 'ioext.c' || echo './'`ioext.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ioext.lo -MD -MP -MF .deps/libguile_la-ioext.Tpo -c ioext.c  -fPIC -DPIC -o .libs/libguile_la-ioext.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-inline.lo -MD -MP -MF .deps/libguile_la-inline.Tpo -c inline.c -o libguile_la-inline.o >/dev/null 2>&1
mv -f .deps/libguile_la-inline.Tpo .deps/libguile_la-inline.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-keywords.lo -MD -MP -MF .deps/libguile_la-keywords.Tpo -c -o libguile_la-keywords.lo `test -f 'keywords.c' || echo './'`keywords.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-eval.lo -MD -MP -MF .deps/libguile_la-eval.Tpo -c eval.c -o libguile_la-eval.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-keywords.lo -MD -MP -MF .deps/libguile_la-keywords.Tpo -c keywords.c  -fPIC -DPIC -o .libs/libguile_la-keywords.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ioext.lo -MD -MP -MF .deps/libguile_la-ioext.Tpo -c ioext.c -o libguile_la-ioext.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-keywords.lo -MD -MP -MF .deps/libguile_la-keywords.Tpo -c keywords.c -o libguile_la-keywords.o >/dev/null 2>&1
mv -f .deps/libguile_la-ioext.Tpo .deps/libguile_la-ioext.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-lang.lo -MD -MP -MF .deps/libguile_la-lang.Tpo -c -o libguile_la-lang.lo `test -f 'lang.c' || echo './'`lang.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-lang.lo -MD -MP -MF .deps/libguile_la-lang.Tpo -c lang.c  -fPIC -DPIC -o .libs/libguile_la-lang.o
mv -f .deps/libguile_la-keywords.Tpo .deps/libguile_la-keywords.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-list.lo -MD -MP -MF .deps/libguile_la-list.Tpo -c -o libguile_la-list.lo `test -f 'list.c' || echo './'`list.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-list.lo -MD -MP -MF .deps/libguile_la-list.Tpo -c list.c  -fPIC -DPIC -o .libs/libguile_la-list.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-lang.lo -MD -MP -MF .deps/libguile_la-lang.Tpo -c lang.c -o libguile_la-lang.o >/dev/null 2>&1
mv -f .deps/libguile_la-lang.Tpo .deps/libguile_la-lang.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-load.lo -MD -MP -MF .deps/libguile_la-load.Tpo -c -o libguile_la-load.lo `test -f 'load.c' || echo './'`load.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-load.lo -MD -MP -MF .deps/libguile_la-load.Tpo -c load.c  -fPIC -DPIC -o .libs/libguile_la-load.o
mv -f .deps/libguile_la-goops.Tpo .deps/libguile_la-goops.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-macros.lo -MD -MP -MF .deps/libguile_la-macros.Tpo -c -o libguile_la-macros.lo `test -f 'macros.c' || echo './'`macros.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-macros.lo -MD -MP -MF .deps/libguile_la-macros.Tpo -c macros.c  -fPIC -DPIC -o .libs/libguile_la-macros.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-load.lo -MD -MP -MF .deps/libguile_la-load.Tpo -c load.c -o libguile_la-load.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-list.lo -MD -MP -MF .deps/libguile_la-list.Tpo -c list.c -o libguile_la-list.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-macros.lo -MD -MP -MF .deps/libguile_la-macros.Tpo -c macros.c -o libguile_la-macros.o >/dev/null 2>&1
mv -f .deps/libguile_la-load.Tpo .deps/libguile_la-load.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-mallocs.lo -MD -MP -MF .deps/libguile_la-mallocs.Tpo -c -o libguile_la-mallocs.lo `test -f 'mallocs.c' || echo './'`mallocs.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-mallocs.lo -MD -MP -MF .deps/libguile_la-mallocs.Tpo -c mallocs.c  -fPIC -DPIC -o .libs/libguile_la-mallocs.o
mv -f .deps/libguile_la-macros.Tpo .deps/libguile_la-macros.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-modules.lo -MD -MP -MF .deps/libguile_la-modules.Tpo -c -o libguile_la-modules.lo `test -f 'modules.c' || echo './'`modules.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-modules.lo -MD -MP -MF .deps/libguile_la-modules.Tpo -c modules.c  -fPIC -DPIC -o .libs/libguile_la-modules.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-mallocs.lo -MD -MP -MF .deps/libguile_la-mallocs.Tpo -c mallocs.c -o libguile_la-mallocs.o >/dev/null 2>&1
mv -f .deps/libguile_la-list.Tpo .deps/libguile_la-list.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-numbers.lo -MD -MP -MF .deps/libguile_la-numbers.Tpo -c -o libguile_la-numbers.lo `test -f 'numbers.c' || echo './'`numbers.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-numbers.lo -MD -MP -MF .deps/libguile_la-numbers.Tpo -c numbers.c  -fPIC -DPIC -o .libs/libguile_la-numbers.o
mv -f .deps/libguile_la-mallocs.Tpo .deps/libguile_la-mallocs.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objects.lo -MD -MP -MF .deps/libguile_la-objects.Tpo -c -o libguile_la-objects.lo `test -f 'objects.c' || echo './'`objects.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objects.lo -MD -MP -MF .deps/libguile_la-objects.Tpo -c objects.c  -fPIC -DPIC -o .libs/libguile_la-objects.o
numbers.c:434:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            return SCM_I_MAKINUM(-1);
                   ^~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
numbers.c:784:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
              return SCM_I_MAKINUM (-1);
                     ^~~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
numbers.c:1254:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        return SCM_I_MAKINUM (-1);
               ^~~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-modules.lo -MD -MP -MF .deps/libguile_la-modules.Tpo -c modules.c -o libguile_la-modules.o >/dev/null 2>&1
numbers.c:1745:26: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
  else if (scm_is_eq (n, SCM_I_MAKINUM (-1L)))
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
                                        ^
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
../libguile/tags.h:120:56: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ~~~~~~~~~~~~^~
../libguile/tags.h:97:60: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                                           ^
numbers.c:1865:51: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            return (nn >= 0 ? SCM_I_MAKINUM (0) : SCM_I_MAKINUM(-1));
                                                  ^~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objects.lo -MD -MP -MF .deps/libguile_la-objects.Tpo -c objects.c -o libguile_la-objects.o >/dev/null 2>&1
mv -f .deps/libguile_la-objects.Tpo .deps/libguile_la-objects.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objprop.lo -MD -MP -MF .deps/libguile_la-objprop.Tpo -c -o libguile_la-objprop.lo `test -f 'objprop.c' || echo './'`objprop.c
numbers.c:6206:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                SCM_I_MAKINUM (SCM_MOST_NEGATIVE_FIXNUM));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objprop.lo -MD -MP -MF .deps/libguile_la-objprop.Tpo -c objprop.c  -fPIC -DPIC -o .libs/libguile_la-objprop.o
mv -f .deps/libguile_la-modules.Tpo .deps/libguile_la-modules.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-options.lo -MD -MP -MF .deps/libguile_la-options.Tpo -c -o libguile_la-options.lo `test -f 'options.c' || echo './'`options.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-options.lo -MD -MP -MF .deps/libguile_la-options.Tpo -c options.c  -fPIC -DPIC -o .libs/libguile_la-options.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-objprop.lo -MD -MP -MF .deps/libguile_la-objprop.Tpo -c objprop.c -o libguile_la-objprop.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-options.lo -MD -MP -MF .deps/libguile_la-options.Tpo -c options.c -o libguile_la-options.o >/dev/null 2>&1
mv -f .deps/libguile_la-objprop.Tpo .deps/libguile_la-objprop.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-pairs.lo -MD -MP -MF .deps/libguile_la-pairs.Tpo -c -o libguile_la-pairs.lo `test -f 'pairs.c' || echo './'`pairs.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-pairs.lo -MD -MP -MF .deps/libguile_la-pairs.Tpo -c pairs.c  -fPIC -DPIC -o .libs/libguile_la-pairs.o
mv -f .deps/libguile_la-options.Tpo .deps/libguile_la-options.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ports.lo -MD -MP -MF .deps/libguile_la-ports.Tpo -c -o libguile_la-ports.lo `test -f 'ports.c' || echo './'`ports.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ports.lo -MD -MP -MF .deps/libguile_la-ports.Tpo -c ports.c  -fPIC -DPIC -o .libs/libguile_la-ports.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-pairs.lo -MD -MP -MF .deps/libguile_la-pairs.Tpo -c pairs.c -o libguile_la-pairs.o >/dev/null 2>&1
mv -f .deps/libguile_la-pairs.Tpo .deps/libguile_la-pairs.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-print.lo -MD -MP -MF .deps/libguile_la-print.Tpo -c -o libguile_la-print.lo `test -f 'print.c' || echo './'`print.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-print.lo -MD -MP -MF .deps/libguile_la-print.Tpo -c print.c  -fPIC -DPIC -o .libs/libguile_la-print.o
print.c:77:37: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  { SCM_OPTION_SCM, "closure-hook", SCM_UNPACK (SCM_BOOL_F),
                                    ^~~~~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
print.c:77:37: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
../libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ports.lo -MD -MP -MF .deps/libguile_la-ports.Tpo -c ports.c -o libguile_la-ports.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-print.lo -MD -MP -MF .deps/libguile_la-print.Tpo -c print.c -o libguile_la-print.o >/dev/null 2>&1
mv -f .deps/libguile_la-ports.Tpo .deps/libguile_la-ports.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procprop.lo -MD -MP -MF .deps/libguile_la-procprop.Tpo -c -o libguile_la-procprop.lo `test -f 'procprop.c' || echo './'`procprop.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procprop.lo -MD -MP -MF .deps/libguile_la-procprop.Tpo -c procprop.c  -fPIC -DPIC -o .libs/libguile_la-procprop.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procprop.lo -MD -MP -MF .deps/libguile_la-procprop.Tpo -c procprop.c -o libguile_la-procprop.o >/dev/null 2>&1
mv -f .deps/libguile_la-procprop.Tpo .deps/libguile_la-procprop.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procs.lo -MD -MP -MF .deps/libguile_la-procs.Tpo -c -o libguile_la-procs.lo `test -f 'procs.c' || echo './'`procs.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procs.lo -MD -MP -MF .deps/libguile_la-procs.Tpo -c procs.c  -fPIC -DPIC -o .libs/libguile_la-procs.o
mv -f .deps/libguile_la-print.Tpo .deps/libguile_la-print.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-properties.lo -MD -MP -MF .deps/libguile_la-properties.Tpo -c -o libguile_la-properties.lo `test -f 'properties.c' || echo './'`properties.c
6 warnings generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-numbers.lo -MD -MP -MF .deps/libguile_la-numbers.Tpo -c numbers.c -o libguile_la-numbers.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-properties.lo -MD -MP -MF .deps/libguile_la-properties.Tpo -c properties.c  -fPIC -DPIC -o .libs/libguile_la-properties.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-properties.lo -MD -MP -MF .deps/libguile_la-properties.Tpo -c properties.c -o libguile_la-properties.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-procs.lo -MD -MP -MF .deps/libguile_la-procs.Tpo -c procs.c -o libguile_la-procs.o >/dev/null 2>&1
mv -f .deps/libguile_la-properties.Tpo .deps/libguile_la-properties.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-random.lo -MD -MP -MF .deps/libguile_la-random.Tpo -c -o libguile_la-random.lo `test -f 'random.c' || echo './'`random.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-random.lo -MD -MP -MF .deps/libguile_la-random.Tpo -c random.c  -fPIC -DPIC -o .libs/libguile_la-random.o
mv -f .deps/libguile_la-procs.Tpo .deps/libguile_la-procs.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rdelim.lo -MD -MP -MF .deps/libguile_la-rdelim.Tpo -c -o libguile_la-rdelim.lo `test -f 'rdelim.c' || echo './'`rdelim.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rdelim.lo -MD -MP -MF .deps/libguile_la-rdelim.Tpo -c rdelim.c  -fPIC -DPIC -o .libs/libguile_la-rdelim.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rdelim.lo -MD -MP -MF .deps/libguile_la-rdelim.Tpo -c rdelim.c -o libguile_la-rdelim.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-random.lo -MD -MP -MF .deps/libguile_la-random.Tpo -c random.c -o libguile_la-random.o >/dev/null 2>&1
mv -f .deps/libguile_la-rdelim.Tpo .deps/libguile_la-rdelim.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-read.lo -MD -MP -MF .deps/libguile_la-read.Tpo -c -o libguile_la-read.lo `test -f 'read.c' || echo './'`read.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-read.lo -MD -MP -MF .deps/libguile_la-read.Tpo -c read.c  -fPIC -DPIC -o .libs/libguile_la-read.o
mv -f .deps/libguile_la-eval.Tpo .deps/libguile_la-eval.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-root.lo -MD -MP -MF .deps/libguile_la-root.Tpo -c -o libguile_la-root.lo `test -f 'root.c' || echo './'`root.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-root.lo -MD -MP -MF .deps/libguile_la-root.Tpo -c root.c  -fPIC -DPIC -o .libs/libguile_la-root.o
read.c:66:33: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  { SCM_OPTION_SCM, "keywords", SCM_UNPACK (SCM_BOOL_F),
                                ^~~~~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
read.c:66:33: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
../libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-root.lo -MD -MP -MF .deps/libguile_la-root.Tpo -c root.c -o libguile_la-root.o >/dev/null 2>&1
mv -f .deps/libguile_la-random.Tpo .deps/libguile_la-random.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rw.lo -MD -MP -MF .deps/libguile_la-rw.Tpo -c -o libguile_la-rw.lo `test -f 'rw.c' || echo './'`rw.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rw.lo -MD -MP -MF .deps/libguile_la-rw.Tpo -c rw.c  -fPIC -DPIC -o .libs/libguile_la-rw.o
mv -f .deps/libguile_la-root.Tpo .deps/libguile_la-root.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-scmsigs.lo -MD -MP -MF .deps/libguile_la-scmsigs.Tpo -c -o libguile_la-scmsigs.lo `test -f 'scmsigs.c' || echo './'`scmsigs.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-scmsigs.lo -MD -MP -MF .deps/libguile_la-scmsigs.Tpo -c scmsigs.c  -fPIC -DPIC -o .libs/libguile_la-scmsigs.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-rw.lo -MD -MP -MF .deps/libguile_la-rw.Tpo -c rw.c -o libguile_la-rw.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-scmsigs.lo -MD -MP -MF .deps/libguile_la-scmsigs.Tpo -c scmsigs.c -o libguile_la-scmsigs.o >/dev/null 2>&1
mv -f .deps/libguile_la-rw.Tpo .deps/libguile_la-rw.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-script.lo -MD -MP -MF .deps/libguile_la-script.Tpo -c -o libguile_la-script.lo `test -f 'script.c' || echo './'`script.c
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-read.lo -MD -MP -MF .deps/libguile_la-read.Tpo -c read.c -o libguile_la-read.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-script.lo -MD -MP -MF .deps/libguile_la-script.Tpo -c script.c  -fPIC -DPIC -o .libs/libguile_la-script.o
mv -f .deps/libguile_la-scmsigs.Tpo .deps/libguile_la-scmsigs.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-simpos.lo -MD -MP -MF .deps/libguile_la-simpos.Tpo -c -o libguile_la-simpos.lo `test -f 'simpos.c' || echo './'`simpos.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-simpos.lo -MD -MP -MF .deps/libguile_la-simpos.Tpo -c simpos.c  -fPIC -DPIC -o .libs/libguile_la-simpos.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-script.lo -MD -MP -MF .deps/libguile_la-script.Tpo -c script.c -o libguile_la-script.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-simpos.lo -MD -MP -MF .deps/libguile_la-simpos.Tpo -c simpos.c -o libguile_la-simpos.o >/dev/null 2>&1
mv -f .deps/libguile_la-simpos.Tpo .deps/libguile_la-simpos.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-smob.lo -MD -MP -MF .deps/libguile_la-smob.Tpo -c -o libguile_la-smob.lo `test -f 'smob.c' || echo './'`smob.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-smob.lo -MD -MP -MF .deps/libguile_la-smob.Tpo -c smob.c  -fPIC -DPIC -o .libs/libguile_la-smob.o
mv -f .deps/libguile_la-read.Tpo .deps/libguile_la-read.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-sort.lo -MD -MP -MF .deps/libguile_la-sort.Tpo -c -o libguile_la-sort.lo `test -f 'sort.c' || echo './'`sort.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-sort.lo -MD -MP -MF .deps/libguile_la-sort.Tpo -c sort.c  -fPIC -DPIC -o .libs/libguile_la-sort.o
mv -f .deps/libguile_la-script.Tpo .deps/libguile_la-script.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srcprop.lo -MD -MP -MF .deps/libguile_la-srcprop.Tpo -c -o libguile_la-srcprop.lo `test -f 'srcprop.c' || echo './'`srcprop.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srcprop.lo -MD -MP -MF .deps/libguile_la-srcprop.Tpo -c srcprop.c  -fPIC -DPIC -o .libs/libguile_la-srcprop.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-smob.lo -MD -MP -MF .deps/libguile_la-smob.Tpo -c smob.c -o libguile_la-smob.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srcprop.lo -MD -MP -MF .deps/libguile_la-srcprop.Tpo -c srcprop.c -o libguile_la-srcprop.o >/dev/null 2>&1
mv -f .deps/libguile_la-smob.Tpo .deps/libguile_la-smob.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stackchk.lo -MD -MP -MF .deps/libguile_la-stackchk.Tpo -c -o libguile_la-stackchk.lo `test -f 'stackchk.c' || echo './'`stackchk.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stackchk.lo -MD -MP -MF .deps/libguile_la-stackchk.Tpo -c stackchk.c  -fPIC -DPIC -o .libs/libguile_la-stackchk.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-sort.lo -MD -MP -MF .deps/libguile_la-sort.Tpo -c sort.c -o libguile_la-sort.o >/dev/null 2>&1
mv -f .deps/libguile_la-srcprop.Tpo .deps/libguile_la-srcprop.Plo
mv -f .deps/libguile_la-numbers.Tpo .deps/libguile_la-numbers.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stacks.lo -MD -MP -MF .deps/libguile_la-stacks.Tpo -c -o libguile_la-stacks.lo `test -f 'stacks.c' || echo './'`stacks.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stime.lo -MD -MP -MF .deps/libguile_la-stime.Tpo -c -o libguile_la-stime.lo `test -f 'stime.c' || echo './'`stime.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stackchk.lo -MD -MP -MF .deps/libguile_la-stackchk.Tpo -c stackchk.c -o libguile_la-stackchk.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stime.lo -MD -MP -MF .deps/libguile_la-stime.Tpo -c stime.c  -fPIC -DPIC -o .libs/libguile_la-stime.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stacks.lo -MD -MP -MF .deps/libguile_la-stacks.Tpo -c stacks.c  -fPIC -DPIC -o .libs/libguile_la-stacks.o
stime.c:143:3: warning: 'ftime' is deprecated [-Wdeprecated-declarations]
  ftime (&time_buffer);
  ^
/usr/include/x86_64-linux-gnu/sys/timeb.h:40:19: note: 'ftime' has been explicitly marked deprecated here
  __nonnull ((1)) __attribute_deprecated__;
                  ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:248:51: note: expanded from macro '__attribute_deprecated__'
# define __attribute_deprecated__ __attribute__ ((__deprecated__))
                                                  ^
mv -f .deps/libguile_la-stackchk.Tpo .deps/libguile_la-stackchk.Plo
stime.c:799:28: warning: 'ftime' is deprecated [-Wdeprecated-declarations]
  if (!scm_your_base.time) ftime(&scm_your_base);
                           ^
/usr/include/x86_64-linux-gnu/sys/timeb.h:40:19: note: 'ftime' has been explicitly marked deprecated here
  __nonnull ((1)) __attribute_deprecated__;
                  ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:248:51: note: expanded from macro '__attribute_deprecated__'
# define __attribute_deprecated__ __attribute__ ((__deprecated__))
                                                  ^
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strings.lo -MD -MP -MF .deps/libguile_la-strings.Tpo -c -o libguile_la-strings.lo `test -f 'strings.c' || echo './'`strings.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strings.lo -MD -MP -MF .deps/libguile_la-strings.Tpo -c strings.c  -fPIC -DPIC -o .libs/libguile_la-strings.o
2 warnings generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stime.lo -MD -MP -MF .deps/libguile_la-stime.Tpo -c stime.c -o libguile_la-stime.o >/dev/null 2>&1
mv -f .deps/libguile_la-sort.Tpo .deps/libguile_la-sort.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-4.lo -MD -MP -MF .deps/libguile_la-srfi-4.Tpo -c -o libguile_la-srfi-4.lo `test -f 'srfi-4.c' || echo './'`srfi-4.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-4.lo -MD -MP -MF .deps/libguile_la-srfi-4.Tpo -c srfi-4.c  -fPIC -DPIC -o .libs/libguile_la-srfi-4.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-stacks.lo -MD -MP -MF .deps/libguile_la-stacks.Tpo -c stacks.c -o libguile_la-stacks.o >/dev/null 2>&1
mv -f .deps/libguile_la-stime.Tpo .deps/libguile_la-stime.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-13.lo -MD -MP -MF .deps/libguile_la-srfi-13.Tpo -c -o libguile_la-srfi-13.lo `test -f 'srfi-13.c' || echo './'`srfi-13.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-13.lo -MD -MP -MF .deps/libguile_la-srfi-13.Tpo -c srfi-13.c  -fPIC -DPIC -o .libs/libguile_la-srfi-13.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strings.lo -MD -MP -MF .deps/libguile_la-strings.Tpo -c strings.c -o libguile_la-strings.o >/dev/null 2>&1
mv -f .deps/libguile_la-stacks.Tpo .deps/libguile_la-stacks.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-14.lo -MD -MP -MF .deps/libguile_la-srfi-14.Tpo -c -o libguile_la-srfi-14.lo `test -f 'srfi-14.c' || echo './'`srfi-14.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-14.lo -MD -MP -MF .deps/libguile_la-srfi-14.Tpo -c srfi-14.c  -fPIC -DPIC -o .libs/libguile_la-srfi-14.o
mv -f .deps/libguile_la-strings.Tpo .deps/libguile_la-strings.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strorder.lo -MD -MP -MF .deps/libguile_la-strorder.Tpo -c -o libguile_la-strorder.lo `test -f 'strorder.c' || echo './'`strorder.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strorder.lo -MD -MP -MF .deps/libguile_la-strorder.Tpo -c strorder.c  -fPIC -DPIC -o .libs/libguile_la-strorder.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strorder.lo -MD -MP -MF .deps/libguile_la-strorder.Tpo -c strorder.c -o libguile_la-strorder.o >/dev/null 2>&1
mv -f .deps/libguile_la-strorder.Tpo .deps/libguile_la-strorder.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strports.lo -MD -MP -MF .deps/libguile_la-strports.Tpo -c -o libguile_la-strports.lo `test -f 'strports.c' || echo './'`strports.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strports.lo -MD -MP -MF .deps/libguile_la-strports.Tpo -c strports.c  -fPIC -DPIC -o .libs/libguile_la-strports.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-4.lo -MD -MP -MF .deps/libguile_la-srfi-4.Tpo -c srfi-4.c -o libguile_la-srfi-4.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-strports.lo -MD -MP -MF .deps/libguile_la-strports.Tpo -c strports.c -o libguile_la-strports.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-14.lo -MD -MP -MF .deps/libguile_la-srfi-14.Tpo -c srfi-14.c -o libguile_la-srfi-14.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-srfi-13.lo -MD -MP -MF .deps/libguile_la-srfi-13.Tpo -c srfi-13.c -o libguile_la-srfi-13.o >/dev/null 2>&1
mv -f .deps/libguile_la-strports.Tpo .deps/libguile_la-strports.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-struct.lo -MD -MP -MF .deps/libguile_la-struct.Tpo -c -o libguile_la-struct.lo `test -f 'struct.c' || echo './'`struct.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-struct.lo -MD -MP -MF .deps/libguile_la-struct.Tpo -c struct.c  -fPIC -DPIC -o .libs/libguile_la-struct.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-struct.lo -MD -MP -MF .deps/libguile_la-struct.Tpo -c struct.c -o libguile_la-struct.o >/dev/null 2>&1
mv -f .deps/libguile_la-srfi-14.Tpo .deps/libguile_la-srfi-14.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-symbols.lo -MD -MP -MF .deps/libguile_la-symbols.Tpo -c -o libguile_la-symbols.lo `test -f 'symbols.c' || echo './'`symbols.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-symbols.lo -MD -MP -MF .deps/libguile_la-symbols.Tpo -c symbols.c  -fPIC -DPIC -o .libs/libguile_la-symbols.o
mv -f .deps/libguile_la-struct.Tpo .deps/libguile_la-struct.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-threads.lo -MD -MP -MF .deps/libguile_la-threads.Tpo -c -o libguile_la-threads.lo `test -f 'threads.c' || echo './'`threads.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-threads.lo -MD -MP -MF .deps/libguile_la-threads.Tpo -c threads.c  -fPIC -DPIC -o .libs/libguile_la-threads.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-symbols.lo -MD -MP -MF .deps/libguile_la-symbols.Tpo -c symbols.c -o libguile_la-symbols.o >/dev/null 2>&1
mv -f .deps/libguile_la-srfi-13.Tpo .deps/libguile_la-srfi-13.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-null-threads.lo -MD -MP -MF .deps/libguile_la-null-threads.Tpo -c -o libguile_la-null-threads.lo `test -f 'null-threads.c' || echo './'`null-threads.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-null-threads.lo -MD -MP -MF .deps/libguile_la-null-threads.Tpo -c null-threads.c  -fPIC -DPIC -o .libs/libguile_la-null-threads.o
mv -f .deps/libguile_la-symbols.Tpo .deps/libguile_la-symbols.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-throw.lo -MD -MP -MF .deps/libguile_la-throw.Tpo -c -o libguile_la-throw.lo `test -f 'throw.c' || echo './'`throw.c
mv -f .deps/libguile_la-srfi-4.Tpo .deps/libguile_la-srfi-4.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-values.lo -MD -MP -MF .deps/libguile_la-values.Tpo -c -o libguile_la-values.lo `test -f 'values.c' || echo './'`values.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-threads.lo -MD -MP -MF .deps/libguile_la-threads.Tpo -c threads.c -o libguile_la-threads.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-throw.lo -MD -MP -MF .deps/libguile_la-throw.Tpo -c throw.c  -fPIC -DPIC -o .libs/libguile_la-throw.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-values.lo -MD -MP -MF .deps/libguile_la-values.Tpo -c values.c  -fPIC -DPIC -o .libs/libguile_la-values.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-null-threads.lo -MD -MP -MF .deps/libguile_la-null-threads.Tpo -c null-threads.c -o libguile_la-null-threads.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-values.lo -MD -MP -MF .deps/libguile_la-values.Tpo -c values.c -o libguile_la-values.o >/dev/null 2>&1
mv -f .deps/libguile_la-null-threads.Tpo .deps/libguile_la-null-threads.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-variable.lo -MD -MP -MF .deps/libguile_la-variable.Tpo -c -o libguile_la-variable.lo `test -f 'variable.c' || echo './'`variable.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-variable.lo -MD -MP -MF .deps/libguile_la-variable.Tpo -c variable.c  -fPIC -DPIC -o .libs/libguile_la-variable.o
mv -f .deps/libguile_la-values.Tpo .deps/libguile_la-values.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vectors.lo -MD -MP -MF .deps/libguile_la-vectors.Tpo -c -o libguile_la-vectors.lo `test -f 'vectors.c' || echo './'`vectors.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-throw.lo -MD -MP -MF .deps/libguile_la-throw.Tpo -c throw.c -o libguile_la-throw.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vectors.lo -MD -MP -MF .deps/libguile_la-vectors.Tpo -c vectors.c  -fPIC -DPIC -o .libs/libguile_la-vectors.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-variable.lo -MD -MP -MF .deps/libguile_la-variable.Tpo -c variable.c -o libguile_la-variable.o >/dev/null 2>&1
mv -f .deps/libguile_la-threads.Tpo .deps/libguile_la-threads.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-version.lo -MD -MP -MF .deps/libguile_la-version.Tpo -c -o libguile_la-version.lo `test -f 'version.c' || echo './'`version.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-version.lo -MD -MP -MF .deps/libguile_la-version.Tpo -c version.c  -fPIC -DPIC -o .libs/libguile_la-version.o
mv -f .deps/libguile_la-variable.Tpo .deps/libguile_la-variable.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vports.lo -MD -MP -MF .deps/libguile_la-vports.Tpo -c -o libguile_la-vports.lo `test -f 'vports.c' || echo './'`vports.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vports.lo -MD -MP -MF .deps/libguile_la-vports.Tpo -c vports.c  -fPIC -DPIC -o .libs/libguile_la-vports.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-version.lo -MD -MP -MF .deps/libguile_la-version.Tpo -c version.c -o libguile_la-version.o >/dev/null 2>&1
mv -f .deps/libguile_la-throw.Tpo .deps/libguile_la-throw.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-weaks.lo -MD -MP -MF .deps/libguile_la-weaks.Tpo -c -o libguile_la-weaks.lo `test -f 'weaks.c' || echo './'`weaks.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-weaks.lo -MD -MP -MF .deps/libguile_la-weaks.Tpo -c weaks.c  -fPIC -DPIC -o .libs/libguile_la-weaks.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vectors.lo -MD -MP -MF .deps/libguile_la-vectors.Tpo -c vectors.c -o libguile_la-vectors.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-vports.lo -MD -MP -MF .deps/libguile_la-vports.Tpo -c vports.c -o libguile_la-vports.o >/dev/null 2>&1
mv -f .deps/libguile_la-version.Tpo .deps/libguile_la-version.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ramap.lo -MD -MP -MF .deps/libguile_la-ramap.Tpo -c -o libguile_la-ramap.lo `test -f 'ramap.c' || echo './'`ramap.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ramap.lo -MD -MP -MF .deps/libguile_la-ramap.Tpo -c ramap.c  -fPIC -DPIC -o .libs/libguile_la-ramap.o
mv -f .deps/libguile_la-vports.Tpo .deps/libguile_la-vports.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-unif.lo -MD -MP -MF .deps/libguile_la-unif.Tpo -c -o libguile_la-unif.lo `test -f 'unif.c' || echo './'`unif.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-weaks.lo -MD -MP -MF .deps/libguile_la-weaks.Tpo -c weaks.c -o libguile_la-weaks.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-unif.lo -MD -MP -MF .deps/libguile_la-unif.Tpo -c unif.c  -fPIC -DPIC -o .libs/libguile_la-unif.o
mv -f .deps/libguile_la-vectors.Tpo .deps/libguile_la-vectors.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT dynl.lo -MD -MP -MF .deps/dynl.Tpo -c -o dynl.lo dynl.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT dynl.lo -MD -MP -MF .deps/dynl.Tpo -c dynl.c  -fPIC -DPIC -o .libs/dynl.o
mv -f .deps/libguile_la-weaks.Tpo .deps/libguile_la-weaks.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT filesys.lo -MD -MP -MF .deps/filesys.Tpo -c -o filesys.lo filesys.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT filesys.lo -MD -MP -MF .deps/filesys.Tpo -c filesys.c  -fPIC -DPIC -o .libs/filesys.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT dynl.lo -MD -MP -MF .deps/dynl.Tpo -c dynl.c -o dynl.o >/dev/null 2>&1
filesys.c:922:18: warning: 'readdir64_r' is deprecated [-Wdeprecated-declarations]
    SCM_SYSCALL (readdir_r_or_readdir64_r (ds, (struct dirent_or_dirent64 *) buf, &rdent));
                 ^
./_scm.h:137:68: note: expanded from macro 'readdir_r_or_readdir64_r'
# define readdir_r_or_readdir64_r       CHOOSE_LARGEFILE(readdir_r,readdir64_r)
                                                                   ^
/usr/include/dirent.h:204:25: note: 'readdir64_r' has been explicitly marked deprecated here
  __nonnull ((1, 2, 3)) __attribute_deprecated__;
                        ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:248:51: note: expanded from macro '__attribute_deprecated__'
# define __attribute_deprecated__ __attribute__ ((__deprecated__))
                                                  ^
filesys.c:1329:13: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
          if (fl > LONG_MAX)
                 ~ ^~~~~~~~
/usr/lib/llvm-12/lib/clang/12.0.1/include/limits.h:47:19: note: expanded from macro 'LONG_MAX'
#define LONG_MAX  __LONG_MAX__
                  ^~~~~~~~~~~~
<built-in>:38:22: note: expanded from here
#define __LONG_MAX__ 9223372036854775807L
                     ^~~~~~~~~~~~~~~~~~~~
mv -f .deps/dynl.Tpo .deps/dynl.Plo
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-ramap.lo -MD -MP -MF .deps/libguile_la-ramap.Tpo -c ramap.c -o libguile_la-ramap.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT posix.lo -MD -MP -MF .deps/posix.Tpo -c -o posix.lo posix.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT posix.lo -MD -MP -MF .deps/posix.Tpo -c posix.c  -fPIC -DPIC -o .libs/posix.o
2 warnings generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT filesys.lo -MD -MP -MF .deps/filesys.Tpo -c filesys.c -o filesys.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT posix.lo -MD -MP -MF .deps/posix.Tpo -c posix.c -o posix.o >/dev/null 2>&1
mv -f .deps/libguile_la-ramap.Tpo .deps/libguile_la-ramap.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT net_db.lo -MD -MP -MF .deps/net_db.Tpo -c -o net_db.lo net_db.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT net_db.lo -MD -MP -MF .deps/net_db.Tpo -c net_db.c  -fPIC -DPIC -o .libs/net_db.o
mv -f .deps/filesys.Tpo .deps/filesys.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT socket.lo -MD -MP -MF .deps/socket.Tpo -c -o socket.lo socket.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT socket.lo -MD -MP -MF .deps/socket.Tpo -c socket.c  -fPIC -DPIC -o .libs/socket.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT net_db.lo -MD -MP -MF .deps/net_db.Tpo -c net_db.c -o net_db.o >/dev/null 2>&1
mv -f .deps/posix.Tpo .deps/posix.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT regex-posix.lo -MD -MP -MF .deps/regex-posix.Tpo -c -o regex-posix.lo regex-posix.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libguile_la-unif.lo -MD -MP -MF .deps/libguile_la-unif.Tpo -c unif.c -o libguile_la-unif.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT regex-posix.lo -MD -MP -MF .deps/regex-posix.Tpo -c regex-posix.c  -fPIC -DPIC -o .libs/regex-posix.o
mv -f .deps/net_db.Tpo .deps/net_db.Plo
flex -t ./c-tokenize.lex > c-tokenize.c || { rm c-tokenize.c; false; }
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT regex-posix.lo -MD -MP -MF .deps/regex-posix.Tpo -c regex-posix.c -o regex-posix.o >/dev/null 2>&1
if [ "no" = "yes" ]; then \
	x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -c -o c-tokenize.o c-tokenize.c; \
else \
	x86_64-linux-gnu-gcc -DHAVE_CONFIG_H   -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -c -o c-tokenize.o c-tokenize.c; \
fi
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT socket.lo -MD -MP -MF .deps/socket.Tpo -c socket.c -o socket.o >/dev/null 2>&1
mv -f .deps/regex-posix.Tpo .deps/regex-posix.Plo
if [ "no" = "yes" ]; then \
	x86_64-linux-gnu-gcc -o guile_filter_doc_snarfage c-tokenize.o; \
else \
	/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes  -Wl,-z,relro -o guile_filter_doc_snarfage c-tokenize.o  -lgmp -lcrypt -lm -lltdl ; \
fi
libtool: link: x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -Wl,-z -Wl,relro -o guile_filter_doc_snarfage c-tokenize.o  -lgmp -lcrypt -lm -lltdl
mv -f .deps/socket.Tpo .deps/socket.Plo
mawk -f ./guile-func-name-check alist.c
mawk -f ./guile-func-name-check arbiters.c
mawk -f ./guile-func-name-check async.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes alist.c | \
./guile_filter_doc_snarfage --filter-snarfage) > alist.doc || { rm alist.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes arbiters.c | \
./guile_filter_doc_snarfage --filter-snarfage) > arbiters.doc || { rm arbiters.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes async.c | \
./guile_filter_doc_snarfage --filter-snarfage) > async.doc || { rm async.doc; false; }
mawk -f ./guile-func-name-check backtrace.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes backtrace.c | \
./guile_filter_doc_snarfage --filter-snarfage) > backtrace.doc || { rm backtrace.doc; false; }
mawk -f ./guile-func-name-check boolean.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes boolean.c | \
./guile_filter_doc_snarfage --filter-snarfage) > boolean.doc || { rm boolean.doc; false; }
mawk -f ./guile-func-name-check chars.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes chars.c | \
./guile_filter_doc_snarfage --filter-snarfage) > chars.doc || { rm chars.doc; false; }
mawk -f ./guile-func-name-check continuations.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes continuations.c | \
./guile_filter_doc_snarfage --filter-snarfage) > continuations.doc || { rm continuations.doc; false; }
mawk -f ./guile-func-name-check debug.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes debug.c | \
./guile_filter_doc_snarfage --filter-snarfage) > debug.doc || { rm debug.doc; false; }
mawk -f ./guile-func-name-check deprecation.c
mawk -f ./guile-func-name-check deprecated.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes deprecation.c | \
./guile_filter_doc_snarfage --filter-snarfage) > deprecation.doc || { rm deprecation.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes deprecated.c | \
./guile_filter_doc_snarfage --filter-snarfage) > deprecated.doc || { rm deprecated.doc; false; }
mawk -f ./guile-func-name-check discouraged.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes discouraged.c | \
./guile_filter_doc_snarfage --filter-snarfage) > discouraged.doc || { rm discouraged.doc; false; }
mawk -f ./guile-func-name-check dynl.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes dynl.c | \
./guile_filter_doc_snarfage --filter-snarfage) > dynl.doc || { rm dynl.doc; false; }
mawk -f ./guile-func-name-check dynwind.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes dynwind.c | \
./guile_filter_doc_snarfage --filter-snarfage) > dynwind.doc || { rm dynwind.doc; false; }
mawk -f ./guile-func-name-check environments.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes environments.c | \
./guile_filter_doc_snarfage --filter-snarfage) > environments.doc || { rm environments.doc; false; }
mawk -f ./guile-func-name-check eq.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes eq.c | \
./guile_filter_doc_snarfage --filter-snarfage) > eq.doc || { rm eq.doc; false; }
mawk -f ./guile-func-name-check error.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes error.c | \
./guile_filter_doc_snarfage --filter-snarfage) > error.doc || { rm error.doc; false; }
mv -f .deps/libguile_la-unif.Tpo .deps/libguile_la-unif.Plo
mawk -f ./guile-func-name-check eval.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes eval.c | \
./guile_filter_doc_snarfage --filter-snarfage) > eval.doc || { rm eval.doc; false; }
mawk -f ./guile-func-name-check evalext.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes evalext.c | \
./guile_filter_doc_snarfage --filter-snarfage) > evalext.doc || { rm evalext.doc; false; }
mawk -f ./guile-func-name-check extensions.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes extensions.c | \
./guile_filter_doc_snarfage --filter-snarfage) > extensions.doc || { rm extensions.doc; false; }
mawk -f ./guile-func-name-check feature.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes feature.c | \
./guile_filter_doc_snarfage --filter-snarfage) > feature.doc || { rm feature.doc; false; }
mawk -f ./guile-func-name-check fluids.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes fluids.c | \
./guile_filter_doc_snarfage --filter-snarfage) > fluids.doc || { rm fluids.doc; false; }
mawk -f ./guile-func-name-check fports.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes fports.c | \
./guile_filter_doc_snarfage --filter-snarfage) > fports.doc || { rm fports.doc; false; }
mawk -f ./guile-func-name-check futures.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes futures.c | \
./guile_filter_doc_snarfage --filter-snarfage) > futures.doc || { rm futures.doc; false; }
mawk -f ./guile-func-name-check gc.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gc.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gc.doc || { rm gc.doc; false; }
mawk -f ./guile-func-name-check goops.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes goops.c | \
./guile_filter_doc_snarfage --filter-snarfage) > goops.doc || { rm goops.doc; false; }
mawk -f ./guile-func-name-check gsubr.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gsubr.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gsubr.doc || { rm gsubr.doc; false; }
mawk -f ./guile-func-name-check gc-mark.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gc-mark.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gc-mark.doc || { rm gc-mark.doc; false; }
mawk -f ./guile-func-name-check gc-segment.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gc-segment.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gc-segment.doc || { rm gc-segment.doc; false; }
mawk -f ./guile-func-name-check gc-malloc.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gc-malloc.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gc-malloc.doc || { rm gc-malloc.doc; false; }
mawk -f ./guile-func-name-check gc-card.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes gc-card.c | \
./guile_filter_doc_snarfage --filter-snarfage) > gc-card.doc || { rm gc-card.doc; false; }
mawk -f ./guile-func-name-check guardians.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes guardians.c | \
./guile_filter_doc_snarfage --filter-snarfage) > guardians.doc || { rm guardians.doc; false; }
mawk -f ./guile-func-name-check hash.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes hash.c | \
./guile_filter_doc_snarfage --filter-snarfage) > hash.doc || { rm hash.doc; false; }
mawk -f ./guile-func-name-check hashtab.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes hashtab.c | \
./guile_filter_doc_snarfage --filter-snarfage) > hashtab.doc || { rm hashtab.doc; false; }
mawk -f ./guile-func-name-check hooks.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes hooks.c | \
./guile_filter_doc_snarfage --filter-snarfage) > hooks.doc || { rm hooks.doc; false; }
mawk -f ./guile-func-name-check i18n.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes i18n.c | \
./guile_filter_doc_snarfage --filter-snarfage) > i18n.doc || { rm i18n.doc; false; }
mawk -f ./guile-func-name-check init.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes init.c | \
./guile_filter_doc_snarfage --filter-snarfage) > init.doc || { rm init.doc; false; }
mawk -f ./guile-func-name-check ioext.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes ioext.c | \
./guile_filter_doc_snarfage --filter-snarfage) > ioext.doc || { rm ioext.doc; false; }
mawk -f ./guile-func-name-check keywords.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes keywords.c | \
./guile_filter_doc_snarfage --filter-snarfage) > keywords.doc || { rm keywords.doc; false; }
mawk -f ./guile-func-name-check lang.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes lang.c | \
./guile_filter_doc_snarfage --filter-snarfage) > lang.doc || { rm lang.doc; false; }
mawk -f ./guile-func-name-check list.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes list.c | \
./guile_filter_doc_snarfage --filter-snarfage) > list.doc || { rm list.doc; false; }
mawk -f ./guile-func-name-check load.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes load.c | \
./guile_filter_doc_snarfage --filter-snarfage) > load.doc || { rm load.doc; false; }
mawk -f ./guile-func-name-check macros.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes macros.c | \
./guile_filter_doc_snarfage --filter-snarfage) > macros.doc || { rm macros.doc; false; }
mawk -f ./guile-func-name-check mallocs.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes mallocs.c | \
./guile_filter_doc_snarfage --filter-snarfage) > mallocs.doc || { rm mallocs.doc; false; }
mawk -f ./guile-func-name-check modules.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes modules.c | \
./guile_filter_doc_snarfage --filter-snarfage) > modules.doc || { rm modules.doc; false; }
mawk -f ./guile-func-name-check numbers.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes numbers.c | \
./guile_filter_doc_snarfage --filter-snarfage) > numbers.doc || { rm numbers.doc; false; }
mawk -f ./guile-func-name-check objects.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes objects.c | \
./guile_filter_doc_snarfage --filter-snarfage) > objects.doc || { rm objects.doc; false; }
mawk -f ./guile-func-name-check objprop.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes objprop.c | \
./guile_filter_doc_snarfage --filter-snarfage) > objprop.doc || { rm objprop.doc; false; }
mawk -f ./guile-func-name-check options.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes options.c | \
./guile_filter_doc_snarfage --filter-snarfage) > options.doc || { rm options.doc; false; }
mawk -f ./guile-func-name-check pairs.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes pairs.c | \
./guile_filter_doc_snarfage --filter-snarfage) > pairs.doc || { rm pairs.doc; false; }
mawk -f ./guile-func-name-check ports.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes ports.c | \
./guile_filter_doc_snarfage --filter-snarfage) > ports.doc || { rm ports.doc; false; }
mawk -f ./guile-func-name-check print.c
mawk -f ./guile-func-name-check procprop.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes print.c | \
./guile_filter_doc_snarfage --filter-snarfage) > print.doc || { rm print.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes procprop.c | \
./guile_filter_doc_snarfage --filter-snarfage) > procprop.doc || { rm procprop.doc; false; }
mawk -f ./guile-func-name-check procs.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes procs.c | \
./guile_filter_doc_snarfage --filter-snarfage) > procs.doc || { rm procs.doc; false; }
mawk -f ./guile-func-name-check properties.c
mawk -f ./guile-func-name-check random.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes properties.c | \
./guile_filter_doc_snarfage --filter-snarfage) > properties.doc || { rm properties.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes random.c | \
./guile_filter_doc_snarfage --filter-snarfage) > random.doc || { rm random.doc; false; }
mawk -f ./guile-func-name-check rdelim.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes rdelim.c | \
./guile_filter_doc_snarfage --filter-snarfage) > rdelim.doc || { rm rdelim.doc; false; }
mawk -f ./guile-func-name-check read.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes read.c | \
./guile_filter_doc_snarfage --filter-snarfage) > read.doc || { rm read.doc; false; }
mawk -f ./guile-func-name-check root.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes root.c | \
./guile_filter_doc_snarfage --filter-snarfage) > root.doc || { rm root.doc; false; }
mawk -f ./guile-func-name-check rw.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes rw.c | \
./guile_filter_doc_snarfage --filter-snarfage) > rw.doc || { rm rw.doc; false; }
mawk -f ./guile-func-name-check scmsigs.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes scmsigs.c | \
./guile_filter_doc_snarfage --filter-snarfage) > scmsigs.doc || { rm scmsigs.doc; false; }
mawk -f ./guile-func-name-check script.c
mawk -f ./guile-func-name-check simpos.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes script.c | \
./guile_filter_doc_snarfage --filter-snarfage) > script.doc || { rm script.doc; false; }
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes simpos.c | \
./guile_filter_doc_snarfage --filter-snarfage) > simpos.doc || { rm simpos.doc; false; }
mawk -f ./guile-func-name-check smob.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes smob.c | \
./guile_filter_doc_snarfage --filter-snarfage) > smob.doc || { rm smob.doc; false; }
mawk -f ./guile-func-name-check sort.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes sort.c | \
./guile_filter_doc_snarfage --filter-snarfage) > sort.doc || { rm sort.doc; false; }
mawk -f ./guile-func-name-check srcprop.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes srcprop.c | \
./guile_filter_doc_snarfage --filter-snarfage) > srcprop.doc || { rm srcprop.doc; false; }
mawk -f ./guile-func-name-check stackchk.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes stackchk.c | \
./guile_filter_doc_snarfage --filter-snarfage) > stackchk.doc || { rm stackchk.doc; false; }
mawk -f ./guile-func-name-check stacks.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes stacks.c | \
./guile_filter_doc_snarfage --filter-snarfage) > stacks.doc || { rm stacks.doc; false; }
mawk -f ./guile-func-name-check stime.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes stime.c | \
./guile_filter_doc_snarfage --filter-snarfage) > stime.doc || { rm stime.doc; false; }
mawk -f ./guile-func-name-check strings.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes strings.c | \
./guile_filter_doc_snarfage --filter-snarfage) > strings.doc || { rm strings.doc; false; }
mawk -f ./guile-func-name-check srfi-4.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes srfi-4.c | \
./guile_filter_doc_snarfage --filter-snarfage) > srfi-4.doc || { rm srfi-4.doc; false; }
mawk -f ./guile-func-name-check srfi-13.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes srfi-13.c | \
./guile_filter_doc_snarfage --filter-snarfage) > srfi-13.doc || { rm srfi-13.doc; false; }
mawk -f ./guile-func-name-check srfi-14.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes srfi-14.c | \
./guile_filter_doc_snarfage --filter-snarfage) > srfi-14.doc || { rm srfi-14.doc; false; }
mawk -f ./guile-func-name-check strorder.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes strorder.c | \
./guile_filter_doc_snarfage --filter-snarfage) > strorder.doc || { rm strorder.doc; false; }
mawk -f ./guile-func-name-check strports.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes strports.c | \
./guile_filter_doc_snarfage --filter-snarfage) > strports.doc || { rm strports.doc; false; }
mawk -f ./guile-func-name-check struct.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes struct.c | \
./guile_filter_doc_snarfage --filter-snarfage) > struct.doc || { rm struct.doc; false; }
mawk -f ./guile-func-name-check symbols.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes symbols.c | \
./guile_filter_doc_snarfage --filter-snarfage) > symbols.doc || { rm symbols.doc; false; }
mawk -f ./guile-func-name-check threads.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes threads.c | \
./guile_filter_doc_snarfage --filter-snarfage) > threads.doc || { rm threads.doc; false; }
mawk -f ./guile-func-name-check throw.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes throw.c | \
./guile_filter_doc_snarfage --filter-snarfage) > throw.doc || { rm throw.doc; false; }
mawk -f ./guile-func-name-check values.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes values.c | \
./guile_filter_doc_snarfage --filter-snarfage) > values.doc || { rm values.doc; false; }
mawk -f ./guile-func-name-check variable.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes variable.c | \
./guile_filter_doc_snarfage --filter-snarfage) > variable.doc || { rm variable.doc; false; }
mawk -f ./guile-func-name-check vectors.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes vectors.c | \
./guile_filter_doc_snarfage --filter-snarfage) > vectors.doc || { rm vectors.doc; false; }
mawk -f ./guile-func-name-check version.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes version.c | \
./guile_filter_doc_snarfage --filter-snarfage) > version.doc || { rm version.doc; false; }
mawk -f ./guile-func-name-check vports.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes vports.c | \
./guile_filter_doc_snarfage --filter-snarfage) > vports.doc || { rm vports.doc; false; }
mawk -f ./guile-func-name-check weaks.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes weaks.c | \
./guile_filter_doc_snarfage --filter-snarfage) > weaks.doc || { rm weaks.doc; false; }
mawk -f ./guile-func-name-check ramap.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes ramap.c | \
./guile_filter_doc_snarfage --filter-snarfage) > ramap.doc || { rm ramap.doc; false; }
mawk -f ./guile-func-name-check unif.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes unif.c | \
./guile_filter_doc_snarfage --filter-snarfage) > unif.doc || { rm unif.doc; false; }
mawk -f ./guile-func-name-check filesys.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes filesys.c | \
./guile_filter_doc_snarfage --filter-snarfage) > filesys.doc || { rm filesys.doc; false; }
mawk -f ./guile-func-name-check posix.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes posix.c | \
./guile_filter_doc_snarfage --filter-snarfage) > posix.doc || { rm posix.doc; false; }
mawk -f ./guile-func-name-check net_db.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes net_db.c | \
./guile_filter_doc_snarfage --filter-snarfage) > net_db.doc || { rm net_db.doc; false; }
mawk -f ./guile-func-name-check socket.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes socket.c | \
./guile_filter_doc_snarfage --filter-snarfage) > socket.doc || { rm socket.doc; false; }
mawk -f ./guile-func-name-check regex-posix.c
(./guile-snarf-docs -DHAVE_CONFIG_H -I.. -I.. -I.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes regex-posix.c | \
./guile_filter_doc_snarfage --filter-snarfage) > regex-posix.doc || { rm regex-posix.doc; false; }
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -version-info 21:0:4 -export-dynamic -no-undefined -Wl,-z,relro -o libguile.la -rpath /usr/lib libguile_la-alist.lo libguile_la-arbiters.lo libguile_la-async.lo libguile_la-backtrace.lo libguile_la-boolean.lo libguile_la-chars.lo libguile_la-continuations.lo libguile_la-convert.lo libguile_la-debug.lo libguile_la-deprecation.lo libguile_la-deprecated.lo libguile_la-discouraged.lo libguile_la-dynwind.lo libguile_la-environments.lo libguile_la-eq.lo libguile_la-error.lo libguile_la-eval.lo libguile_la-evalext.lo libguile_la-extensions.lo libguile_la-feature.lo libguile_la-fluids.lo libguile_la-fports.lo libguile_la-futures.lo libguile_la-gc.lo libguile_la-gc-mark.lo libguile_la-gc-segment.lo libguile_la-gc-malloc.lo libguile_la-gc-card.lo libguile_la-gc-freelist.lo libguile_la-gc_os_dep.lo libguile_la-gdbint.lo libguile_la-gh_data.lo libguile_la-gh_eval.lo libguile_la-gh_funcs.lo libguile_la-gh_init.lo libguile_la-gh_io.lo libguile_la-gh_list.lo libguile_la-gh_predicates.lo libguile_la-goops.lo libguile_la-gsubr.lo libguile_la-guardians.lo libguile_la-hash.lo libguile_la-hashtab.lo libguile_la-hooks.lo libguile_la-i18n.lo libguile_la-init.lo libguile_la-inline.lo libguile_la-ioext.lo libguile_la-keywords.lo libguile_la-lang.lo libguile_la-list.lo libguile_la-load.lo libguile_la-macros.lo libguile_la-mallocs.lo libguile_la-modules.lo libguile_la-numbers.lo libguile_la-objects.lo libguile_la-objprop.lo libguile_la-options.lo libguile_la-pairs.lo libguile_la-ports.lo libguile_la-print.lo libguile_la-procprop.lo libguile_la-procs.lo libguile_la-properties.lo libguile_la-random.lo libguile_la-rdelim.lo libguile_la-read.lo libguile_la-root.lo libguile_la-rw.lo libguile_la-scmsigs.lo libguile_la-script.lo libguile_la-simpos.lo libguile_la-smob.lo libguile_la-sort.lo libguile_la-srcprop.lo libguile_la-stackchk.lo libguile_la-stacks.lo libguile_la-stime.lo libguile_la-strings.lo libguile_la-srfi-4.lo libguile_la-srfi-13.lo libguile_la-srfi-14.lo libguile_la-strorder.lo libguile_la-strports.lo libguile_la-struct.lo libguile_la-symbols.lo libguile_la-threads.lo libguile_la-null-threads.lo libguile_la-throw.lo libguile_la-values.lo libguile_la-variable.lo libguile_la-vectors.lo libguile_la-version.lo libguile_la-vports.lo libguile_la-weaks.lo libguile_la-ramap.lo libguile_la-unif.lo dynl.lo filesys.lo posix.lo net_db.lo socket.lo regex-posix.lo -lgmp -lcrypt -lm -lltdl 
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/libguile_la-alist.o .libs/libguile_la-arbiters.o .libs/libguile_la-async.o .libs/libguile_la-backtrace.o .libs/libguile_la-boolean.o .libs/libguile_la-chars.o .libs/libguile_la-continuations.o .libs/libguile_la-convert.o .libs/libguile_la-debug.o .libs/libguile_la-deprecation.o .libs/libguile_la-deprecated.o .libs/libguile_la-discouraged.o .libs/libguile_la-dynwind.o .libs/libguile_la-environments.o .libs/libguile_la-eq.o .libs/libguile_la-error.o .libs/libguile_la-eval.o .libs/libguile_la-evalext.o .libs/libguile_la-extensions.o .libs/libguile_la-feature.o .libs/libguile_la-fluids.o .libs/libguile_la-fports.o .libs/libguile_la-futures.o .libs/libguile_la-gc.o .libs/libguile_la-gc-mark.o .libs/libguile_la-gc-segment.o .libs/libguile_la-gc-malloc.o .libs/libguile_la-gc-card.o .libs/libguile_la-gc-freelist.o .libs/libguile_la-gc_os_dep.o .libs/libguile_la-gdbint.o .libs/libguile_la-gh_data.o .libs/libguile_la-gh_eval.o .libs/libguile_la-gh_funcs.o .libs/libguile_la-gh_init.o .libs/libguile_la-gh_io.o .libs/libguile_la-gh_list.o .libs/libguile_la-gh_predicates.o .libs/libguile_la-goops.o .libs/libguile_la-gsubr.o .libs/libguile_la-guardians.o .libs/libguile_la-hash.o .libs/libguile_la-hashtab.o .libs/libguile_la-hooks.o .libs/libguile_la-i18n.o .libs/libguile_la-init.o .libs/libguile_la-inline.o .libs/libguile_la-ioext.o .libs/libguile_la-keywords.o .libs/libguile_la-lang.o .libs/libguile_la-list.o .libs/libguile_la-load.o .libs/libguile_la-macros.o .libs/libguile_la-mallocs.o .libs/libguile_la-modules.o .libs/libguile_la-numbers.o .libs/libguile_la-objects.o .libs/libguile_la-objprop.o .libs/libguile_la-options.o .libs/libguile_la-pairs.o .libs/libguile_la-ports.o .libs/libguile_la-print.o .libs/libguile_la-procprop.o .libs/libguile_la-procs.o .libs/libguile_la-properties.o .libs/libguile_la-random.o .libs/libguile_la-rdelim.o .libs/libguile_la-read.o .libs/libguile_la-root.o .libs/libguile_la-rw.o .libs/libguile_la-scmsigs.o .libs/libguile_la-script.o .libs/libguile_la-simpos.o .libs/libguile_la-smob.o .libs/libguile_la-sort.o .libs/libguile_la-srcprop.o .libs/libguile_la-stackchk.o .libs/libguile_la-stacks.o .libs/libguile_la-stime.o .libs/libguile_la-strings.o .libs/libguile_la-srfi-4.o .libs/libguile_la-srfi-13.o .libs/libguile_la-srfi-14.o .libs/libguile_la-strorder.o .libs/libguile_la-strports.o .libs/libguile_la-struct.o .libs/libguile_la-symbols.o .libs/libguile_la-threads.o .libs/libguile_la-null-threads.o .libs/libguile_la-throw.o .libs/libguile_la-values.o .libs/libguile_la-variable.o .libs/libguile_la-vectors.o .libs/libguile_la-version.o .libs/libguile_la-vports.o .libs/libguile_la-weaks.o .libs/libguile_la-ramap.o .libs/libguile_la-unif.o .libs/dynl.o .libs/filesys.o .libs/posix.o .libs/net_db.o .libs/socket.o .libs/regex-posix.o   -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile.so.17 -o .libs/libguile.so.17.4.0
/usr/bin/x86_64-linux-gnu-ld: .libs/posix.o: in function `scm_tmpnam':
/<<PKGBUILDDIR>>/guile18/libguile/posix.c:1165: warning: the use of `tmpnam' is dangerous, better use `mkstemp'
libtool: link: (cd ".libs" && rm -f "libguile.so.17" && ln -s "libguile.so.17.4.0" "libguile.so.17")
libtool: link: (cd ".libs" && rm -f "libguile.so" && ln -s "libguile.so.17.4.0" "libguile.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libguile.a  libguile_la-alist.o libguile_la-arbiters.o libguile_la-async.o libguile_la-backtrace.o libguile_la-boolean.o libguile_la-chars.o libguile_la-continuations.o libguile_la-convert.o libguile_la-debug.o libguile_la-deprecation.o libguile_la-deprecated.o libguile_la-discouraged.o libguile_la-dynwind.o libguile_la-environments.o libguile_la-eq.o libguile_la-error.o libguile_la-eval.o libguile_la-evalext.o libguile_la-extensions.o libguile_la-feature.o libguile_la-fluids.o libguile_la-fports.o libguile_la-futures.o libguile_la-gc.o libguile_la-gc-mark.o libguile_la-gc-segment.o libguile_la-gc-malloc.o libguile_la-gc-card.o libguile_la-gc-freelist.o libguile_la-gc_os_dep.o libguile_la-gdbint.o libguile_la-gh_data.o libguile_la-gh_eval.o libguile_la-gh_funcs.o libguile_la-gh_init.o libguile_la-gh_io.o libguile_la-gh_list.o libguile_la-gh_predicates.o libguile_la-goops.o libguile_la-gsubr.o libguile_la-guardians.o libguile_la-hash.o libguile_la-hashtab.o libguile_la-hooks.o libguile_la-i18n.o libguile_la-init.o libguile_la-inline.o libguile_la-ioext.o libguile_la-keywords.o libguile_la-lang.o libguile_la-list.o libguile_la-load.o libguile_la-macros.o libguile_la-mallocs.o libguile_la-modules.o libguile_la-numbers.o libguile_la-objects.o libguile_la-objprop.o libguile_la-options.o libguile_la-pairs.o libguile_la-ports.o libguile_la-print.o libguile_la-procprop.o libguile_la-procs.o libguile_la-properties.o libguile_la-random.o libguile_la-rdelim.o libguile_la-read.o libguile_la-root.o libguile_la-rw.o libguile_la-scmsigs.o libguile_la-script.o libguile_la-simpos.o libguile_la-smob.o libguile_la-sort.o libguile_la-srcprop.o libguile_la-stackchk.o libguile_la-stacks.o libguile_la-stime.o libguile_la-strings.o libguile_la-srfi-4.o libguile_la-srfi-13.o libguile_la-srfi-14.o libguile_la-strorder.o libguile_la-strports.o libguile_la-struct.o libguile_la-symbols.o libguile_la-threads.o libguile_la-null-threads.o libguile_la-throw.o libguile_la-values.o libguile_la-variable.o libguile_la-vectors.o libguile_la-version.o libguile_la-vports.o libguile_la-weaks.o libguile_la-ramap.o libguile_la-unif.o dynl.o filesys.o posix.o net_db.o socket.o regex-posix.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libguile.a
libtool: link: ( cd ".libs" && rm -f "libguile.la" && ln -s "../libguile.la" "libguile.la" )
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -Wdate-time -D_FORTIFY_SOURCE=2  -Wl,-z,relro -o guile guile-guile.o libguile.la -lgmp -lcrypt -lm -lltdl 
libtool: link: x86_64-linux-gnu-gcc -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -Wdate-time -D_FORTIFY_SOURCE=2 -Wl,-z -Wl,relro -o .libs/guile guile-guile.o  ./.libs/libguile.so -lgmp -lcrypt -lm -lltdl
cat alist.doc arbiters.doc async.doc backtrace.doc boolean.doc chars.doc continuations.doc debug.doc deprecation.doc deprecated.doc discouraged.doc dynl.doc dynwind.doc environments.doc eq.doc error.doc eval.doc evalext.doc extensions.doc feature.doc fluids.doc fports.doc futures.doc gc.doc goops.doc gsubr.doc gc-mark.doc gc-segment.doc gc-malloc.doc gc-card.doc guardians.doc hash.doc hashtab.doc hooks.doc i18n.doc init.doc ioext.doc keywords.doc lang.doc list.doc load.doc macros.doc mallocs.doc modules.doc numbers.doc objects.doc objprop.doc options.doc pairs.doc ports.doc print.doc procprop.doc procs.doc properties.doc random.doc rdelim.doc read.doc root.doc rw.doc scmsigs.doc script.doc simpos.doc smob.doc sort.doc srcprop.doc stackchk.doc stacks.doc stime.doc strings.doc srfi-4.doc srfi-13.doc srfi-14.doc strorder.doc strports.doc struct.doc symbols.doc threads.doc throw.doc values.doc variable.doc vectors.doc version.doc vports.doc weaks.doc ramap.doc unif.doc dynl.doc filesys.doc posix.doc net_db.doc socket.doc regex-posix.doc | GUILE="/<<PKGBUILDDIR>>/guile18/pre-inst-guile" ../scripts/snarf-check-and-output-texi          > guile-procedures.texi || { rm guile-procedures.texi; false; }
rm -f guile-procedures.txt
makeinfo --force -o guile-procedures.txt guile-procedures.texi || test -f guile-procedures.txt
guile-procedures.texi:4: warning: entry for index `fn' outside of any node
guile-procedures.texi:13: warning: entry for index `fn' outside of any node
guile-procedures.texi:20: warning: entry for index `fn' outside of any node
guile-procedures.texi:27: warning: entry for index `fn' outside of any node
guile-procedures.texi:34: warning: entry for index `fn' outside of any node
guile-procedures.texi:35: warning: entry for index `fn' outside of any node
guile-procedures.texi:36: warning: entry for index `fn' outside of any node
guile-procedures.texi:48: warning: entry for index `fn' outside of any node
guile-procedures.texi:54: warning: entry for index `fn' outside of any node
guile-procedures.texi:60: warning: entry for index `fn' outside of any node
guile-procedures.texi:61: warning: entry for index `fn' outside of any node
guile-procedures.texi:62: warning: entry for index `fn' outside of any node
guile-procedures.texi:77: warning: entry for index `fn' outside of any node
guile-procedures.texi:83: warning: entry for index `fn' outside of any node
guile-procedures.texi:89: warning: entry for index `fn' outside of any node
guile-procedures.texi:90: warning: entry for index `fn' outside of any node
guile-procedures.texi:91: warning: entry for index `fn' outside of any node
guile-procedures.texi:104: warning: entry for index `fn' outside of any node
guile-procedures.texi:110: warning: entry for index `fn' outside of any node
guile-procedures.texi:116: warning: entry for index `fn' outside of any node
guile-procedures.texi:117: warning: entry for index `fn' outside of any node
guile-procedures.texi:118: warning: entry for index `fn' outside of any node
guile-procedures.texi:125: warning: entry for index `fn' outside of any node
guile-procedures.texi:131: warning: entry for index `fn' outside of any node
guile-procedures.texi:137: warning: entry for index `fn' outside of any node
guile-procedures.texi:144: warning: entry for index `fn' outside of any node
guile-procedures.texi:152: warning: entry for index `fn' outside of any node
guile-procedures.texi:164: warning: entry for index `fn' outside of any node
guile-procedures.texi:170: warning: entry for index `fn' outside of any node
guile-procedures.texi:176: warning: entry for index `fn' outside of any node
guile-procedures.texi:182: warning: entry for index `fn' outside of any node
guile-procedures.texi:190: warning: entry for index `fn' outside of any node
guile-procedures.texi:204: warning: entry for index `fn' outside of any node
guile-procedures.texi:211: warning: entry for index `fn' outside of any node
guile-procedures.texi:217: warning: entry for index `fn' outside of any node
guile-procedures.texi:223: warning: entry for index `fn' outside of any node
guile-procedures.texi:232: warning: entry for index `fn' outside of any node
guile-procedures.texi:241: warning: entry for index `fn' outside of any node
guile-procedures.texi:253: warning: entry for index `fn' outside of any node
guile-procedures.texi:261: warning: entry for index `fn' outside of any node
guile-procedures.texi:274: warning: entry for index `fn' outside of any node
guile-procedures.texi:283: warning: entry for index `fn' outside of any node
guile-procedures.texi:289: warning: entry for index `fn' outside of any node
guile-procedures.texi:295: warning: entry for index `fn' outside of any node
guile-procedures.texi:301: warning: entry for index `fn' outside of any node
guile-procedures.texi:307: warning: entry for index `fn' outside of any node
guile-procedures.texi:314: warning: entry for index `fn' outside of any node
guile-procedures.texi:321: warning: entry for index `fn' outside of any node
guile-procedures.texi:328: warning: entry for index `fn' outside of any node
guile-procedures.texi:335: warning: entry for index `fn' outside of any node
guile-procedures.texi:342: warning: entry for index `fn' outside of any node
guile-procedures.texi:349: warning: entry for index `fn' outside of any node
guile-procedures.texi:356: warning: entry for index `fn' outside of any node
guile-procedures.texi:363: warning: entry for index `fn' outside of any node
guile-procedures.texi:370: warning: entry for index `fn' outside of any node
guile-procedures.texi:377: warning: entry for index `fn' outside of any node
guile-procedures.texi:384: warning: entry for index `fn' outside of any node
guile-procedures.texi:391: warning: entry for index `fn' outside of any node
guile-procedures.texi:398: warning: entry for index `fn' outside of any node
guile-procedures.texi:405: warning: entry for index `fn' outside of any node
guile-procedures.texi:412: warning: entry for index `fn' outside of any node
guile-procedures.texi:419: warning: entry for index `fn' outside of any node
guile-procedures.texi:425: warning: entry for index `fn' outside of any node
guile-procedures.texi:431: warning: entry for index `fn' outside of any node
guile-procedures.texi:437: warning: entry for index `fn' outside of any node
guile-procedures.texi:453: warning: entry for index `fn' outside of any node
guile-procedures.texi:461: warning: entry for index `fn' outside of any node
guile-procedures.texi:467: warning: entry for index `fn' outside of any node
guile-procedures.texi:473: warning: entry for index `fn' outside of any node
guile-procedures.texi:479: warning: entry for index `fn' outside of any node
guile-procedures.texi:485: warning: entry for index `fn' outside of any node
guile-procedures.texi:491: warning: entry for index `fn' outside of any node
guile-procedures.texi:497: warning: entry for index `fn' outside of any node
guile-procedures.texi:503: warning: entry for index `fn' outside of any node
guile-procedures.texi:512: warning: entry for index `fn' outside of any node
guile-procedures.texi:518: warning: entry for index `fn' outside of any node
guile-procedures.texi:524: warning: entry for index `fn' outside of any node
guile-procedures.texi:530: warning: entry for index `fn' outside of any node
guile-procedures.texi:536: warning: entry for index `fn' outside of any node
guile-procedures.texi:542: warning: entry for index `fn' outside of any node
guile-procedures.texi:552: warning: entry for index `fn' outside of any node
guile-procedures.texi:562: warning: entry for index `fn' outside of any node
guile-procedures.texi:573: warning: entry for index `fn' outside of any node
guile-procedures.texi:579: warning: entry for index `fn' outside of any node
guile-procedures.texi:585: warning: entry for index `fn' outside of any node
guile-procedures.texi:593: warning: entry for index `fn' outside of any node
guile-procedures.texi:601: warning: entry for index `fn' outside of any node
guile-procedures.texi:609: warning: entry for index `fn' outside of any node
guile-procedures.texi:618: warning: entry for index `fn' outside of any node
guile-procedures.texi:636: warning: entry for index `fn' outside of any node
guile-procedures.texi:644: warning: entry for index `fn' outside of any node
guile-procedures.texi:652: warning: entry for index `fn' outside of any node
guile-procedures.texi:661: warning: entry for index `fn' outside of any node
guile-procedures.texi:672: warning: entry for index `fn' outside of any node
guile-procedures.texi:680: warning: entry for index `fn' outside of any node
guile-procedures.texi:692: warning: entry for index `fn' outside of any node
guile-procedures.texi:698: warning: entry for index `fn' outside of any node
guile-procedures.texi:704: warning: entry for index `fn' outside of any node
guile-procedures.texi:712: warning: entry for index `fn' outside of any node
guile-procedures.texi:718: warning: entry for index `fn' outside of any node
guile-procedures.texi:725: warning: entry for index `fn' outside of any node
guile-procedures.texi:740: warning: entry for index `fn' outside of any node
guile-procedures.texi:747: warning: entry for index `fn' outside of any node
guile-procedures.texi:757: warning: entry for index `fn' outside of any node
guile-procedures.texi:771: warning: entry for index `fn' outside of any node
guile-procedures.texi:795: warning: entry for index `fn' outside of any node
guile-procedures.texi:813: warning: entry for index `fn' outside of any node
guile-procedures.texi:866: warning: entry for index `fn' outside of any node
guile-procedures.texi:873: warning: entry for index `fn' outside of any node
guile-procedures.texi:880: warning: entry for index `fn' outside of any node
guile-procedures.texi:888: warning: entry for index `fn' outside of any node
guile-procedures.texi:924: warning: entry for index `fn' outside of any node
guile-procedures.texi:936: warning: entry for index `fn' outside of any node
guile-procedures.texi:946: warning: entry for index `fn' outside of any node
guile-procedures.texi:958: warning: entry for index `fn' outside of any node
guile-procedures.texi:975: warning: entry for index `fn' outside of any node
guile-procedures.texi:986: warning: entry for index `fn' outside of any node
guile-procedures.texi:997: warning: entry for index `fn' outside of any node
guile-procedures.texi:1008: warning: entry for index `fn' outside of any node
guile-procedures.texi:1016: warning: entry for index `fn' outside of any node
guile-procedures.texi:1023: warning: entry for index `fn' outside of any node
guile-procedures.texi:1049: warning: entry for index `fn' outside of any node
guile-procedures.texi:1056: warning: entry for index `fn' outside of any node
guile-procedures.texi:1062: warning: entry for index `fn' outside of any node
guile-procedures.texi:1068: warning: entry for index `fn' outside of any node
guile-procedures.texi:1074: warning: entry for index `fn' outside of any node
guile-procedures.texi:1080: warning: entry for index `fn' outside of any node
guile-procedures.texi:1110: warning: entry for index `fn' outside of any node
guile-procedures.texi:1117: warning: entry for index `fn' outside of any node
guile-procedures.texi:1124: warning: entry for index `fn' outside of any node
guile-procedures.texi:1131: warning: entry for index `fn' outside of any node
guile-procedures.texi:1180: warning: entry for index `fn' outside of any node
guile-procedures.texi:1187: warning: entry for index `fn' outside of any node
guile-procedures.texi:1193: warning: entry for index `fn' outside of any node
guile-procedures.texi:1199: warning: entry for index `fn' outside of any node
guile-procedures.texi:1205: warning: entry for index `fn' outside of any node
guile-procedures.texi:1211: warning: entry for index `fn' outside of any node
guile-procedures.texi:1254: warning: entry for index `fn' outside of any node
guile-procedures.texi:1275: warning: entry for index `fn' outside of any node
guile-procedures.texi:1315: warning: entry for index `fn' outside of any node
guile-procedures.texi:1335: warning: entry for index `fn' outside of any node
guile-procedures.texi:1342: warning: entry for index `fn' outside of any node
guile-procedures.texi:1354: warning: entry for index `fn' outside of any node
guile-procedures.texi:1362: warning: entry for index `fn' outside of any node
guile-procedures.texi:1369: warning: entry for index `fn' outside of any node
guile-procedures.texi:1377: warning: entry for index `fn' outside of any node
guile-procedures.texi:1387: warning: entry for index `fn' outside of any node
guile-procedures.texi:1394: warning: entry for index `fn' outside of any node
guile-procedures.texi:1406: warning: entry for index `fn' outside of any node
guile-procedures.texi:1414: warning: entry for index `fn' outside of any node
guile-procedures.texi:1420: warning: entry for index `fn' outside of any node
guile-procedures.texi:1426: warning: entry for index `fn' outside of any node
guile-procedures.texi:1432: warning: entry for index `fn' outside of any node
guile-procedures.texi:1438: warning: entry for index `fn' outside of any node
guile-procedures.texi:1477: warning: entry for index `fn' outside of any node
guile-procedures.texi:1478: warning: entry for index `fn' outside of any node
guile-procedures.texi:1487: warning: entry for index `fn' outside of any node
guile-procedures.texi:1500: warning: entry for index `fn' outside of any node
guile-procedures.texi:1512: warning: entry for index `fn' outside of any node
guile-procedures.texi:1519: warning: entry for index `fn' outside of any node
guile-procedures.texi:1527: warning: entry for index `fn' outside of any node
guile-procedures.texi:1533: warning: entry for index `fn' outside of any node
guile-procedures.texi:1542: warning: entry for index `fn' outside of any node
guile-procedures.texi:1549: warning: entry for index `fn' outside of any node
guile-procedures.texi:1556: warning: entry for index `fn' outside of any node
guile-procedures.texi:1563: warning: entry for index `fn' outside of any node
guile-procedures.texi:1569: warning: entry for index `fn' outside of any node
guile-procedures.texi:1576: warning: entry for index `fn' outside of any node
guile-procedures.texi:1583: warning: entry for index `fn' outside of any node
guile-procedures.texi:1598: warning: entry for index `fn' outside of any node
guile-procedures.texi:1604: warning: entry for index `fn' outside of any node
guile-procedures.texi:1647: warning: entry for index `fn' outside of any node
guile-procedures.texi:1653: warning: entry for index `fn' outside of any node
guile-procedures.texi:1661: warning: entry for index `fn' outside of any node
guile-procedures.texi:1668: warning: entry for index `fn' outside of any node
guile-procedures.texi:1675: warning: entry for index `fn' outside of any node
guile-procedures.texi:1681: warning: entry for index `fn' outside of any node
guile-procedures.texi:1689: warning: entry for index `fn' outside of any node
guile-procedures.texi:1700: warning: entry for index `fn' outside of any node
guile-procedures.texi:1707: warning: entry for index `fn' outside of any node
guile-procedures.texi:1713: warning: entry for index `fn' outside of any node
guile-procedures.texi:1719: warning: entry for index `fn' outside of any node
guile-procedures.texi:1725: warning: entry for index `fn' outside of any node
guile-procedures.texi:1731: warning: entry for index `fn' outside of any node
guile-procedures.texi:1737: warning: entry for index `fn' outside of any node
guile-procedures.texi:1743: warning: entry for index `fn' outside of any node
guile-procedures.texi:1749: warning: entry for index `fn' outside of any node
guile-procedures.texi:1755: warning: entry for index `fn' outside of any node
guile-procedures.texi:1761: warning: entry for index `fn' outside of any node
guile-procedures.texi:1767: warning: entry for index `fn' outside of any node
guile-procedures.texi:1773: warning: entry for index `fn' outside of any node
guile-procedures.texi:1779: warning: entry for index `fn' outside of any node
guile-procedures.texi:1785: warning: entry for index `fn' outside of any node
guile-procedures.texi:1791: warning: entry for index `fn' outside of any node
guile-procedures.texi:1797: warning: entry for index `fn' outside of any node
guile-procedures.texi:1803: warning: entry for index `fn' outside of any node
guile-procedures.texi:1809: warning: entry for index `fn' outside of any node
guile-procedures.texi:1815: warning: entry for index `fn' outside of any node
guile-procedures.texi:1821: warning: entry for index `fn' outside of any node
guile-procedures.texi:1827: warning: entry for index `fn' outside of any node
guile-procedures.texi:1834: warning: entry for index `fn' outside of any node
guile-procedures.texi:1841: warning: entry for index `fn' outside of any node
guile-procedures.texi:1847: warning: entry for index `fn' outside of any node
guile-procedures.texi:1854: warning: entry for index `fn' outside of any node
guile-procedures.texi:1860: warning: entry for index `fn' outside of any node
guile-procedures.texi:1866: warning: entry for index `fn' outside of any node
guile-procedures.texi:1872: warning: entry for index `fn' outside of any node
guile-procedures.texi:1878: warning: entry for index `fn' outside of any node
guile-procedures.texi:1885: warning: entry for index `fn' outside of any node
guile-procedures.texi:1891: warning: entry for index `fn' outside of any node
guile-procedures.texi:1898: warning: entry for index `fn' outside of any node
guile-procedures.texi:1904: warning: entry for index `fn' outside of any node
guile-procedures.texi:1911: warning: entry for index `fn' outside of any node
guile-procedures.texi:1917: warning: entry for index `fn' outside of any node
guile-procedures.texi:1923: warning: entry for index `fn' outside of any node
guile-procedures.texi:1929: warning: entry for index `fn' outside of any node
guile-procedures.texi:1935: warning: entry for index `fn' outside of any node
guile-procedures.texi:1941: warning: entry for index `fn' outside of any node
guile-procedures.texi:1947: warning: entry for index `fn' outside of any node
guile-procedures.texi:1953: warning: entry for index `fn' outside of any node
guile-procedures.texi:1959: warning: entry for index `fn' outside of any node
guile-procedures.texi:1966: warning: entry for index `fn' outside of any node
guile-procedures.texi:1972: warning: entry for index `fn' outside of any node
guile-procedures.texi:1978: warning: entry for index `fn' outside of any node
guile-procedures.texi:1985: warning: entry for index `fn' outside of any node
guile-procedures.texi:2030: warning: entry for index `fn' outside of any node
guile-procedures.texi:2045: warning: entry for index `fn' outside of any node
guile-procedures.texi:2060: warning: entry for index `fn' outside of any node
guile-procedures.texi:2069: warning: entry for index `fn' outside of any node
guile-procedures.texi:2076: warning: entry for index `fn' outside of any node
guile-procedures.texi:2077: warning: entry for index `fn' outside of any node
guile-procedures.texi:2078: warning: entry for index `fn' outside of any node
guile-procedures.texi:2087: warning: entry for index `fn' outside of any node
guile-procedures.texi:2094: warning: entry for index `fn' outside of any node
guile-procedures.texi:2101: warning: entry for index `fn' outside of any node
guile-procedures.texi:2107: warning: entry for index `fn' outside of any node
guile-procedures.texi:2108: warning: entry for index `fn' outside of any node
guile-procedures.texi:2109: warning: entry for index `fn' outside of any node
guile-procedures.texi:2117: warning: entry for index `fn' outside of any node
guile-procedures.texi:2123: warning: entry for index `fn' outside of any node
guile-procedures.texi:2129: warning: entry for index `fn' outside of any node
guile-procedures.texi:2135: warning: entry for index `fn' outside of any node
guile-procedures.texi:2144: warning: entry for index `fn' outside of any node
guile-procedures.texi:2152: warning: entry for index `fn' outside of any node
guile-procedures.texi:2161: warning: entry for index `fn' outside of any node
guile-procedures.texi:2168: warning: entry for index `fn' outside of any node
guile-procedures.texi:2175: warning: entry for index `fn' outside of any node
guile-procedures.texi:2184: warning: entry for index `fn' outside of any node
guile-procedures.texi:2192: warning: entry for index `fn' outside of any node
guile-procedures.texi:2201: warning: entry for index `fn' outside of any node
guile-procedures.texi:2208: warning: entry for index `fn' outside of any node
guile-procedures.texi:2215: warning: entry for index `fn' outside of any node
guile-procedures.texi:2224: warning: entry for index `fn' outside of any node
guile-procedures.texi:2232: warning: entry for index `fn' outside of any node
guile-procedures.texi:2241: warning: entry for index `fn' outside of any node
guile-procedures.texi:2249: warning: entry for index `fn' outside of any node
guile-procedures.texi:2256: warning: entry for index `fn' outside of any node
guile-procedures.texi:2267: warning: entry for index `fn' outside of any node
guile-procedures.texi:2278: warning: entry for index `fn' outside of any node
guile-procedures.texi:2292: warning: entry for index `fn' outside of any node
guile-procedures.texi:2306: warning: entry for index `fn' outside of any node
guile-procedures.texi:2320: warning: entry for index `fn' outside of any node
guile-procedures.texi:2333: warning: entry for index `fn' outside of any node
guile-procedures.texi:2342: warning: entry for index `fn' outside of any node
guile-procedures.texi:2349: warning: entry for index `fn' outside of any node
guile-procedures.texi:2358: warning: entry for index `fn' outside of any node
guile-procedures.texi:2366: warning: entry for index `fn' outside of any node
guile-procedures.texi:2372: warning: entry for index `fn' outside of any node
guile-procedures.texi:2379: warning: entry for index `fn' outside of any node
guile-procedures.texi:2388: warning: entry for index `fn' outside of any node
guile-procedures.texi:2395: warning: entry for index `fn' outside of any node
guile-procedures.texi:2402: warning: entry for index `fn' outside of any node
guile-procedures.texi:2410: warning: entry for index `fn' outside of any node
guile-procedures.texi:2416: warning: entry for index `fn' outside of any node
guile-procedures.texi:2422: warning: entry for index `fn' outside of any node
guile-procedures.texi:2428: warning: entry for index `fn' outside of any node
guile-procedures.texi:2434: warning: entry for index `fn' outside of any node
guile-procedures.texi:2440: warning: entry for index `fn' outside of any node
guile-procedures.texi:2446: warning: entry for index `fn' outside of any node
guile-procedures.texi:2457: warning: entry for index `fn' outside of any node
guile-procedures.texi:2475: warning: entry for index `fn' outside of any node
guile-procedures.texi:2483: warning: entry for index `fn' outside of any node
guile-procedures.texi:2496: warning: entry for index `fn' outside of any node
guile-procedures.texi:2503: warning: entry for index `fn' outside of any node
guile-procedures.texi:2510: warning: entry for index `fn' outside of any node
guile-procedures.texi:2519: warning: entry for index `fn' outside of any node
guile-procedures.texi:2530: warning: entry for index `fn' outside of any node
guile-procedures.texi:2538: warning: entry for index `fn' outside of any node
guile-procedures.texi:2545: warning: entry for index `fn' outside of any node
guile-procedures.texi:2551: warning: entry for index `fn' outside of any node
guile-procedures.texi:2557: warning: entry for index `fn' outside of any node
guile-procedures.texi:2565: warning: entry for index `fn' outside of any node
guile-procedures.texi:2576: warning: entry for index `fn' outside of any node
guile-procedures.texi:2582: warning: entry for index `fn' outside of any node
guile-procedures.texi:2588: warning: entry for index `fn' outside of any node
guile-procedures.texi:2594: warning: entry for index `fn' outside of any node
guile-procedures.texi:2614: warning: entry for index `fn' outside of any node
guile-procedures.texi:2624: warning: entry for index `fn' outside of any node
guile-procedures.texi:2631: warning: entry for index `fn' outside of any node
guile-procedures.texi:2638: warning: entry for index `fn' outside of any node
guile-procedures.texi:2654: warning: entry for index `fn' outside of any node
guile-procedures.texi:2660: warning: entry for index `fn' outside of any node
guile-procedures.texi:2666: warning: entry for index `fn' outside of any node
guile-procedures.texi:2672: warning: entry for index `fn' outside of any node
guile-procedures.texi:2673: warning: entry for index `fn' outside of any node
guile-procedures.texi:2684: warning: entry for index `fn' outside of any node
guile-procedures.texi:2690: warning: entry for index `fn' outside of any node
guile-procedures.texi:2697: warning: entry for index `fn' outside of any node
guile-procedures.texi:2703: warning: entry for index `fn' outside of any node
guile-procedures.texi:2710: warning: entry for index `fn' outside of any node
guile-procedures.texi:2721: warning: entry for index `fn' outside of any node
guile-procedures.texi:2732: warning: entry for index `fn' outside of any node
guile-procedures.texi:2743: warning: entry for index `fn' outside of any node
guile-procedures.texi:2744: warning: entry for index `fn' outside of any node
guile-procedures.texi:2745: warning: entry for index `fn' outside of any node
guile-procedures.texi:2756: warning: entry for index `fn' outside of any node
guile-procedures.texi:2763: warning: entry for index `fn' outside of any node
guile-procedures.texi:2770: warning: entry for index `fn' outside of any node
guile-procedures.texi:2779: warning: entry for index `fn' outside of any node
guile-procedures.texi:2788: warning: entry for index `fn' outside of any node
guile-procedures.texi:2797: warning: entry for index `fn' outside of any node
guile-procedures.texi:2805: warning: entry for index `fn' outside of any node
guile-procedures.texi:2813: warning: entry for index `fn' outside of any node
guile-procedures.texi:2821: warning: entry for index `fn' outside of any node
guile-procedures.texi:2835: warning: entry for index `fn' outside of any node
guile-procedures.texi:2841: warning: entry for index `fn' outside of any node
guile-procedures.texi:2853: warning: entry for index `fn' outside of any node
guile-procedures.texi:2861: warning: entry for index `fn' outside of any node
guile-procedures.texi:2868: warning: entry for index `fn' outside of any node
guile-procedures.texi:2875: warning: entry for index `fn' outside of any node
guile-procedures.texi:2884: warning: entry for index `fn' outside of any node
guile-procedures.texi:2896: warning: entry for index `fn' outside of any node
guile-procedures.texi:2908: warning: entry for index `fn' outside of any node
guile-procedures.texi:2917: warning: entry for index `fn' outside of any node
guile-procedures.texi:2931: warning: entry for index `fn' outside of any node
guile-procedures.texi:2940: warning: entry for index `fn' outside of any node
guile-procedures.texi:2957: warning: entry for index `fn' outside of any node
guile-procedures.texi:2964: warning: entry for index `fn' outside of any node
guile-procedures.texi:2974: warning: entry for index `fn' outside of any node
guile-procedures.texi:2980: warning: entry for index `fn' outside of any node
guile-procedures.texi:2986: warning: entry for index `fn' outside of any node
guile-procedures.texi:2992: warning: entry for index `fn' outside of any node
guile-procedures.texi:2999: warning: entry for index `fn' outside of any node
guile-procedures.texi:3009: warning: entry for index `fn' outside of any node
guile-procedures.texi:3015: warning: entry for index `fn' outside of any node
guile-procedures.texi:3021: warning: entry for index `fn' outside of any node
guile-procedures.texi:3027: warning: entry for index `fn' outside of any node
guile-procedures.texi:3033: warning: entry for index `fn' outside of any node
guile-procedures.texi:3039: warning: entry for index `fn' outside of any node
guile-procedures.texi:3046: warning: entry for index `fn' outside of any node
guile-procedures.texi:3053: warning: entry for index `fn' outside of any node
guile-procedures.texi:3060: warning: entry for index `fn' outside of any node
guile-procedures.texi:3067: warning: entry for index `fn' outside of any node
guile-procedures.texi:3074: warning: entry for index `fn' outside of any node
guile-procedures.texi:3080: warning: entry for index `fn' outside of any node
guile-procedures.texi:3086: warning: entry for index `fn' outside of any node
guile-procedures.texi:3092: warning: entry for index `fn' outside of any node
guile-procedures.texi:3104: warning: entry for index `fn' outside of any node
guile-procedures.texi:3116: warning: entry for index `fn' outside of any node
guile-procedures.texi:3129: warning: entry for index `fn' outside of any node
guile-procedures.texi:3143: warning: entry for index `fn' outside of any node
guile-procedures.texi:3158: warning: entry for index `fn' outside of any node
guile-procedures.texi:3172: warning: entry for index `fn' outside of any node
guile-procedures.texi:3184: warning: entry for index `fn' outside of any node
guile-procedures.texi:3202: warning: entry for index `fn' outside of any node
guile-procedures.texi:3226: warning: entry for index `fn' outside of any node
guile-procedures.texi:3241: warning: entry for index `fn' outside of any node
guile-procedures.texi:3259: warning: entry for index `fn' outside of any node
guile-procedures.texi:3274: warning: entry for index `fn' outside of any node
guile-procedures.texi:3282: warning: entry for index `fn' outside of any node
guile-procedures.texi:3295: warning: entry for index `fn' outside of any node
guile-procedures.texi:3302: warning: entry for index `fn' outside of any node
guile-procedures.texi:3312: warning: entry for index `fn' outside of any node
guile-procedures.texi:3321: warning: entry for index `fn' outside of any node
guile-procedures.texi:3330: warning: entry for index `fn' outside of any node
guile-procedures.texi:3337: warning: entry for index `fn' outside of any node
guile-procedures.texi:3344: warning: entry for index `fn' outside of any node
guile-procedures.texi:3350: warning: entry for index `fn' outside of any node
guile-procedures.texi:3356: warning: entry for index `fn' outside of any node
guile-procedures.texi:3362: warning: entry for index `fn' outside of any node
guile-procedures.texi:3368: warning: entry for index `fn' outside of any node
guile-procedures.texi:3374: warning: entry for index `fn' outside of any node
guile-procedures.texi:3380: warning: entry for index `fn' outside of any node
guile-procedures.texi:3387: warning: entry for index `fn' outside of any node
guile-procedures.texi:3397: warning: entry for index `fn' outside of any node
guile-procedures.texi:3403: warning: entry for index `fn' outside of any node
guile-procedures.texi:3409: warning: entry for index `fn' outside of any node
guile-procedures.texi:3415: warning: entry for index `fn' outside of any node
guile-procedures.texi:3431: warning: entry for index `fn' outside of any node
guile-procedures.texi:3437: warning: entry for index `fn' outside of any node
guile-procedures.texi:3443: warning: entry for index `fn' outside of any node
guile-procedures.texi:3450: warning: entry for index `fn' outside of any node
guile-procedures.texi:3466: warning: entry for index `fn' outside of any node
guile-procedures.texi:3472: warning: entry for index `fn' outside of any node
guile-procedures.texi:3478: warning: entry for index `fn' outside of any node
guile-procedures.texi:3484: warning: entry for index `fn' outside of any node
guile-procedures.texi:3491: warning: entry for index `fn' outside of any node
guile-procedures.texi:3498: warning: entry for index `fn' outside of any node
guile-procedures.texi:3505: warning: entry for index `fn' outside of any node
guile-procedures.texi:3511: warning: entry for index `fn' outside of any node
guile-procedures.texi:3517: warning: entry for index `fn' outside of any node
guile-procedures.texi:3523: warning: entry for index `fn' outside of any node
guile-procedures.texi:3530: warning: entry for index `fn' outside of any node
guile-procedures.texi:3538: warning: entry for index `fn' outside of any node
guile-procedures.texi:3545: warning: entry for index `fn' outside of any node
guile-procedures.texi:3552: warning: entry for index `fn' outside of any node
guile-procedures.texi:3559: warning: entry for index `fn' outside of any node
guile-procedures.texi:3578: warning: entry for index `fn' outside of any node
guile-procedures.texi:3597: warning: entry for index `fn' outside of any node
guile-procedures.texi:3605: warning: entry for index `fn' outside of any node
guile-procedures.texi:3614: warning: entry for index `fn' outside of any node
guile-procedures.texi:3621: warning: entry for index `fn' outside of any node
guile-procedures.texi:3628: warning: entry for index `fn' outside of any node
guile-procedures.texi:3629: warning: entry for index `fn' outside of any node
guile-procedures.texi:3630: warning: entry for index `fn' outside of any node
guile-procedures.texi:3638: warning: entry for index `fn' outside of any node
guile-procedures.texi:3644: warning: entry for index `fn' outside of any node
guile-procedures.texi:3650: warning: entry for index `fn' outside of any node
guile-procedures.texi:3656: warning: entry for index `fn' outside of any node
guile-procedures.texi:3663: warning: entry for index `fn' outside of any node
guile-procedures.texi:3672: warning: entry for index `fn' outside of any node
guile-procedures.texi:3683: warning: entry for index `fn' outside of any node
guile-procedures.texi:3694: warning: entry for index `fn' outside of any node
guile-procedures.texi:3705: warning: entry for index `fn' outside of any node
guile-procedures.texi:3716: warning: entry for index `fn' outside of any node
guile-procedures.texi:3724: warning: entry for index `fn' outside of any node
guile-procedures.texi:3732: warning: entry for index `fn' outside of any node
guile-procedures.texi:3740: warning: entry for index `fn' outside of any node
guile-procedures.texi:3747: warning: entry for index `fn' outside of any node
guile-procedures.texi:3754: warning: entry for index `fn' outside of any node
guile-procedures.texi:3766: warning: entry for index `fn' outside of any node
guile-procedures.texi:3773: warning: entry for index `fn' outside of any node
guile-procedures.texi:3781: warning: entry for index `fn' outside of any node
guile-procedures.texi:3800: warning: entry for index `fn' outside of any node
guile-procedures.texi:3809: warning: entry for index `fn' outside of any node
guile-procedures.texi:3818: warning: entry for index `fn' outside of any node
guile-procedures.texi:3825: warning: entry for index `vr' outside of any node
guile-procedures.texi:3828: warning: entry for index `vr' outside of any node
guile-procedures.texi:3831: warning: entry for index `vr' outside of any node
guile-procedures.texi:3846: warning: entry for index `fn' outside of any node
guile-procedures.texi:3862: warning: entry for index `fn' outside of any node
guile-procedures.texi:3873: warning: entry for index `fn' outside of any node
guile-procedures.texi:3880: warning: entry for index `fn' outside of any node
guile-procedures.texi:3893: warning: entry for index `fn' outside of any node
guile-procedures.texi:3900: warning: entry for index `fn' outside of any node
guile-procedures.texi:3908: warning: entry for index `fn' outside of any node
guile-procedures.texi:3917: warning: entry for index `fn' outside of any node
guile-procedures.texi:3926: warning: entry for index `fn' outside of any node
guile-procedures.texi:3935: warning: entry for index `fn' outside of any node
guile-procedures.texi:3951: warning: entry for index `fn' outside of any node
guile-procedures.texi:3958: warning: entry for index `fn' outside of any node
guile-procedures.texi:3964: warning: entry for index `fn' outside of any node
guile-procedures.texi:3973: warning: entry for index `fn' outside of any node
guile-procedures.texi:3980: warning: entry for index `fn' outside of any node
guile-procedures.texi:3986: warning: entry for index `fn' outside of any node
guile-procedures.texi:3992: warning: entry for index `fn' outside of any node
guile-procedures.texi:3998: warning: entry for index `fn' outside of any node
guile-procedures.texi:4005: warning: entry for index `fn' outside of any node
guile-procedures.texi:4011: warning: entry for index `fn' outside of any node
guile-procedures.texi:4017: warning: entry for index `fn' outside of any node
guile-procedures.texi:4023: warning: entry for index `fn' outside of any node
guile-procedures.texi:4032: warning: entry for index `fn' outside of any node
guile-procedures.texi:4039: warning: entry for index `fn' outside of any node
guile-procedures.texi:4046: warning: entry for index `fn' outside of any node
guile-procedures.texi:4053: warning: entry for index `fn' outside of any node
guile-procedures.texi:4062: warning: entry for index `fn' outside of any node
guile-procedures.texi:4075: warning: entry for index `fn' outside of any node
guile-procedures.texi:4081: warning: entry for index `fn' outside of any node
guile-procedures.texi:4087: warning: entry for index `fn' outside of any node
guile-procedures.texi:4104: warning: entry for index `fn' outside of any node
guile-procedures.texi:4110: warning: entry for index `fn' outside of any node
guile-procedures.texi:4116: warning: entry for index `fn' outside of any node
guile-procedures.texi:4123: warning: entry for index `fn' outside of any node
guile-procedures.texi:4132: warning: entry for index `fn' outside of any node
guile-procedures.texi:4142: warning: entry for index `fn' outside of any node
guile-procedures.texi:4153: warning: entry for index `fn' outside of any node
guile-procedures.texi:4161: warning: entry for index `fn' outside of any node
guile-procedures.texi:4169: warning: entry for index `fn' outside of any node
guile-procedures.texi:4189: warning: entry for index `fn' outside of any node
guile-procedures.texi:4200: warning: entry for index `fn' outside of any node
guile-procedures.texi:4212: warning: entry for index `fn' outside of any node
guile-procedures.texi:4220: warning: entry for index `fn' outside of any node
guile-procedures.texi:4228: warning: entry for index `fn' outside of any node
guile-procedures.texi:4238: warning: entry for index `fn' outside of any node
guile-procedures.texi:4244: warning: entry for index `fn' outside of any node
guile-procedures.texi:4253: warning: entry for index `fn' outside of any node
guile-procedures.texi:4295: warning: entry for index `fn' outside of any node
guile-procedures.texi:4341: warning: entry for index `fn' outside of any node
guile-procedures.texi:4374: warning: entry for index `fn' outside of any node
guile-procedures.texi:4381: warning: entry for index `fn' outside of any node
guile-procedures.texi:4395: warning: entry for index `fn' outside of any node
guile-procedures.texi:4415: warning: entry for index `fn' outside of any node
guile-procedures.texi:4431: warning: entry for index `fn' outside of any node
guile-procedures.texi:4439: warning: entry for index `fn' outside of any node
guile-procedures.texi:4449: warning: entry for index `fn' outside of any node
guile-procedures.texi:4465: warning: entry for index `fn' outside of any node
guile-procedures.texi:4472: warning: entry for index `fn' outside of any node
guile-procedures.texi:4485: warning: entry for index `fn' outside of any node
guile-procedures.texi:4506: warning: entry for index `fn' outside of any node
guile-procedures.texi:4514: warning: entry for index `fn' outside of any node
guile-procedures.texi:4522: warning: entry for index `fn' outside of any node
guile-procedures.texi:4534: warning: entry for index `fn' outside of any node
guile-procedures.texi:4544: warning: entry for index `fn' outside of any node
guile-procedures.texi:4552: warning: entry for index `fn' outside of any node
guile-procedures.texi:4564: warning: entry for index `fn' outside of any node
guile-procedures.texi:4576: warning: entry for index `fn' outside of any node
guile-procedures.texi:4586: warning: entry for index `fn' outside of any node
guile-procedures.texi:4594: warning: entry for index `fn' outside of any node
guile-procedures.texi:4604: warning: entry for index `fn' outside of any node
guile-procedures.texi:4612: warning: entry for index `fn' outside of any node
guile-procedures.texi:4621: warning: entry for index `fn' outside of any node
guile-procedures.texi:4628: warning: entry for index `fn' outside of any node
guile-procedures.texi:4634: warning: entry for index `fn' outside of any node
guile-procedures.texi:4641: warning: entry for index `fn' outside of any node
guile-procedures.texi:4648: warning: entry for index `fn' outside of any node
guile-procedures.texi:4655: warning: entry for index `fn' outside of any node
guile-procedures.texi:4661: warning: entry for index `fn' outside of any node
guile-procedures.texi:4667: warning: entry for index `fn' outside of any node
guile-procedures.texi:4700: warning: entry for index `fn' outside of any node
guile-procedures.texi:4706: warning: entry for index `fn' outside of any node
guile-procedures.texi:4712: warning: entry for index `fn' outside of any node
guile-procedures.texi:4718: warning: entry for index `fn' outside of any node
guile-procedures.texi:4724: warning: entry for index `fn' outside of any node
guile-procedures.texi:4732: warning: entry for index `fn' outside of any node
guile-procedures.texi:4738: warning: entry for index `fn' outside of any node
guile-procedures.texi:4744: warning: entry for index `fn' outside of any node
guile-procedures.texi:4751: warning: entry for index `fn' outside of any node
guile-procedures.texi:4757: warning: entry for index `fn' outside of any node
guile-procedures.texi:4764: warning: entry for index `fn' outside of any node
guile-procedures.texi:4771: warning: entry for index `fn' outside of any node
guile-procedures.texi:4777: warning: entry for index `fn' outside of any node
guile-procedures.texi:4783: warning: entry for index `fn' outside of any node
guile-procedures.texi:4789: warning: entry for index `fn' outside of any node
guile-procedures.texi:4795: warning: entry for index `fn' outside of any node
guile-procedures.texi:4802: warning: entry for index `fn' outside of any node
guile-procedures.texi:4828: warning: entry for index `fn' outside of any node
guile-procedures.texi:4836: warning: entry for index `fn' outside of any node
guile-procedures.texi:4843: warning: entry for index `fn' outside of any node
guile-procedures.texi:4852: warning: entry for index `fn' outside of any node
guile-procedures.texi:4862: warning: entry for index `fn' outside of any node
guile-procedures.texi:4870: warning: entry for index `fn' outside of any node
guile-procedures.texi:4883: warning: entry for index `fn' outside of any node
guile-procedures.texi:4892: warning: entry for index `fn' outside of any node
guile-procedures.texi:4913: warning: entry for index `fn' outside of any node
guile-procedures.texi:4928: warning: entry for index `fn' outside of any node
guile-procedures.texi:4934: warning: entry for index `fn' outside of any node
guile-procedures.texi:4940: warning: entry for index `fn' outside of any node
guile-procedures.texi:4941: warning: entry for index `fn' outside of any node
guile-procedures.texi:4948: warning: entry for index `fn' outside of any node
guile-procedures.texi:4957: warning: entry for index `fn' outside of any node
guile-procedures.texi:4963: warning: entry for index `fn' outside of any node
guile-procedures.texi:4970: warning: entry for index `fn' outside of any node
guile-procedures.texi:4978: warning: entry for index `fn' outside of any node
guile-procedures.texi:4990: warning: entry for index `fn' outside of any node
guile-procedures.texi:5005: warning: entry for index `fn' outside of any node
guile-procedures.texi:5017: warning: entry for index `fn' outside of any node
guile-procedures.texi:5029: warning: entry for index `fn' outside of any node
guile-procedures.texi:5036: warning: entry for index `fn' outside of any node
guile-procedures.texi:5042: warning: entry for index `fn' outside of any node
guile-procedures.texi:5049: warning: entry for index `fn' outside of any node
guile-procedures.texi:5056: warning: entry for index `fn' outside of any node
guile-procedures.texi:5062: warning: entry for index `fn' outside of any node
guile-procedures.texi:5068: warning: entry for index `fn' outside of any node
guile-procedures.texi:5095: warning: entry for index `fn' outside of any node
guile-procedures.texi:5120: warning: entry for index `fn' outside of any node
guile-procedures.texi:5127: warning: entry for index `fn' outside of any node
guile-procedures.texi:5136: warning: entry for index `fn' outside of any node
guile-procedures.texi:5143: warning: entry for index `fn' outside of any node
guile-procedures.texi:5150: warning: entry for index `fn' outside of any node
guile-procedures.texi:5157: warning: entry for index `fn' outside of any node
guile-procedures.texi:5165: warning: entry for index `fn' outside of any node
guile-procedures.texi:5171: warning: entry for index `fn' outside of any node
guile-procedures.texi:5177: warning: entry for index `fn' outside of any node
guile-procedures.texi:5185: warning: entry for index `fn' outside of any node
guile-procedures.texi:5192: warning: entry for index `fn' outside of any node
guile-procedures.texi:5201: warning: entry for index `fn' outside of any node
guile-procedures.texi:5208: warning: entry for index `fn' outside of any node
guile-procedures.texi:5215: warning: entry for index `fn' outside of any node
guile-procedures.texi:5222: warning: entry for index `fn' outside of any node
guile-procedures.texi:5230: warning: entry for index `fn' outside of any node
guile-procedures.texi:5236: warning: entry for index `fn' outside of any node
guile-procedures.texi:5242: warning: entry for index `fn' outside of any node
guile-procedures.texi:5250: warning: entry for index `fn' outside of any node
guile-procedures.texi:5257: warning: entry for index `fn' outside of any node
guile-procedures.texi:5266: warning: entry for index `fn' outside of any node
guile-procedures.texi:5273: warning: entry for index `fn' outside of any node
guile-procedures.texi:5280: warning: entry for index `fn' outside of any node
guile-procedures.texi:5287: warning: entry for index `fn' outside of any node
guile-procedures.texi:5295: warning: entry for index `fn' outside of any node
guile-procedures.texi:5301: warning: entry for index `fn' outside of any node
guile-procedures.texi:5307: warning: entry for index `fn' outside of any node
guile-procedures.texi:5315: warning: entry for index `fn' outside of any node
guile-procedures.texi:5322: warning: entry for index `fn' outside of any node
guile-procedures.texi:5331: warning: entry for index `fn' outside of any node
guile-procedures.texi:5338: warning: entry for index `fn' outside of any node
guile-procedures.texi:5345: warning: entry for index `fn' outside of any node
guile-procedures.texi:5352: warning: entry for index `fn' outside of any node
guile-procedures.texi:5360: warning: entry for index `fn' outside of any node
guile-procedures.texi:5366: warning: entry for index `fn' outside of any node
guile-procedures.texi:5372: warning: entry for index `fn' outside of any node
guile-procedures.texi:5380: warning: entry for index `fn' outside of any node
guile-procedures.texi:5387: warning: entry for index `fn' outside of any node
guile-procedures.texi:5396: warning: entry for index `fn' outside of any node
guile-procedures.texi:5403: warning: entry for index `fn' outside of any node
guile-procedures.texi:5410: warning: entry for index `fn' outside of any node
guile-procedures.texi:5417: warning: entry for index `fn' outside of any node
guile-procedures.texi:5425: warning: entry for index `fn' outside of any node
guile-procedures.texi:5431: warning: entry for index `fn' outside of any node
guile-procedures.texi:5437: warning: entry for index `fn' outside of any node
guile-procedures.texi:5445: warning: entry for index `fn' outside of any node
guile-procedures.texi:5452: warning: entry for index `fn' outside of any node
guile-procedures.texi:5461: warning: entry for index `fn' outside of any node
guile-procedures.texi:5468: warning: entry for index `fn' outside of any node
guile-procedures.texi:5475: warning: entry for index `fn' outside of any node
guile-procedures.texi:5482: warning: entry for index `fn' outside of any node
guile-procedures.texi:5490: warning: entry for index `fn' outside of any node
guile-procedures.texi:5496: warning: entry for index `fn' outside of any node
guile-procedures.texi:5502: warning: entry for index `fn' outside of any node
guile-procedures.texi:5510: warning: entry for index `fn' outside of any node
guile-procedures.texi:5517: warning: entry for index `fn' outside of any node
guile-procedures.texi:5526: warning: entry for index `fn' outside of any node
guile-procedures.texi:5533: warning: entry for index `fn' outside of any node
guile-procedures.texi:5540: warning: entry for index `fn' outside of any node
guile-procedures.texi:5547: warning: entry for index `fn' outside of any node
guile-procedures.texi:5555: warning: entry for index `fn' outside of any node
guile-procedures.texi:5561: warning: entry for index `fn' outside of any node
guile-procedures.texi:5567: warning: entry for index `fn' outside of any node
guile-procedures.texi:5575: warning: entry for index `fn' outside of any node
guile-procedures.texi:5582: warning: entry for index `fn' outside of any node
guile-procedures.texi:5591: warning: entry for index `fn' outside of any node
guile-procedures.texi:5598: warning: entry for index `fn' outside of any node
guile-procedures.texi:5605: warning: entry for index `fn' outside of any node
guile-procedures.texi:5612: warning: entry for index `fn' outside of any node
guile-procedures.texi:5620: warning: entry for index `fn' outside of any node
guile-procedures.texi:5626: warning: entry for index `fn' outside of any node
guile-procedures.texi:5632: warning: entry for index `fn' outside of any node
guile-procedures.texi:5640: warning: entry for index `fn' outside of any node
guile-procedures.texi:5647: warning: entry for index `fn' outside of any node
guile-procedures.texi:5656: warning: entry for index `fn' outside of any node
guile-procedures.texi:5663: warning: entry for index `fn' outside of any node
guile-procedures.texi:5670: warning: entry for index `fn' outside of any node
guile-procedures.texi:5677: warning: entry for index `fn' outside of any node
guile-procedures.texi:5685: warning: entry for index `fn' outside of any node
guile-procedures.texi:5691: warning: entry for index `fn' outside of any node
guile-procedures.texi:5697: warning: entry for index `fn' outside of any node
guile-procedures.texi:5705: warning: entry for index `fn' outside of any node
guile-procedures.texi:5712: warning: entry for index `fn' outside of any node
guile-procedures.texi:5721: warning: entry for index `fn' outside of any node
guile-procedures.texi:5728: warning: entry for index `fn' outside of any node
guile-procedures.texi:5735: warning: entry for index `fn' outside of any node
guile-procedures.texi:5742: warning: entry for index `fn' outside of any node
guile-procedures.texi:5750: warning: entry for index `fn' outside of any node
guile-procedures.texi:5756: warning: entry for index `fn' outside of any node
guile-procedures.texi:5762: warning: entry for index `fn' outside of any node
guile-procedures.texi:5770: warning: entry for index `fn' outside of any node
guile-procedures.texi:5777: warning: entry for index `fn' outside of any node
guile-procedures.texi:5786: warning: entry for index `fn' outside of any node
guile-procedures.texi:5793: warning: entry for index `fn' outside of any node
guile-procedures.texi:5800: warning: entry for index `fn' outside of any node
guile-procedures.texi:5807: warning: entry for index `fn' outside of any node
guile-procedures.texi:5815: warning: entry for index `fn' outside of any node
guile-procedures.texi:5821: warning: entry for index `fn' outside of any node
guile-procedures.texi:5827: warning: entry for index `fn' outside of any node
guile-procedures.texi:5835: warning: entry for index `fn' outside of any node
guile-procedures.texi:5842: warning: entry for index `fn' outside of any node
guile-procedures.texi:5851: warning: entry for index `fn' outside of any node
guile-procedures.texi:5858: warning: entry for index `fn' outside of any node
guile-procedures.texi:5865: warning: entry for index `fn' outside of any node
guile-procedures.texi:5872: warning: entry for index `fn' outside of any node
guile-procedures.texi:5880: warning: entry for index `fn' outside of any node
guile-procedures.texi:5886: warning: entry for index `fn' outside of any node
guile-procedures.texi:5892: warning: entry for index `fn' outside of any node
guile-procedures.texi:5900: warning: entry for index `fn' outside of any node
guile-procedures.texi:5912: warning: entry for index `fn' outside of any node
guile-procedures.texi:5933: warning: entry for index `fn' outside of any node
guile-procedures.texi:5955: warning: entry for index `fn' outside of any node
guile-procedures.texi:5964: warning: entry for index `fn' outside of any node
guile-procedures.texi:5970: warning: entry for index `fn' outside of any node
guile-procedures.texi:5981: warning: entry for index `fn' outside of any node
guile-procedures.texi:6004: warning: entry for index `fn' outside of any node
guile-procedures.texi:6012: warning: entry for index `fn' outside of any node
guile-procedures.texi:6024: warning: entry for index `fn' outside of any node
guile-procedures.texi:6032: warning: entry for index `fn' outside of any node
guile-procedures.texi:6038: warning: entry for index `fn' outside of any node
guile-procedures.texi:6044: warning: entry for index `fn' outside of any node
guile-procedures.texi:6050: warning: entry for index `fn' outside of any node
guile-procedures.texi:6056: warning: entry for index `fn' outside of any node
guile-procedures.texi:6065: warning: entry for index `fn' outside of any node
guile-procedures.texi:6074: warning: entry for index `fn' outside of any node
guile-procedures.texi:6097: warning: entry for index `fn' outside of any node
guile-procedures.texi:6121: warning: entry for index `fn' outside of any node
guile-procedures.texi:6145: warning: entry for index `fn' outside of any node
guile-procedures.texi:6152: warning: entry for index `fn' outside of any node
guile-procedures.texi:6163: warning: entry for index `fn' outside of any node
guile-procedures.texi:6175: warning: entry for index `fn' outside of any node
guile-procedures.texi:6182: warning: entry for index `fn' outside of any node
guile-procedures.texi:6189: warning: entry for index `fn' outside of any node
guile-procedures.texi:6196: warning: entry for index `fn' outside of any node
guile-procedures.texi:6203: warning: entry for index `fn' outside of any node
guile-procedures.texi:6210: warning: entry for index `fn' outside of any node
guile-procedures.texi:6217: warning: entry for index `fn' outside of any node
guile-procedures.texi:6225: warning: entry for index `fn' outside of any node
guile-procedures.texi:6233: warning: entry for index `fn' outside of any node
guile-procedures.texi:6241: warning: entry for index `fn' outside of any node
guile-procedures.texi:6249: warning: entry for index `fn' outside of any node
guile-procedures.texi:6257: warning: entry for index `fn' outside of any node
guile-procedures.texi:6265: warning: entry for index `fn' outside of any node
guile-procedures.texi:6271: warning: entry for index `fn' outside of any node
guile-procedures.texi:6277: warning: entry for index `fn' outside of any node
guile-procedures.texi:6284: warning: entry for index `fn' outside of any node
guile-procedures.texi:6291: warning: entry for index `fn' outside of any node
guile-procedures.texi:6298: warning: entry for index `fn' outside of any node
guile-procedures.texi:6305: warning: entry for index `fn' outside of any node
guile-procedures.texi:6311: warning: entry for index `fn' outside of any node
guile-procedures.texi:6317: warning: entry for index `fn' outside of any node
guile-procedures.texi:6323: warning: entry for index `fn' outside of any node
guile-procedures.texi:6329: warning: entry for index `fn' outside of any node
guile-procedures.texi:6347: warning: entry for index `fn' outside of any node
guile-procedures.texi:6365: warning: entry for index `fn' outside of any node
guile-procedures.texi:6383: warning: entry for index `fn' outside of any node
guile-procedures.texi:6402: warning: entry for index `fn' outside of any node
guile-procedures.texi:6421: warning: entry for index `fn' outside of any node
guile-procedures.texi:6439: warning: entry for index `fn' outside of any node
guile-procedures.texi:6448: warning: entry for index `fn' outside of any node
guile-procedures.texi:6458: warning: entry for index `fn' outside of any node
guile-procedures.texi:6471: warning: entry for index `fn' outside of any node
guile-procedures.texi:6477: warning: entry for index `fn' outside of any node
guile-procedures.texi:6492: warning: entry for index `fn' outside of any node
guile-procedures.texi:6498: warning: entry for index `fn' outside of any node
guile-procedures.texi:6505: warning: entry for index `fn' outside of any node
guile-procedures.texi:6511: warning: entry for index `fn' outside of any node
guile-procedures.texi:6524: warning: entry for index `fn' outside of any node
guile-procedures.texi:6532: warning: entry for index `fn' outside of any node
guile-procedures.texi:6540: warning: entry for index `fn' outside of any node
guile-procedures.texi:6548: warning: entry for index `fn' outside of any node
guile-procedures.texi:6555: warning: entry for index `fn' outside of any node
guile-procedures.texi:6563: warning: entry for index `fn' outside of any node
guile-procedures.texi:6581: warning: entry for index `fn' outside of any node
guile-procedures.texi:6588: warning: entry for index `fn' outside of any node
guile-procedures.texi:6595: warning: entry for index `fn' outside of any node
guile-procedures.texi:6603: warning: entry for index `fn' outside of any node
guile-procedures.texi:6612: warning: entry for index `fn' outside of any node
guile-procedures.texi:6621: warning: entry for index `fn' outside of any node
guile-procedures.texi:6630: warning: entry for index `fn' outside of any node
guile-procedures.texi:6653: warning: entry for index `fn' outside of any node
guile-procedures.texi:6676: warning: entry for index `fn' outside of any node
guile-procedures.texi:6683: warning: entry for index `fn' outside of any node
guile-procedures.texi:6704: warning: entry for index `fn' outside of any node
guile-procedures.texi:6719: warning: entry for index `fn' outside of any node
guile-procedures.texi:6729: warning: entry for index `fn' outside of any node
guile-procedures.texi:6737: warning: entry for index `fn' outside of any node
guile-procedures.texi:6749: warning: entry for index `fn' outside of any node
guile-procedures.texi:6772: warning: entry for index `fn' outside of any node
guile-procedures.texi:6784: warning: entry for index `fn' outside of any node
guile-procedures.texi:6795: warning: entry for index `fn' outside of any node
guile-procedures.texi:6802: warning: entry for index `fn' outside of any node
guile-procedures.texi:6808: warning: entry for index `fn' outside of any node
guile-procedures.texi:6815: warning: entry for index `fn' outside of any node
guile-procedures.texi:6823: warning: entry for index `fn' outside of any node
guile-procedures.texi:6829: warning: entry for index `fn' outside of any node
guile-procedures.texi:6837: warning: entry for index `fn' outside of any node
guile-procedures.texi:6845: warning: entry for index `fn' outside of any node
guile-procedures.texi:6852: warning: entry for index `fn' outside of any node
guile-procedures.texi:6859: warning: entry for index `fn' outside of any node
guile-procedures.texi:6875: warning: entry for index `fn' outside of any node
guile-procedures.texi:6891: warning: entry for index `fn' outside of any node
guile-procedures.texi:6898: warning: entry for index `fn' outside of any node
guile-procedures.texi:6905: warning: entry for index `fn' outside of any node
guile-procedures.texi:6912: warning: entry for index `fn' outside of any node
guile-procedures.texi:6918: warning: entry for index `fn' outside of any node
guile-procedures.texi:6926: warning: entry for index `fn' outside of any node
guile-procedures.texi:6934: warning: entry for index `fn' outside of any node
guile-procedures.texi:6942: warning: entry for index `fn' outside of any node
guile-procedures.texi:6950: warning: entry for index `fn' outside of any node
guile-procedures.texi:6958: warning: entry for index `fn' outside of any node
guile-procedures.texi:6966: warning: entry for index `fn' outside of any node
guile-procedures.texi:6983: warning: entry for index `fn' outside of any node
guile-procedures.texi:7000: warning: entry for index `fn' outside of any node
guile-procedures.texi:7006: warning: entry for index `fn' outside of any node
guile-procedures.texi:7012: warning: entry for index `fn' outside of any node
guile-procedures.texi:7019: warning: entry for index `fn' outside of any node
guile-procedures.texi:7026: warning: entry for index `fn' outside of any node
guile-procedures.texi:7034: warning: entry for index `fn' outside of any node
guile-procedures.texi:7041: warning: entry for index `fn' outside of any node
guile-procedures.texi:7048: warning: entry for index `fn' outside of any node
guile-procedures.texi:7055: warning: entry for index `fn' outside of any node
guile-procedures.texi:7062: warning: entry for index `fn' outside of any node
guile-procedures.texi:7069: warning: entry for index `fn' outside of any node
guile-procedures.texi:7076: warning: entry for index `fn' outside of any node
guile-procedures.texi:7083: warning: entry for index `fn' outside of any node
guile-procedures.texi:7089: warning: entry for index `fn' outside of any node
guile-procedures.texi:7095: warning: entry for index `fn' outside of any node
guile-procedures.texi:7101: warning: entry for index `fn' outside of any node
guile-procedures.texi:7107: warning: entry for index `fn' outside of any node
guile-procedures.texi:7113: warning: entry for index `fn' outside of any node
guile-procedures.texi:7120: warning: entry for index `fn' outside of any node
guile-procedures.texi:7126: warning: entry for index `fn' outside of any node
guile-procedures.texi:7132: warning: entry for index `fn' outside of any node
guile-procedures.texi:7138: warning: entry for index `fn' outside of any node
guile-procedures.texi:7144: warning: entry for index `fn' outside of any node
guile-procedures.texi:7150: warning: entry for index `fn' outside of any node
guile-procedures.texi:7157: warning: entry for index `fn' outside of any node
guile-procedures.texi:7170: warning: entry for index `fn' outside of any node
guile-procedures.texi:7179: warning: entry for index `fn' outside of any node
guile-procedures.texi:7186: warning: entry for index `fn' outside of any node
guile-procedures.texi:7193: warning: entry for index `fn' outside of any node
guile-procedures.texi:7200: warning: entry for index `fn' outside of any node
guile-procedures.texi:7207: warning: entry for index `fn' outside of any node
guile-procedures.texi:7215: warning: entry for index `fn' outside of any node
guile-procedures.texi:7223: warning: entry for index `fn' outside of any node
guile-procedures.texi:7231: warning: entry for index `fn' outside of any node
guile-procedures.texi:7239: warning: entry for index `fn' outside of any node
guile-procedures.texi:7247: warning: entry for index `fn' outside of any node
guile-procedures.texi:7255: warning: entry for index `fn' outside of any node
guile-procedures.texi:7263: warning: entry for index `fn' outside of any node
guile-procedures.texi:7272: warning: entry for index `fn' outside of any node
guile-procedures.texi:7282: warning: entry for index `fn' outside of any node
guile-procedures.texi:7290: warning: entry for index `fn' outside of any node
guile-procedures.texi:7302: warning: entry for index `fn' outside of any node
guile-procedures.texi:7317: warning: entry for index `fn' outside of any node
guile-procedures.texi:7324: warning: entry for index `fn' outside of any node
guile-procedures.texi:7330: warning: entry for index `fn' outside of any node
guile-procedures.texi:7360: warning: entry for index `fn' outside of any node
guile-procedures.texi:7421: warning: entry for index `fn' outside of any node
guile-procedures.texi:7432: warning: entry for index `fn' outside of any node
guile-procedures.texi:7433: warning: entry for index `fn' outside of any node
guile-procedures.texi:7444: warning: entry for index `fn' outside of any node
guile-procedures.texi:7452: warning: entry for index `fn' outside of any node
guile-procedures.texi:7458: warning: entry for index `fn' outside of any node
guile-procedures.texi:7464: warning: entry for index `fn' outside of any node
guile-procedures.texi:7470: warning: entry for index `fn' outside of any node
guile-procedures.texi:7476: warning: entry for index `fn' outside of any node
guile-procedures.texi:7483: warning: entry for index `fn' outside of any node
guile-procedures.texi:7490: warning: entry for index `fn' outside of any node
guile-procedures.texi:7496: warning: entry for index `fn' outside of any node
guile-procedures.texi:7524: warning: entry for index `fn' outside of any node
guile-procedures.texi:7549: warning: entry for index `fn' outside of any node
guile-procedures.texi:7557: warning: entry for index `fn' outside of any node
guile-procedures.texi:7567: warning: entry for index `fn' outside of any node
guile-procedures.texi:7573: warning: entry for index `fn' outside of any node
guile-procedures.texi:7579: warning: entry for index `fn' outside of any node
guile-procedures.texi:7585: warning: entry for index `fn' outside of any node
guile-procedures.texi:7591: warning: entry for index `fn' outside of any node
guile-procedures.texi:7597: warning: entry for index `fn' outside of any node
guile-procedures.texi:7612: warning: entry for index `fn' outside of any node
guile-procedures.texi:7618: warning: entry for index `fn' outside of any node
guile-procedures.texi:7624: warning: entry for index `fn' outside of any node
guile-procedures.texi:7630: warning: entry for index `fn' outside of any node
guile-procedures.texi:7636: warning: entry for index `fn' outside of any node
guile-procedures.texi:7642: warning: entry for index `fn' outside of any node
guile-procedures.texi:7648: warning: entry for index `fn' outside of any node
guile-procedures.texi:7654: warning: entry for index `fn' outside of any node
guile-procedures.texi:7660: warning: entry for index `fn' outside of any node
guile-procedures.texi:7666: warning: entry for index `fn' outside of any node
guile-procedures.texi:7672: warning: entry for index `fn' outside of any node
guile-procedures.texi:7678: warning: entry for index `fn' outside of any node
guile-procedures.texi:7684: warning: entry for index `fn' outside of any node
guile-procedures.texi:7690: warning: entry for index `fn' outside of any node
guile-procedures.texi:7697: warning: entry for index `fn' outside of any node
guile-procedures.texi:7735: warning: entry for index `fn' outside of any node
guile-procedures.texi:7742: warning: entry for index `fn' outside of any node
guile-procedures.texi:7753: warning: entry for index `fn' outside of any node
guile-procedures.texi:7765: warning: entry for index `fn' outside of any node
guile-procedures.texi:7775: warning: entry for index `fn' outside of any node
guile-procedures.texi:7781: warning: entry for index `fn' outside of any node
guile-procedures.texi:7787: warning: entry for index `fn' outside of any node
guile-procedures.texi:7794: warning: entry for index `fn' outside of any node
guile-procedures.texi:7802: warning: entry for index `fn' outside of any node
guile-procedures.texi:7810: warning: entry for index `fn' outside of any node
guile-procedures.texi:7817: warning: entry for index `fn' outside of any node
guile-procedures.texi:7824: warning: entry for index `fn' outside of any node
guile-procedures.texi:7830: warning: entry for index `fn' outside of any node
guile-procedures.texi:7831: warning: entry for index `fn' outside of any node
guile-procedures.texi:7842: warning: entry for index `fn' outside of any node
guile-procedures.texi:7851: warning: entry for index `fn' outside of any node
guile-procedures.texi:7857: warning: entry for index `fn' outside of any node
guile-procedures.texi:7868: warning: entry for index `fn' outside of any node
guile-procedures.texi:7875: warning: entry for index `fn' outside of any node
guile-procedures.texi:7888: warning: entry for index `fn' outside of any node
guile-procedures.texi:7901: warning: entry for index `fn' outside of any node
guile-procedures.texi:7908: warning: entry for index `fn' outside of any node
guile-procedures.texi:7914: warning: entry for index `fn' outside of any node
guile-procedures.texi:7921: warning: entry for index `fn' outside of any node
guile-procedures.texi:7928: warning: entry for index `fn' outside of any node
guile-procedures.texi:7935: warning: entry for index `fn' outside of any node
guile-procedures.texi:7942: warning: entry for index `fn' outside of any node
guile-procedures.texi:7949: warning: entry for index `fn' outside of any node
guile-procedures.texi:7956: warning: entry for index `fn' outside of any node
guile-procedures.texi:7957: warning: entry for index `fn' outside of any node
guile-procedures.texi:7958: warning: entry for index `fn' outside of any node
guile-procedures.texi:7959: warning: entry for index `fn' outside of any node
guile-procedures.texi:7973: warning: entry for index `fn' outside of any node
guile-procedures.texi:7986: warning: entry for index `fn' outside of any node
guile-procedures.texi:8035: warning: entry for index `fn' outside of any node
guile-procedures.texi:8044: warning: entry for index `fn' outside of any node
guile-procedures.texi:8050: warning: entry for index `fn' outside of any node
guile-procedures.texi:8051: warning: entry for index `fn' outside of any node
guile-procedures.texi:8060: warning: entry for index `fn' outside of any node
guile-procedures.texi:8067: warning: entry for index `fn' outside of any node
guile-procedures.texi:8068: warning: entry for index `fn' outside of any node
guile-procedures.texi:8069: warning: entry for index `fn' outside of any node
guile-procedures.texi:8080: warning: entry for index `fn' outside of any node
guile-procedures.texi:8087: warning: entry for index `fn' outside of any node
guile-procedures.texi:8094: warning: entry for index `fn' outside of any node
guile-procedures.texi:8095: warning: entry for index `fn' outside of any node
guile-procedures.texi:8096: warning: entry for index `fn' outside of any node
guile-procedures.texi:8104: warning: entry for index `fn' outside of any node
guile-procedures.texi:8110: warning: entry for index `fn' outside of any node
guile-procedures.texi:8116: warning: entry for index `fn' outside of any node
guile-procedures.texi:8123: warning: entry for index `fn' outside of any node
guile-procedures.texi:8129: warning: entry for index `fn' outside of any node
guile-procedures.texi:8130: warning: entry for index `fn' outside of any node
guile-procedures.texi:8139: warning: entry for index `fn' outside of any node
guile-procedures.texi:8145: warning: entry for index `fn' outside of any node
guile-procedures.texi:8146: warning: entry for index `fn' outside of any node
guile-procedures.texi:8157: warning: entry for index `fn' outside of any node
guile-procedures.texi:8164: warning: entry for index `fn' outside of any node
guile-procedures.texi:8187: warning: entry for index `fn' outside of any node
guile-procedures.texi:8194: warning: entry for index `fn' outside of any node
guile-procedures.texi:8201: warning: entry for index `fn' outside of any node
guile-procedures.texi:8208: warning: entry for index `fn' outside of any node
guile-procedures.texi:8218: warning: entry for index `fn' outside of any node
guile-procedures.texi:8224: warning: entry for index `fn' outside of any node
guile-procedures.texi:8230: warning: entry for index `fn' outside of any node
guile-procedures.texi:8236: warning: entry for index `fn' outside of any node
guile-procedures.texi:8242: warning: entry for index `fn' outside of any node
guile-procedures.texi:8248: warning: entry for index `fn' outside of any node
guile-procedures.texi:8249: warning: entry for index `fn' outside of any node
guile-procedures.texi:8258: warning: entry for index `fn' outside of any node
guile-procedures.texi:8278: warning: entry for index `fn' outside of any node
guile-procedures.texi:8302: warning: entry for index `fn' outside of any node
guile-procedures.texi:8328: warning: entry for index `fn' outside of any node
guile-procedures.texi:8335: warning: entry for index `fn' outside of any node
guile-procedures.texi:8342: warning: entry for index `fn' outside of any node
guile-procedures.texi:8349: warning: entry for index `fn' outside of any node
guile-procedures.texi:8364: warning: entry for index `fn' outside of any node
guile-procedures.texi:8365: warning: entry for index `fn' outside of any node
guile-procedures.texi:8384: warning: entry for index `fn' outside of any node
guile-procedures.texi:8400: warning: entry for index `fn' outside of any node
guile-procedures.texi:8407: warning: entry for index `fn' outside of any node
guile-procedures.texi:8414: warning: entry for index `fn' outside of any node
guile-procedures.texi:8420: warning: entry for index `fn' outside of any node
guile-procedures.texi:8426: warning: entry for index `fn' outside of any node
guile-procedures.texi:8433: warning: entry for index `fn' outside of any node
guile-procedures.texi:8440: warning: entry for index `fn' outside of any node
guile-procedures.texi:8447: warning: entry for index `fn' outside of any node
guile-procedures.texi:8454: warning: entry for index `fn' outside of any node
guile-procedures.texi:8461: warning: entry for index `fn' outside of any node
guile-procedures.texi:8468: warning: entry for index `fn' outside of any node
guile-procedures.texi:8482: warning: entry for index `fn' outside of any node
guile-procedures.texi:8513: warning: entry for index `fn' outside of any node
guile-procedures.texi:8535: warning: entry for index `fn' outside of any node
guile-procedures.texi:8542: warning: entry for index `fn' outside of any node
guile-procedures.texi:8549: warning: entry for index `fn' outside of any node
guile-procedures.texi:8567: warning: entry for index `fn' outside of any node
guile-procedures.texi:8573: warning: entry for index `fn' outside of any node
guile-procedures.texi:8588: warning: entry for index `fn' outside of any node
guile-procedures.texi:8594: warning: entry for index `fn' outside of any node
guile-procedures.texi:8602: warning: entry for index `fn' outside of any node
guile-procedures.texi:8617: warning: entry for index `fn' outside of any node
guile-procedures.texi:8624: warning: entry for index `fn' outside of any node
guile-procedures.texi:8634: warning: entry for index `fn' outside of any node
guile-procedures.texi:8648: warning: entry for index `fn' outside of any node
guile-procedures.texi:8672: warning: entry for index `fn' outside of any node
guile-procedures.texi:8690: warning: entry for index `fn' outside of any node
guile-procedures.texi:8707: warning: entry for index `fn' outside of any node
guile-procedures.texi:8719: warning: entry for index `fn' outside of any node
guile-procedures.texi:8729: warning: entry for index `fn' outside of any node
guile-procedures.texi:8736: warning: entry for index `fn' outside of any node
guile-procedures.texi:8746: warning: entry for index `vr' outside of any node
guile-procedures.texi:8749: warning: entry for index `vr' outside of any node
guile-procedures.texi:8752: warning: entry for index `vr' outside of any node
guile-procedures.texi:8755: warning: entry for index `vr' outside of any node
guile-procedures.texi:8758: warning: entry for index `vr' outside of any node
guile-procedures.texi:8768: warning: entry for index `fn' outside of any node
guile-procedures.texi:8778: warning: entry for index `fn' outside of any node
guile-procedures.texi:8788: warning: entry for index `fn' outside of any node
guile-procedures.texi:8849: warning: entry for index `fn' outside of any node
guile-procedures.texi:8858: warning: entry for index `fn' outside of any node
guile-procedures.texi:8865: warning: entry for index `fn' outside of any node
guile-procedures.texi:8871: warning: entry for index `fn' outside of any node
guile-procedures.texi:8880: warning: entry for index `fn' outside of any node
guile-procedures.texi:8887: warning: entry for index `fn' outside of any node
guile-procedures.texi:8894: warning: entry for index `fn' outside of any node
guile-procedures.texi:8901: warning: entry for index `fn' outside of any node
guile-procedures.texi:8909: warning: entry for index `fn' outside of any node
guile-procedures.texi:8916: warning: entry for index `fn' outside of any node
guile-procedures.texi:8923: warning: entry for index `fn' outside of any node
guile-procedures.texi:8930: warning: entry for index `fn' outside of any node
guile-procedures.texi:8936: warning: entry for index `fn' outside of any node
guile-procedures.texi:8970: warning: entry for index `fn' outside of any node
guile-procedures.texi:9000: warning: entry for index `fn' outside of any node
guile-procedures.texi:9009: warning: entry for index `fn' outside of any node
guile-procedures.texi:9016: warning: entry for index `fn' outside of any node
guile-procedures.texi:9023: warning: entry for index `fn' outside of any node
guile-procedures.texi:9031: warning: entry for index `fn' outside of any node
guile-procedures.texi:9038: warning: entry for index `fn' outside of any node
guile-procedures.texi:9046: warning: entry for index `fn' outside of any node
guile-procedures.texi:9055: warning: entry for index `fn' outside of any node
guile-procedures.texi:9073: warning: entry for index `fn' outside of any node
guile-procedures.texi:9080: warning: entry for index `fn' outside of any node
guile-procedures.texi:9090: warning: entry for index `fn' outside of any node
guile-procedures.texi:9098: warning: entry for index `fn' outside of any node
guile-procedures.texi:9106: warning: entry for index `fn' outside of any node
guile-procedures.texi:9114: warning: entry for index `fn' outside of any node
guile-procedures.texi:9122: warning: entry for index `fn' outside of any node
guile-procedures.texi:9143: warning: entry for index `vr' outside of any node
guile-procedures.texi:9147: warning: entry for index `vr' outside of any node
guile-procedures.texi:9154: warning: entry for index `fn' outside of any node
guile-procedures.texi:9178: warning: entry for index `vr' outside of any node
guile-procedures.texi:9182: warning: entry for index `vr' outside of any node
guile-procedures.texi:9200: warning: entry for index `fn' outside of any node
guile-procedures.texi:9208: warning: entry for index `fn' outside of any node
guile-procedures.texi:9215: warning: entry for index `fn' outside of any node
guile-procedures.texi:9222: warning: entry for index `fn' outside of any node
guile-procedures.texi:9229: warning: entry for index `fn' outside of any node
guile-procedures.texi:9235: warning: entry for index `fn' outside of any node
guile-procedures.texi:9241: warning: entry for index `fn' outside of any node
guile-procedures.texi:9250: warning: entry for index `fn' outside of any node
guile-procedures.texi:9259: warning: entry for index `fn' outside of any node
guile-procedures.texi:9267: warning: entry for index `fn' outside of any node
guile-procedures.texi:9275: warning: entry for index `fn' outside of any node
guile-procedures.texi:9285: warning: entry for index `fn' outside of any node
guile-procedures.texi:9295: warning: entry for index `fn' outside of any node
guile-procedures.texi:9302: warning: entry for index `fn' outside of any node
guile-procedures.texi:9312: warning: entry for index `fn' outside of any node
guile-procedures.texi:9321: warning: entry for index `fn' outside of any node
guile-procedures.texi:9328: warning: entry for index `fn' outside of any node
guile-procedures.texi:9335: warning: entry for index `fn' outside of any node
guile-procedures.texi:9350: warning: entry for index `fn' outside of any node
guile-procedures.texi:9360: warning: entry for index `fn' outside of any node
guile-procedures.texi:9376: warning: entry for index `fn' outside of any node
guile-procedures.texi:9388: warning: entry for index `fn' outside of any node
guile-procedures.texi:9399: warning: entry for index `fn' outside of any node
guile-procedures.texi:9410: warning: entry for index `fn' outside of any node
guile-procedures.texi:9417: warning: entry for index `fn' outside of any node
guile-procedures.texi:9429: warning: entry for index `fn' outside of any node
guile-procedures.texi:9439: warning: entry for index `fn' outside of any node
guile-procedures.texi:9463: warning: entry for index `fn' outside of any node
guile-procedures.texi:9478: warning: entry for index `fn' outside of any node
guile-procedures.texi:9487: warning: entry for index `vr' outside of any node
guile-procedures.texi:9490: warning: entry for index `vr' outside of any node
guile-procedures.texi:9493: warning: entry for index `vr' outside of any node
guile-procedures.texi:9496: warning: entry for index `vr' outside of any node
guile-procedures.texi:9523: warning: entry for index `fn' outside of any node
guile-procedures.texi:9529: warning: entry for index `fn' outside of any node
guile-procedures.texi:9545: warning: entry for index `fn' outside of any node
guile-procedures.texi:9559: warning: entry for index `fn' outside of any node
guile-procedures.texi:9579: warning: entry for index `fn' outside of any node
guile-procedures.texi:9587: warning: entry for index `fn' outside of any node
guile-procedures.texi:9594: warning: entry for index `fn' outside of any node
guile-procedures.texi:9601: warning: entry for index `fn' outside of any node
guile-procedures.texi:9611: warning: entry for index `fn' outside of any node
guile-procedures.texi:9619: warning: entry for index `fn' outside of any node
guile-procedures.texi:9627: warning: entry for index `fn' outside of any node
guile-procedures.texi:9642: warning: entry for index `fn' outside of any node
guile-procedures.texi:9660: warning: entry for index `fn' outside of any node
guile-procedures.texi:9672: warning: entry for index `fn' outside of any node
guile-procedures.texi:9676: warning: entry for index `vr' outside of any node
guile-procedures.texi:9680: warning: entry for index `vr' outside of any node
guile-procedures.texi:9684: warning: entry for index `vr' outside of any node
guile-procedures.texi:9687: warning: entry for index `vr' outside of any node
guile-procedures.texi:9701: warning: entry for index `fn' outside of any node
guile-procedures.texi:9709: warning: entry for index `fn' outside of any node
guile-procedures.texi:9715: warning: entry for index `fn' outside of any node
guile-procedures.texi:9716: warning: entry for index `fn' outside of any node
guile-procedures.texi:9717: warning: entry for index `fn' outside of any node
guile-procedures.texi:9731: warning: entry for index `fn' outside of any node
guile-procedures.texi:9732: warning: entry for index `fn' outside of any node
guile-procedures.texi:9733: warning: entry for index `fn' outside of any node
guile-procedures.texi:9743: warning: entry for index `fn' outside of any node
guile-procedures.texi:9744: warning: entry for index `fn' outside of any node
guile-procedures.texi:9745: warning: entry for index `fn' outside of any node
guile-procedures.texi:9754: warning: entry for index `fn' outside of any node
guile-procedures.texi:9755: warning: entry for index `fn' outside of any node
guile-procedures.texi:9756: warning: entry for index `fn' outside of any node
guile-procedures.texi:9769: warning: entry for index `fn' outside of any node
guile-procedures.texi:9776: warning: entry for index `fn' outside of any node
guile-procedures.texi:9783: warning: entry for index `fn' outside of any node
guile-procedures.texi:9790: warning: entry for index `fn' outside of any node
guile-procedures.texi:9797: warning: entry for index `fn' outside of any node
guile-procedures.texi:9805: warning: entry for index `fn' outside of any node
guile-procedures.texi:9813: warning: entry for index `fn' outside of any node
guile-procedures.texi:9821: warning: entry for index `fn' outside of any node
guile-procedures.texi:9829: warning: entry for index `fn' outside of any node
guile-procedures.texi:9840: warning: entry for index `fn' outside of any node
guile-procedures.texi:9851: warning: entry for index `fn' outside of any node
guile-procedures.texi:9862: warning: entry for index `fn' outside of any node
guile-procedures.texi:9874: warning: entry for index `fn' outside of any node
guile-procedures.texi:9886: warning: entry for index `fn' outside of any node
guile-procedures.texi:9901: warning: entry for index `fn' outside of any node
guile-procedures.texi:9916: warning: entry for index `fn' outside of any node
guile-procedures.texi:9934: warning: entry for index `fn' outside of any node
guile-procedures.texi:9944: warning: entry for index `fn' outside of any node
guile-procedures.texi:9952: warning: entry for index `vr' outside of any node
guile-procedures.texi:9953: warning: entry for index `vr' outside of any node
guile-procedures.texi:9954: warning: entry for index `vr' outside of any node
guile-procedures.texi:9955: warning: entry for index `vr' outside of any node
guile-procedures.texi:9966: warning: entry for index `vr' outside of any node
guile-procedures.texi:9967: warning: entry for index `vr' outside of any node
guile-procedures.texi:9968: warning: entry for index `vr' outside of any node
guile-procedures.texi:9969: warning: entry for index `vr' outside of any node
guile-procedures.texi:9970: warning: entry for index `vr' outside of any node
guile-procedures.texi:9971: warning: entry for index `vr' outside of any node
guile-procedures.texi:9972: warning: entry for index `vr' outside of any node
guile-procedures.texi:9973: warning: entry for index `vr' outside of any node
guile-procedures.texi:9974: warning: entry for index `vr' outside of any node
guile-procedures.texi:9975: warning: entry for index `vr' outside of any node
guile-procedures.texi:9976: warning: entry for index `vr' outside of any node
guile-procedures.texi:9977: warning: entry for index `vr' outside of any node
guile-procedures.texi:9978: warning: entry for index `vr' outside of any node
guile-procedures.texi:9982: warning: entry for index `vr' outside of any node
guile-procedures.texi:9993: warning: entry for index `fn' outside of any node
guile-procedures.texi:10002: warning: entry for index `vr' outside of any node
guile-procedures.texi:10003: warning: entry for index `vr' outside of any node
guile-procedures.texi:10004: warning: entry for index `vr' outside of any node
guile-procedures.texi:10005: warning: entry for index `vr' outside of any node
guile-procedures.texi:10016: warning: entry for index `vr' outside of any node
guile-procedures.texi:10017: warning: entry for index `vr' outside of any node
guile-procedures.texi:10018: warning: entry for index `vr' outside of any node
guile-procedures.texi:10019: warning: entry for index `vr' outside of any node
guile-procedures.texi:10020: warning: entry for index `vr' outside of any node
guile-procedures.texi:10021: warning: entry for index `vr' outside of any node
guile-procedures.texi:10022: warning: entry for index `vr' outside of any node
guile-procedures.texi:10023: warning: entry for index `vr' outside of any node
guile-procedures.texi:10024: warning: entry for index `vr' outside of any node
guile-procedures.texi:10025: warning: entry for index `vr' outside of any node
guile-procedures.texi:10026: warning: entry for index `vr' outside of any node
guile-procedures.texi:10027: warning: entry for index `vr' outside of any node
guile-procedures.texi:10028: warning: entry for index `vr' outside of any node
guile-procedures.texi:10032: warning: entry for index `vr' outside of any node
guile-procedures.texi:10046: warning: entry for index `vr' outside of any node
guile-procedures.texi:10047: warning: entry for index `vr' outside of any node
guile-procedures.texi:10062: warning: entry for index `fn' outside of any node
guile-procedures.texi:10084: warning: entry for index `fn' outside of any node
guile-procedures.texi:10112: warning: entry for index `fn' outside of any node
guile-procedures.texi:10133: warning: entry for index `vr' outside of any node
guile-procedures.texi:10137: warning: entry for index `vr' outside of any node
guile-procedures.texi:10141: warning: entry for index `vr' outside of any node
guile-procedures.texi:10145: warning: entry for index `vr' outside of any node
guile-procedures.texi:10162: warning: entry for index `fn' outside of any node
guile-procedures.texi:10175: warning: entry for index `fn' outside of any node
guile-procedures.texi:10181: warning: entry for index `fn' outside of any node
guile-procedures.texi:10200: warning: entry for index `fn' outside of any node
guile-procedures.texi:10208: warning: entry for index `fn' outside of any node
guile-procedures.texi:10217: warning: entry for index `fn' outside of any node
guile-procedures.texi:10242: warning: entry for index `fn' outside of any node
guile-procedures.texi:10260: warning: entry for index `fn' outside of any node
guile-procedures.texi:10293: warning: entry for index `fn' outside of any node
guile-procedures.texi:10316: warning: entry for index `fn' outside of any node
guile-procedures.texi:10323: warning: entry for index `fn' outside of any node
guile-procedures.texi:10365: warning: entry for index `fn' outside of any node
guile-procedures.texi:1620: @pxref reference to nonexistent node `Ports and File Descriptors'
guile-procedures.texi:1633: @pxref reference to nonexistent node `Ports and File Descriptors'
guile-procedures.texi:2082: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:2089: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:2096: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:2514: @ref reference to nonexistent node `File Ports'
guile-procedures.texi:3676: @ref reference to nonexistent node `Ports and
File Descriptors'
guile-procedures.texi:3688: @ref reference to nonexistent node `Ports and File Descriptors'
guile-procedures.texi:3699: @ref reference to nonexistent node `Ports and File Descriptors'
guile-procedures.texi:3921: @ref reference to nonexistent node `File Ports'
guile-procedures.texi:4906: @pxref reference to nonexistent node `Locales'
guile-procedures.texi:5916: @pxref reference to nonexistent node `Character Sets'
guile-procedures.texi:5938: @pxref reference to nonexistent node `Character Sets'
guile-procedures.texi:7333: @pxref reference to nonexistent node `Vtables'
guile-procedures.texi:7988: @pxref reference to nonexistent node `File Ports'
guile-procedures.texi:8075: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:8082: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:8089: @pxref reference to nonexistent node `Hash Tables'
guile-procedures.texi:8769: @pxref reference to nonexistent node `Closing'
guile-procedures.texi:8781: @pxref reference to nonexistent node `Ports and File Descriptors'
guile-procedures.texi:9950: @pxref reference to nonexistent node `Network Databases'
guile-procedures.texi:10000: @pxref reference to nonexistent node `Network Databases'
guile-procedures.texi:10051: @pxref reference to nonexistent node `Network Address Conversion'
guile-procedures.texi:10350: @pxref reference to nonexistent node `Backslash
Escapes'
guile-procedures.texi: warning: document without nodes
sed 's/\(\f\) */\1/' guile-procedures.txt > guile-procedures.txt-T && mv guile-procedures.txt-T guile-procedures.txt
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
Making all in ice-9
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/ice-9'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/ice-9'
Making all in guile-config
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-config'
rm -f guile-config.tmp
sed < ./guile-config.in > guile-config.tmp \
    -e 's|@-bindir-@|/<<PKGBUILDDIR>>/out/guile/usr/bin|' \
    -e s:@-GUILE_VERSION-@:1.8.8:
chmod +x guile-config.tmp
mv guile-config.tmp guile-config
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-config'
Making all in guile-readline
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
../libguile/guile-snarf -o readline.x readline.c -DHAVE_CONFIG_H  -I. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g
/usr/bin/make  all-recursive
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
Making all in ice-9
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[6]: Nothing to be done for 'all'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
/bin/bash ./libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I. -I.. -I./..  -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -MT readline.lo -MD -MP -MF .deps/readline.Tpo -c -o readline.lo readline.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -MT readline.lo -MD -MP -MF .deps/readline.Tpo -c readline.c  -fPIC -DPIC -o .libs/readline.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -MT readline.lo -MD -MP -MF .deps/readline.Tpo -c readline.c -o readline.o >/dev/null 2>&1
mv -f .deps/readline.Tpo .deps/readline.Plo
/bin/bash ./libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -version-info 17:3:0 -export-dynamic -no-undefined -Wl,-z,relro -o libguilereadline-v-17.la -rpath /usr/lib readline.lo ../libguile/libguile.la -lreadline -lncurses 
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/readline.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../libguile/.libs/libguile.so -lreadline -lncurses  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguilereadline-v-17.so.17 -o .libs/libguilereadline-v-17.so.17.0.3
libtool: link: (cd ".libs" && rm -f "libguilereadline-v-17.so.17" && ln -s "libguilereadline-v-17.so.17.0.3" "libguilereadline-v-17.so.17")
libtool: link: (cd ".libs" && rm -f "libguilereadline-v-17.so" && ln -s "libguilereadline-v-17.so.17.0.3" "libguilereadline-v-17.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libguilereadline-v-17.a  readline.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libguilereadline-v-17.a
libtool: link: ( cd ".libs" && rm -f "libguilereadline-v-17.la" && ln -s "../libguilereadline-v-17.la" "libguilereadline-v-17.la" )
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
Making all in emacs
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/emacs'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/emacs'
Making all in scripts
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/scripts'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/scripts'
Making all in srfi
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/srfi'
../libguile/guile-snarf -o srfi-1.x srfi-1.c -DHAVE_CONFIG_H  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
../libguile/guile-snarf -o srfi-4.x srfi-4.c -DHAVE_CONFIG_H  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
../libguile/guile-snarf -o srfi-13.x srfi-13.c -DHAVE_CONFIG_H  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
../libguile/guile-snarf -o srfi-14.x srfi-14.c -DHAVE_CONFIG_H  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
../libguile/guile-snarf -o srfi-60.x srfi-60.c -DHAVE_CONFIG_H  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes
/usr/bin/make  all-am
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/srfi'
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I..  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT srfi-1.lo -MD -MP -MF .deps/srfi-1.Tpo -c -o srfi-1.lo srfi-1.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I..  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT srfi-4.lo -MD -MP -MF .deps/srfi-4.Tpo -c -o srfi-4.lo srfi-4.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I..  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT srfi-13.lo -MD -MP -MF .deps/srfi-13.Tpo -c -o srfi-13.lo srfi-13.c
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I..  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT srfi-14.lo -MD -MP -MF .deps/srfi-14.Tpo -c -o srfi-14.lo srfi-14.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-4.lo -MD -MP -MF .deps/srfi-4.Tpo -c srfi-4.c  -fPIC -DPIC -o .libs/srfi-4.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-1.lo -MD -MP -MF .deps/srfi-1.Tpo -c srfi-1.c  -fPIC -DPIC -o .libs/srfi-1.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-14.lo -MD -MP -MF .deps/srfi-14.Tpo -c srfi-14.c  -fPIC -DPIC -o .libs/srfi-14.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-13.lo -MD -MP -MF .deps/srfi-13.Tpo -c srfi-13.c  -fPIC -DPIC -o .libs/srfi-13.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-14.lo -MD -MP -MF .deps/srfi-14.Tpo -c srfi-14.c -o srfi-14.o >/dev/null 2>&1
mv -f .deps/srfi-14.Tpo .deps/srfi-14.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H  -I. -I..  -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT srfi-60.lo -MD -MP -MF .deps/srfi-60.Tpo -c -o srfi-60.lo srfi-60.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-4.lo -MD -MP -MF .deps/srfi-4.Tpo -c srfi-4.c -o srfi-4.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-13.lo -MD -MP -MF .deps/srfi-13.Tpo -c srfi-13.c -o srfi-13.o >/dev/null 2>&1
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-60.lo -MD -MP -MF .deps/srfi-60.Tpo -c srfi-60.c  -fPIC -DPIC -o .libs/srfi-60.o
srfi-60.c:47:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        return SCM_I_MAKINUM (-1);
               ^~~~~~~~~~~~~~~~~~
../libguile/numbers.h:74:41: note: expanded from macro 'SCM_I_MAKINUM'
  (SCM_PACK ((((scm_t_signed_bits) (x)) << 2) + scm_tc2_int))
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
../libguile/tags.h:104:32: note: expanded from macro 'SCM_PACK'
#   define SCM_PACK(x) ((SCM) (x))
                               ^
mv -f .deps/srfi-13.Tpo .deps/srfi-13.Plo
mv -f .deps/srfi-4.Tpo .deps/srfi-4.Plo
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:1:0 -Wl,-z,relro -o libguile-srfi-srfi-4-v-3.la -rpath /usr/lib srfi-4.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl 
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:1:0 -Wl,-z,relro -o libguile-srfi-srfi-13-14-v-3.la -rpath /usr/lib srfi-13.lo srfi-14.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl 
1 warning generated.
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-60.lo -MD -MP -MF .deps/srfi-60.Tpo -c srfi-60.c -o srfi-60.o >/dev/null 2>&1
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-13.o .libs/srfi-14.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../libguile/.libs/libguile.so -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-13-14-v-3.so.3 -o .libs/libguile-srfi-srfi-13-14-v-3.so.3.0.1
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-4.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../libguile/.libs/libguile.so -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-4-v-3.so.3 -o .libs/libguile-srfi-srfi-4-v-3.so.3.0.1
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-13-14-v-3.so.3" && ln -s "libguile-srfi-srfi-13-14-v-3.so.3.0.1" "libguile-srfi-srfi-13-14-v-3.so.3")
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-4-v-3.so.3" && ln -s "libguile-srfi-srfi-4-v-3.so.3.0.1" "libguile-srfi-srfi-4-v-3.so.3")
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-13-14-v-3.so" && ln -s "libguile-srfi-srfi-13-14-v-3.so.3.0.1" "libguile-srfi-srfi-13-14-v-3.so")
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-4-v-3.so" && ln -s "libguile-srfi-srfi-4-v-3.so.3.0.1" "libguile-srfi-srfi-4-v-3.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libguile-srfi-srfi-13-14-v-3.a  srfi-13.o srfi-14.o
libtool: link: x86_64-linux-gnu-ar cr .libs/libguile-srfi-srfi-4-v-3.a  srfi-4.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libguile-srfi-srfi-4-v-3.a
libtool: link: x86_64-linux-gnu-ranlib .libs/libguile-srfi-srfi-13-14-v-3.a
libtool: link: ( cd ".libs" && rm -f "libguile-srfi-srfi-4-v-3.la" && ln -s "../libguile-srfi-srfi-4-v-3.la" "libguile-srfi-srfi-4-v-3.la" )
libtool: link: ( cd ".libs" && rm -f "libguile-srfi-srfi-13-14-v-3.la" && ln -s "../libguile-srfi-srfi-13-14-v-3.la" "libguile-srfi-srfi-13-14-v-3.la" )
mv -f .deps/srfi-60.Tpo .deps/srfi-60.Plo
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 2:2:0 -Wl,-z,relro -o libguile-srfi-srfi-60-v-2.la -rpath /usr/lib srfi-60.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl 
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-60.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../libguile/.libs/libguile.so -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-60-v-2.so.2 -o .libs/libguile-srfi-srfi-60-v-2.so.2.0.2
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-60-v-2.so.2" && ln -s "libguile-srfi-srfi-60-v-2.so.2.0.2" "libguile-srfi-srfi-60-v-2.so.2")
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-60-v-2.so" && ln -s "libguile-srfi-srfi-60-v-2.so.2.0.2" "libguile-srfi-srfi-60-v-2.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libguile-srfi-srfi-60-v-2.a  srfi-60.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libguile-srfi-srfi-60-v-2.a
libtool: link: ( cd ".libs" && rm -f "libguile-srfi-srfi-60-v-2.la" && ln -s "../libguile-srfi-srfi-60-v-2.la" "libguile-srfi-srfi-60-v-2.la" )
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I.. -I.. -I./.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT srfi-1.lo -MD -MP -MF .deps/srfi-1.Tpo -c srfi-1.c -o srfi-1.o >/dev/null 2>&1
mv -f .deps/srfi-1.Tpo .deps/srfi-1.Plo
/bin/bash ../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc  -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:2:0 -Wl,-z,relro -o libguile-srfi-srfi-1-v-3.la -rpath /usr/lib srfi-1.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl 
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-1.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../libguile/.libs/libguile.so -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-1-v-3.so.3 -o .libs/libguile-srfi-srfi-1-v-3.so.3.0.2
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-1-v-3.so.3" && ln -s "libguile-srfi-srfi-1-v-3.so.3.0.2" "libguile-srfi-srfi-1-v-3.so.3")
libtool: link: (cd ".libs" && rm -f "libguile-srfi-srfi-1-v-3.so" && ln -s "libguile-srfi-srfi-1-v-3.so.3.0.2" "libguile-srfi-srfi-1-v-3.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libguile-srfi-srfi-1-v-3.a  srfi-1.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libguile-srfi-srfi-1-v-3.a
libtool: link: ( cd ".libs" && rm -f "libguile-srfi-srfi-1-v-3.la" && ln -s "../libguile-srfi-srfi-1-v-3.la" "libguile-srfi-srfi-1-v-3.la" )
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/srfi'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/srfi'
Making all in doc
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc'
Making all in tutorial
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
Updating ./version.texi
restore=: && backupdir=".am$$" && \
am__cwd=`pwd` && CDPATH="${ZSH_VERSION+.}:" && cd . && \
rm -rf $backupdir && mkdir $backupdir && \
if (/bin/bash '/<<PKGBUILDDIR>>/guile18/build-aux/missing' makeinfo --version) >/dev/null 2>&1; then \
  for f in guile-tut.info guile-tut.info-[0-9] guile-tut.info-[0-9][0-9] guile-tut.i[0-9] guile-tut.i[0-9][0-9]; do \
    if test -f $f; then mv $f $backupdir; restore=mv; else :; fi; \
  done; \
else :; fi && \
cd "$am__cwd"; \
if /bin/bash '/<<PKGBUILDDIR>>/guile18/build-aux/missing' makeinfo   -I . \
 -o guile-tut.info guile-tut.texi; \
then \
  rc=0; \
  CDPATH="${ZSH_VERSION+.}:" && cd .; \
else \
  rc=$?; \
  CDPATH="${ZSH_VERSION+.}:" && cd . && \
  $restore $backupdir/* `echo "./guile-tut.info" | sed 's|[^/]*$||'`; \
fi; \
rm -rf $backupdir; exit $rc
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
Making all in r5rs
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
restore=: && backupdir=".am$$" && \
am__cwd=`pwd` && CDPATH="${ZSH_VERSION+.}:" && cd . && \
rm -rf $backupdir && mkdir $backupdir && \
if (/bin/bash '/<<PKGBUILDDIR>>/guile18/build-aux/missing' makeinfo --version) >/dev/null 2>&1; then \
  for f in r5rs.info r5rs.info-[0-9] r5rs.info-[0-9][0-9] r5rs.i[0-9] r5rs.i[0-9][0-9]; do \
    if test -f $f; then mv $f $backupdir; restore=mv; else :; fi; \
  done; \
else :; fi && \
cd "$am__cwd"; \
if /bin/bash '/<<PKGBUILDDIR>>/guile18/build-aux/missing' makeinfo   -I . \
 -o r5rs.info r5rs.texi; \
then \
  rc=0; \
  CDPATH="${ZSH_VERSION+.}:" && cd .; \
else \
  rc=$?; \
  CDPATH="${ZSH_VERSION+.}:" && cd . && \
  $restore $backupdir/* `echo "./r5rs.info" | sed 's|[^/]*$||'`; \
fi; \
rm -rf $backupdir; exit $rc
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc'
make[5]: Nothing to be done for 'all-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc'
Making all in examples
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/examples'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/examples'
Making all in test-suite
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite'
Making all in standalone
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
../../libguile/guile-snarf -o test-asmobs-lib.x test-asmobs-lib.c -DHAVE_CONFIG_H -I. -I../.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -I../.. -I../..
/usr/bin/make  all-am
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
/bin/bash ../../libtool  --tag=CC   --mode=compile x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I../..   -Wdate-time -D_FORTIFY_SOURCE=2 -I../../test-suite/standalone -I../.. -I../..  -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -MT libtest_asmobs_la-test-asmobs-lib.lo -MD -MP -MF .deps/libtest_asmobs_la-test-asmobs-lib.Tpo -c -o libtest_asmobs_la-test-asmobs-lib.lo `test -f 'test-asmobs-lib.c' || echo './'`test-asmobs-lib.c
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I../.. -Wdate-time -D_FORTIFY_SOURCE=2 -I../../test-suite/standalone -I../.. -I../.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libtest_asmobs_la-test-asmobs-lib.lo -MD -MP -MF .deps/libtest_asmobs_la-test-asmobs-lib.Tpo -c test-asmobs-lib.c  -fPIC -DPIC -o .libs/libtest_asmobs_la-test-asmobs-lib.o
libtool: compile:  x86_64-linux-gnu-gcc -DHAVE_CONFIG_H -I. -I../.. -Wdate-time -D_FORTIFY_SOURCE=2 -I../../test-suite/standalone -I../.. -I../.. -Wdate-time -D_FORTIFY_SOURCE=2 -O2 -g -Wall -Wmissing-prototypes -MT libtest_asmobs_la-test-asmobs-lib.lo -MD -MP -MF .deps/libtest_asmobs_la-test-asmobs-lib.Tpo -c test-asmobs-lib.c -o libtest_asmobs_la-test-asmobs-lib.o >/dev/null 2>&1
mv -f .deps/libtest_asmobs_la-test-asmobs-lib.Tpo .deps/libtest_asmobs_la-test-asmobs-lib.Plo
/bin/bash ../../libtool  --tag=CC   --mode=link x86_64-linux-gnu-gcc -I../../test-suite/standalone -I../.. -I../..  -Wdate-time -D_FORTIFY_SOURCE=2  -O2 -g -Wall -Wmissing-prototypes -no-undefined -rpath `pwd`  -Wl,-z,relro -o libtest-asmobs.la  libtest_asmobs_la-test-asmobs-lib.lo ../../libguile/libguile.la -lgmp -lcrypt -lm -lltdl 
libtool: link: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/libtest_asmobs_la-test-asmobs-lib.o   -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/guile18/libguile/.libs ../../libguile/.libs/libguile.so -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libtest-asmobs.so.0 -o .libs/libtest-asmobs.so.0.0.0
libtool: link: (cd ".libs" && rm -f "libtest-asmobs.so.0" && ln -s "libtest-asmobs.so.0.0.0" "libtest-asmobs.so.0")
libtool: link: (cd ".libs" && rm -f "libtest-asmobs.so" && ln -s "libtest-asmobs.so.0.0.0" "libtest-asmobs.so")
libtool: link: x86_64-linux-gnu-ar cr .libs/libtest-asmobs.a  libtest_asmobs_la-test-asmobs-lib.o
libtool: link: x86_64-linux-gnu-ranlib .libs/libtest-asmobs.a
libtool: link: ( cd ".libs" && rm -f "libtest-asmobs.la" && ln -s "../libtest-asmobs.la" "libtest-asmobs.la" )
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[5]: Nothing to be done for 'all-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite'
Making all in benchmark-suite
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
Making all in lang
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/lang'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/lang'
Making all in am
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/am'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/am'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
/usr/bin/make -C guile18 install DESTDIR=/<<PKGBUILDDIR>>/out/guile
make[2]: Entering directory '/<<PKGBUILDDIR>>/guile18'
Making install in oop
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop'
Making install in goops
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/oop/goops'
 /usr/bin/install -c -m 644 active-slot.scm compile.scm composite-slot.scm describe.scm dispatch.scm internal.scm save.scm stklos.scm util.scm old-define-method.scm accessors.scm simple.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/oop/goops'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop/goops'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/oop'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/oop'
 /usr/bin/install -c -m 644 goops.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/oop'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/oop'
Making install in libguile
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
/usr/bin/make  install-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/lib'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libguile.la '/<<PKGBUILDDIR>>/out/guile/usr/lib'
libtool: install: /usr/bin/install -c .libs/libguile.so.17.4.0 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile.so.17.4.0
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile.so.17.4.0 libguile.so.17 || { rm -f libguile.so.17 && ln -s libguile.so.17.4.0 libguile.so.17; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile.so.17.4.0 libguile.so || { rm -f libguile.so && ln -s libguile.so.17.4.0 libguile.so; }; })
libtool: install: /usr/bin/install -c .libs/libguile.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile.la
libtool: install: /usr/bin/install -c .libs/libguile.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile.a
libtool: warning: remember to run 'libtool --finish /usr/lib'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/bin'
  /bin/bash ../libtool   --mode=install /usr/bin/install -c guile '/<<PKGBUILDDIR>>/out/guile/usr/bin'
libtool: warning: 'libguile.la' has not been installed in '/usr/lib'
libtool: install: /usr/bin/install -c .libs/guile /<<PKGBUILDDIR>>/out/guile/usr/bin/guile
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/bin'
 /usr/bin/install -c guile-snarf '/<<PKGBUILDDIR>>/out/guile/usr/bin'
/usr/bin/make  install-exec-hook
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/libguile'
rm -f /<<PKGBUILDDIR>>/out/guile/usr/bin/guile-snarf.awk
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /usr/bin/install -c -m 644 __scm.h alist.h arbiters.h async.h backtrace.h boolean.h chars.h continuations.h convert.h debug.h debug-malloc.h deprecation.h deprecated.h discouraged.h dynl.h dynwind.h environments.h eq.h error.h eval.h evalext.h extensions.h feature.h filesys.h fluids.h fports.h futures.h gc.h gdb_interface.h gdbint.h goops.h gsubr.h guardians.h hash.h hashtab.h hooks.h i18n.h init.h inline.h ioext.h '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /usr/bin/install -c -m 644 iselect.h keywords.h lang.h list.h load.h macros.h mallocs.h modules.h net_db.h numbers.h objects.h objprop.h options.h pairs.h ports.h posix.h regex-posix.h print.h procprop.h procs.h properties.h random.h ramap.h rdelim.h read.h root.h rw.h scmsigs.h validate.h script.h simpos.h smob.h snarf.h socket.h sort.h srcprop.h stackchk.h stacks.h stime.h strings.h '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /usr/bin/install -c -m 644 srfi-4.h srfi-13.h srfi-14.h strorder.h strports.h struct.h symbols.h tags.h threads.h pthread-threads.h null-threads.h throw.h unif.h values.h variable.h vectors.h vports.h weaks.h '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /usr/bin/install -c -m 644 version.h scmconfig.h '/<<PKGBUILDDIR>>/out/guile/usr/include/libguile'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include/guile'
 /usr/bin/install -c -m 644 gh.h '/<<PKGBUILDDIR>>/out/guile/usr/include/guile'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8'
 /usr/bin/install -c -m 644 guile-procedures.txt '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/libguile'
Making install in ice-9
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/ice-9'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/ice-9'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9'
 /usr/bin/install -c -m 644  and-let-star.scm boot-9.scm calling.scm common-list.scm debug.scm debugger.scm documentation.scm emacs.scm expect.scm format.scm getopt-long.scm hcons.scm lineio.scm ls.scm mapping.scm match.scm networking.scm null.scm optargs.scm poe.scm popen.scm posix.scm psyntax.pp psyntax.ss q.scm r4rs.scm r5rs.scm rdelim.scm receive.scm regex.scm runq.scm rw.scm safe-r5rs.scm safe.scm session.scm slib.scm stack-catch.scm streams.scm string-fun.scm syncase.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/.'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/debugger'
 /usr/bin/install -c -m 644  debugger/command-loop.scm debugger/commands.scm debugger/state.scm debugger/trc.scm debugger/utils.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/debugger'
 /usr/bin/install -c -m 644  threads.scm buffered-input.scm time.scm history.scm channel.scm pretty-print.scm ftw.scm gap-buffer.scm occam-channel.scm weak-vector.scm deprecated.scm list.scm serialize.scm gds-client.scm gds-server.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/.'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/debugging'
 /usr/bin/install -c -m 644  debugging/example-fns.scm debugging/ice-9-debugger-extensions.scm debugging/steps.scm debugging/trace.scm debugging/traps.scm debugging/trc.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9/debugging'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/ice-9'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/ice-9'
Making install in guile-config
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-config'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-config'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/bin'
 /usr/bin/install -c guile-config '/<<PKGBUILDDIR>>/out/guile/usr/bin'
rm -f /usr/bin/build-guile
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/aclocal'
 /usr/bin/install -c -m 644 guile.m4 '/<<PKGBUILDDIR>>/out/guile/usr/share/aclocal'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-config'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-config'
Making install in guile-readline
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
/usr/bin/make  install-recursive
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
Making install in ice-9
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[6]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9'
 /usr/bin/install -c -m 644 readline.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/ice-9'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline/ice-9'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/lib'
 /bin/bash ./libtool   --mode=install /usr/bin/install -c   libguilereadline-v-17.la '/<<PKGBUILDDIR>>/out/guile/usr/lib'
libtool: warning: relinking 'libguilereadline-v-17.la'
libtool: install: (cd /<<PKGBUILDDIR>>/guile18/guile-readline; /bin/bash "/<<PKGBUILDDIR>>/guile18/guile-readline/libtool"  --tag CC --mode=relink x86_64-linux-gnu-gcc -O2 -g -version-info 17:3:0 -export-dynamic -no-undefined -Wl,-z,relro -o libguilereadline-v-17.la -rpath /usr/lib readline.lo ../libguile/libguile.la -lreadline -lncurses -inst-prefix-dir /<<PKGBUILDDIR>>/out/guile)
libtool: relink: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/readline.o   -L/<<PKGBUILDDIR>>/out/guile/usr/lib -L/usr/lib -lguile -lreadline -lncurses  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguilereadline-v-17.so.17 -o .libs/libguilereadline-v-17.so.17.0.3
libtool: install: /usr/bin/install -c .libs/libguilereadline-v-17.so.17.0.3T /<<PKGBUILDDIR>>/out/guile/usr/lib/libguilereadline-v-17.so.17.0.3
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguilereadline-v-17.so.17.0.3 libguilereadline-v-17.so.17 || { rm -f libguilereadline-v-17.so.17 && ln -s libguilereadline-v-17.so.17.0.3 libguilereadline-v-17.so.17; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguilereadline-v-17.so.17.0.3 libguilereadline-v-17.so || { rm -f libguilereadline-v-17.so && ln -s libguilereadline-v-17.so.17.0.3 libguilereadline-v-17.so; }; })
libtool: install: /usr/bin/install -c .libs/libguilereadline-v-17.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguilereadline-v-17.la
libtool: install: /usr/bin/install -c .libs/libguilereadline-v-17.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguilereadline-v-17.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguilereadline-v-17.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguilereadline-v-17.a
libtool: warning: remember to run 'libtool --finish /usr/lib'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include/guile'
 /usr/bin/install -c -m 644 readline.h '/<<PKGBUILDDIR>>/out/guile/usr/include/guile'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/guile-readline'
Making install in emacs
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/emacs'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/emacs'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/emacs'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/emacs'
Making install in scripts
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/scripts'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/scripts'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/scripts'
 /usr/bin/install -c PROGRAM autofrisk display-commentary doc-snarf frisk generate-autoload lint punify read-scheme-source read-text-outline use2dot snarf-check-and-output-texi summarize-guile-TODO scan-api api-diff read-rfc822 snarf-guile-m4-docs '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/scripts'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/scripts'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/scripts'
Making install in srfi
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/srfi'
/usr/bin/make  install-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/srfi'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/srfi'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/lib'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libguile-srfi-srfi-1-v-3.la libguile-srfi-srfi-4-v-3.la libguile-srfi-srfi-13-14-v-3.la libguile-srfi-srfi-60-v-2.la '/<<PKGBUILDDIR>>/out/guile/usr/lib'
libtool: warning: relinking 'libguile-srfi-srfi-1-v-3.la'
libtool: install: (cd /<<PKGBUILDDIR>>/guile18/srfi; /bin/bash "/<<PKGBUILDDIR>>/guile18/libtool"  --tag CC --mode=relink x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:2:0 -Wl,-z,relro -o libguile-srfi-srfi-1-v-3.la -rpath /usr/lib srfi-1.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl -inst-prefix-dir /<<PKGBUILDDIR>>/out/guile)
libtool: relink: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-1.o   -L/<<PKGBUILDDIR>>/out/guile/usr/lib -L/usr/lib -lguile -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-1-v-3.so.3 -o .libs/libguile-srfi-srfi-1-v-3.so.3.0.2
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-1-v-3.so.3.0.2T /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-1-v-3.so.3.0.2
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-1-v-3.so.3.0.2 libguile-srfi-srfi-1-v-3.so.3 || { rm -f libguile-srfi-srfi-1-v-3.so.3 && ln -s libguile-srfi-srfi-1-v-3.so.3.0.2 libguile-srfi-srfi-1-v-3.so.3; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-1-v-3.so.3.0.2 libguile-srfi-srfi-1-v-3.so || { rm -f libguile-srfi-srfi-1-v-3.so && ln -s libguile-srfi-srfi-1-v-3.so.3.0.2 libguile-srfi-srfi-1-v-3.so; }; })
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-1-v-3.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-1-v-3.la
libtool: warning: relinking 'libguile-srfi-srfi-4-v-3.la'
libtool: install: (cd /<<PKGBUILDDIR>>/guile18/srfi; /bin/bash "/<<PKGBUILDDIR>>/guile18/libtool"  --tag CC --mode=relink x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:1:0 -Wl,-z,relro -o libguile-srfi-srfi-4-v-3.la -rpath /usr/lib srfi-4.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl -inst-prefix-dir /<<PKGBUILDDIR>>/out/guile)
libtool: relink: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-4.o   -L/<<PKGBUILDDIR>>/out/guile/usr/lib -L/usr/lib -lguile -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-4-v-3.so.3 -o .libs/libguile-srfi-srfi-4-v-3.so.3.0.1
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-4-v-3.so.3.0.1T /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-4-v-3.so.3.0.1
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-4-v-3.so.3.0.1 libguile-srfi-srfi-4-v-3.so.3 || { rm -f libguile-srfi-srfi-4-v-3.so.3 && ln -s libguile-srfi-srfi-4-v-3.so.3.0.1 libguile-srfi-srfi-4-v-3.so.3; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-4-v-3.so.3.0.1 libguile-srfi-srfi-4-v-3.so || { rm -f libguile-srfi-srfi-4-v-3.so && ln -s libguile-srfi-srfi-4-v-3.so.3.0.1 libguile-srfi-srfi-4-v-3.so; }; })
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-4-v-3.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-4-v-3.la
libtool: warning: relinking 'libguile-srfi-srfi-13-14-v-3.la'
libtool: install: (cd /<<PKGBUILDDIR>>/guile18/srfi; /bin/bash "/<<PKGBUILDDIR>>/guile18/libtool"  --tag CC --mode=relink x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 3:1:0 -Wl,-z,relro -o libguile-srfi-srfi-13-14-v-3.la -rpath /usr/lib srfi-13.lo srfi-14.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl -inst-prefix-dir /<<PKGBUILDDIR>>/out/guile)
libtool: relink: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-13.o .libs/srfi-14.o   -L/<<PKGBUILDDIR>>/out/guile/usr/lib -L/usr/lib -lguile -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-13-14-v-3.so.3 -o .libs/libguile-srfi-srfi-13-14-v-3.so.3.0.1
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-13-14-v-3.so.3.0.1T /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-13-14-v-3.so.3.0.1
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-13-14-v-3.so.3.0.1 libguile-srfi-srfi-13-14-v-3.so.3 || { rm -f libguile-srfi-srfi-13-14-v-3.so.3 && ln -s libguile-srfi-srfi-13-14-v-3.so.3.0.1 libguile-srfi-srfi-13-14-v-3.so.3; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-13-14-v-3.so.3.0.1 libguile-srfi-srfi-13-14-v-3.so || { rm -f libguile-srfi-srfi-13-14-v-3.so && ln -s libguile-srfi-srfi-13-14-v-3.so.3.0.1 libguile-srfi-srfi-13-14-v-3.so; }; })
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-13-14-v-3.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-13-14-v-3.la
libtool: warning: relinking 'libguile-srfi-srfi-60-v-2.la'
libtool: install: (cd /<<PKGBUILDDIR>>/guile18/srfi; /bin/bash "/<<PKGBUILDDIR>>/guile18/libtool"  --tag CC --mode=relink x86_64-linux-gnu-gcc -O2 -g -Wall -Wmissing-prototypes -no-undefined -export-dynamic -version-info 2:2:0 -Wl,-z,relro -o libguile-srfi-srfi-60-v-2.la -rpath /usr/lib srfi-60.lo ../libguile/libguile.la -lgmp -lcrypt -lm -lltdl -inst-prefix-dir /<<PKGBUILDDIR>>/out/guile)
libtool: relink: x86_64-linux-gnu-gcc -shared  -fPIC -DPIC  .libs/srfi-60.o   -L/<<PKGBUILDDIR>>/out/guile/usr/lib -L/usr/lib -lguile -lgmp -lcrypt -lm -lltdl  -O2 -g -Wl,-z -Wl,relro   -Wl,-soname -Wl,libguile-srfi-srfi-60-v-2.so.2 -o .libs/libguile-srfi-srfi-60-v-2.so.2.0.2
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-60-v-2.so.2.0.2T /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-60-v-2.so.2.0.2
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-60-v-2.so.2.0.2 libguile-srfi-srfi-60-v-2.so.2 || { rm -f libguile-srfi-srfi-60-v-2.so.2 && ln -s libguile-srfi-srfi-60-v-2.so.2.0.2 libguile-srfi-srfi-60-v-2.so.2; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/out/guile/usr/lib && { ln -s -f libguile-srfi-srfi-60-v-2.so.2.0.2 libguile-srfi-srfi-60-v-2.so || { rm -f libguile-srfi-srfi-60-v-2.so && ln -s libguile-srfi-srfi-60-v-2.so.2.0.2 libguile-srfi-srfi-60-v-2.so; }; })
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-60-v-2.lai /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-60-v-2.la
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-1-v-3.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-1-v-3.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-1-v-3.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-1-v-3.a
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-4-v-3.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-4-v-3.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-4-v-3.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-4-v-3.a
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-13-14-v-3.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-13-14-v-3.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-13-14-v-3.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-13-14-v-3.a
libtool: install: /usr/bin/install -c .libs/libguile-srfi-srfi-60-v-2.a /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-60-v-2.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-60-v-2.a
libtool: install: x86_64-linux-gnu-ranlib /<<PKGBUILDDIR>>/out/guile/usr/lib/libguile-srfi-srfi-60-v-2.a
libtool: warning: remember to run 'libtool --finish /usr/lib'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/srfi'
 /usr/bin/install -c -m 644 srfi-1.scm srfi-2.scm srfi-4.scm srfi-6.scm srfi-8.scm srfi-9.scm srfi-10.scm srfi-11.scm srfi-13.scm srfi-14.scm srfi-16.scm srfi-17.scm srfi-19.scm srfi-26.scm srfi-31.scm srfi-34.scm srfi-35.scm srfi-37.scm srfi-39.scm srfi-60.scm srfi-69.scm srfi-88.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/srfi'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include/guile/srfi'
 /usr/bin/install -c -m 644 srfi-1.h srfi-4.h srfi-13.h srfi-14.h srfi-60.h '/<<PKGBUILDDIR>>/out/guile/usr/include/guile/srfi'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/srfi'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/srfi'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/srfi'
Making install in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc'
Making install in tutorial
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/info'
 /usr/bin/install -c -m 644 ./guile-tut.info '/<<PKGBUILDDIR>>/out/guile/usr/share/info'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/tutorial'
Making install in r5rs
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/info'
 /usr/bin/install -c -m 644 ./r5rs.info '/<<PKGBUILDDIR>>/out/guile/usr/share/info'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc/r5rs'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/doc'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/man/man1'
 /usr/bin/install -c -m 644 guile.1 '/<<PKGBUILDDIR>>/out/guile/usr/share/man/man1'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/doc'
Making install in examples
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/examples'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/examples'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/examples'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/examples'
Making install in test-suite
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite'
Making install in standalone
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
/usr/bin/make  install-am
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[6]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[6]: Nothing to be done for 'install-exec-am'.
make[6]: Nothing to be done for 'install-data-am'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite/standalone'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[5]: Entering directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[5]: Nothing to be done for 'install-exec-am'.
make[5]: Nothing to be done for 'install-data-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/test-suite'
Making install in benchmark-suite
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/benchmark-suite'
Making install in lang
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/lang'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/lang'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp/internals'
 /usr/bin/install -c -m 644  elisp/internals/evaluation.scm elisp/internals/format.scm elisp/internals/fset.scm elisp/internals/lambda.scm elisp/internals/load.scm elisp/internals/null.scm elisp/internals/set.scm elisp/internals/signal.scm elisp/internals/time.scm elisp/internals/trace.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp/internals'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp/primitives'
 /usr/bin/install -c -m 644  elisp/primitives/buffers.scm elisp/primitives/char-table.scm elisp/primitives/features.scm elisp/primitives/fns.scm elisp/primitives/format.scm elisp/primitives/guile.scm elisp/primitives/keymaps.scm elisp/primitives/lists.scm elisp/primitives/load.scm elisp/primitives/match.scm elisp/primitives/numbers.scm elisp/primitives/pure.scm elisp/primitives/read.scm elisp/primitives/signal.scm elisp/primitives/strings.scm elisp/primitives/symprop.scm elisp/primitives/syntax.scm elisp/primitives/system.scm elisp/primitives/time.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp/primitives'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp'
 /usr/bin/install -c -m 644  elisp/base.scm elisp/example.el elisp/interface.scm elisp/transform.scm elisp/variables.scm '/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8/lang/elisp'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/lang'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/lang'
Making install in am
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18/am'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18/am'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18/am'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18/am'
make[3]: Entering directory '/<<PKGBUILDDIR>>/guile18'
make[4]: Entering directory '/<<PKGBUILDDIR>>/guile18'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/bin'
 /usr/bin/install -c guile-tools '/<<PKGBUILDDIR>>/out/guile/usr/bin'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/include'
 /usr/bin/install -c -m 644 libguile.h '/<<PKGBUILDDIR>>/out/guile/usr/include'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/out/guile/usr/lib/pkgconfig'
 /usr/bin/install -c -m 644 guile-1.8.pc '/<<PKGBUILDDIR>>/out/guile/usr/lib/pkgconfig'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/guile18'
./autogen.sh --noconfigure
Running autoconf ...
Skipping configure process.
GUILE_LOAD_PATH="/<<PKGBUILDDIR>>/out/guile/usr/share/guile/1.8" \
	dh_auto_configure -- --disable-checking --enable-debugging --enable-optimising
	./configure --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-option-checking --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --runstatedir=/run --disable-maintainer-mode --disable-dependency-tracking --disable-checking --enable-debugging --enable-optimising
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for gmake... gmake
checking for find... find
checking for tar... tar
checking for python... python3
checking python3 version... 3.9.7
checking for python3... /usr/bin/python3
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking whether compiler understands -pipe... yes
checking for fc-list... fc-list
checking for TeX Gyre fonts OTF files... yes
checking for URW++ OTF files... yes
checking for python... /usr/bin/python3
checking /usr/bin/python3 version... 3.9.7
checking for /usr/bin/python3... (cached) /usr/bin/python3
checking for g++... g++
checking whether the compiler supports GNU C++... yes
checking whether g++ accepts -g... yes
checking for g++ option to enable C++11 features... none needed
checking for ar... ar
checking for ranlib... ranlib
checking for bison... bison -y
checking for bison... bison
checking bison version... 3.8.2
checking for flex... flex
checking for FlexLexer.h... yes
checking for yyFlexLexer.yypop_buffer_state ()... yes
checking for gettext in -lintl... no
checking for gettext... yes
checking for msgfmt... msgfmt
checking for mf-nowin... mf-nowin
checking for mpost... mpost
checking for working metafont mode... ljfour
checking for kpsewhich... kpsewhich
checking for metapost required files... yes
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for guile-1.8 >= 1.8.2... yes
checking for libguile18.h... no
checking for scm_t_hash_fold_fn... no
checking for scm_t_subr... no
checking whether g++ supports -Werror=unknown-warning-option... yes
checking whether g++ supports -Wcast-function-type... no
checking whether g++ supports -Wsequence-point... yes
checking whether g++ supports -Werror=suggest-override... yes
checking for usable C++ demangler... yes
checking for fontforge... fontforge
checking for fontforge... /usr/bin/fontforge
checking /usr/bin/fontforge version... 20201107
checking for t1asm... t1asm
checking for t1asm... /usr/bin/t1asm
checking for assert.h... yes
checking for grp.h... yes
checking for libio.h... no
checking for pwd.h... yes
checking for sys/stat.h... (cached) yes
checking for wchar.h... (cached) yes
checking whether stat file-mode macros are broken... no
checking for working memcmp... yes
checking for vprintf... yes
checking for chroot... yes
checking for gettext... (cached) yes
checking for pkg-config... /usr/bin/pkg-config
checking /usr/bin/pkg-config version... 0.29.2
checking for rpath linkage... no
checking for pangoft2 >= 1.38.0... yes
checking for pango/pangoft2.h... yes
checking for pango_ft2_font_map_create_context... yes
checking for fontconfig >= 2.4.0... yes
checking for freetype2 >= 2.3.9... yes
checking for glib-2.0 >= 2.38... yes
checking for gobject-2.0 >= 2.38... yes
checking for some flavor of Windows... no
checking for -windres... no
checking for x86_64-pc-linux-gnu-windres... no
checking for windres... no
checking for guile... guile
checking guile version... 1.8.8
checking for guile... guile
checking for guile... /<<PKGBUILDDIR>>/out/guile/usr/bin/guile
checking for perl... perl
checking for perl... /usr/bin/perl
checking for tidy... no
checking for gs... gs
checking for gs... /usr/bin/gs
checking /usr/bin/gs version... 9.54.0
checking for gs... gs
checking gs version... 9.54.0
checking for extractpdfmark... extractpdfmark
checking for makeinfo... makeinfo
checking makeinfo version... 6.8
checking for texi2html... texi2html
checking texi2html version... 1.82
checking for dblatex... dblatex
checking dblatex version... 0.3.12
checking for bibtex... bibtex
checking for xelatex... no
checking for pdflatex... pdflatex
checking for pdfetex... pdfetex
checking for texi2pdf... texi2pdf
checking for texindex... texindex
checking for epsf.tex... /usr/share/texlive/texmf-dist/tex/generic/epsf/epsf.tex
checking for Cyrillic characters support in TeX... yes
checking for convert... convert
checking for zip... zip
checking for rsync... rsync
configure: creating ./config.status
config.status: creating config.make
config.status: creating config.hh

WARNING: Please consider installing optional programs or files:  tidy

See INSTALL.txt for more information on how to build LilyPond

Type:
    make all       to build LilyPond
    make install   to install LilyPond
    make help      to see all possible targets

Edit local.make for local Makefile overrides.

See INSTALL.txt and README.md for more information

make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Making out/VERSION 
make[2]: Entering directory '/<<PKGBUILDDIR>>/Documentation/po'
Making out/share/lilypond/current/lilypond-force 
Making Documentation/po/out/messages (hard links)
make[2]: Leaving directory '/<<PKGBUILDDIR>>/Documentation/po'
make[2]: Entering directory '/<<PKGBUILDDIR>>/python'
Making python/out/book_base.pyc.dummy (py compile)
Making python/out/book_docbook.pyc.dummy (py compile)
Making python/out/book_html.pyc.dummy (py compile)
Making python/out/book_latex.pyc.dummy (py compile)
Making python/out/book_snippets.pyc.dummy (py compile)
Making python/out/book_texinfo.pyc.dummy (py compile)
Making python/out/convertrules.pyc.dummy (py compile)
Making python/out/fontextract.pyc.dummy (py compile)
Making python/out/langdefs.pyc.dummy (py compile)
Making python/out/lilylib.pyc.dummy (py compile)
Making python/out/midi.pyc.dummy (py compile)
Making python/out/musicexp.pyc.dummy (py compile)
Making python/out/musicxml.pyc.dummy (py compile)
Making python/out/musicxml2ly_conversion.pyc.dummy (py compile)
Making python/out/utilities.pyc.dummy (py compile)
make[3]: Entering directory '/<<PKGBUILDDIR>>/python/auxiliar'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/python/auxiliar'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/python'
make[2]: Entering directory '/<<PKGBUILDDIR>>/scripts'
Making scripts/out/relocate-preamble.py < in
Making scripts/out/lilypond-invoke-editor (sed)
Making scripts/out/convert-ly (sed)
Making scripts/out/lilypond-book (sed)
Making scripts/out/abc2ly (sed)
Making scripts/out/etf2ly (sed)
Making scripts/out/midi2ly (sed)
Making scripts/out/lilypond-invoke-editor.1 (help2man)
Making scripts/out/musicxml2ly (sed)
Making scripts/out/lilysong (sed)
Making scripts/out/lilymidi (sed)
Making scripts/out/convert-ly.1 (help2man)
Making scripts/out/lilypond-book.1 (help2man)
Making scripts/out/abc2ly.1 (help2man)
Making scripts/out/etf2ly.1 (help2man)
Making scripts/out/midi2ly.1 (help2man)
Making scripts/out/musicxml2ly.1 (help2man)
Making scripts/out/lilysong.1 (help2man)
Making scripts/out/lilymidi.1 (help2man)
make[3]: Entering directory '/<<PKGBUILDDIR>>/scripts/build'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/scripts/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/scripts/build'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/scripts/build'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/scripts'
make[2]: Entering directory '/<<PKGBUILDDIR>>/flower'
Making flower/out/cpu-timer.o < cc
Making flower/out/file-name.o < cc
Making flower/out/file-path.o < cc
Making flower/out/getopt-long.o < cc
Making flower/out/international.o < cc
getopt-long.cc:45:7: warning: variable 'l' is used uninitialized whenever '||' condition is true [-Wsometimes-uninitialized]
  if (!optional_argument_str0_
      ^~~~~~~~~~~~~~~~~~~~~~~~
getopt-long.cc:49:10: note: uninitialized use occurs here
  return l;
         ^
getopt-long.cc:45:7: note: remove the '||' if its condition is always false
  if (!optional_argument_str0_
      ^~~~~~~~~~~~~~~~~~~~~~~~
getopt-long.cc:44:9: note: initialize the variable 'l' to silence this warning
  long l;
        ^
         = 0
Making flower/out/interval-set.o < cc
1 warning generated.
Making flower/out/interval.o < cc
Making flower/out/libc-extension.o < cc
In file included from interval-set.cc:20:
In file included from /<<PKGBUILDDIR>>/flower/include/interval-set.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Interval_t<double> *, std::vector<Interval_t<double>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
interval-set.cc:42:3: note: in instantiation of function template specialization 'vector_sort<Interval_t<double>, bool (*)(const Interval_t<double> &, const Interval_t<double> &)>' requested here
  vector_sort (ivs, Interval::left_less);
  ^
In file included from interval-set.cc:20:
In file included from /<<PKGBUILDDIR>>/flower/include/interval-set.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Interval_t<double> *, std::vector<Interval_t<double>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
Making flower/out/offset.o < cc
Making flower/out/polynomial.o < cc
2 warnings generated.
Making flower/out/rational.o < cc
Making flower/out/std-string.o < cc
polynomial.cc:61:61: warning: implicit conversion changes signedness: 'long' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          dest.coefs_.back () += p1.coefs_[j] * p2.coefs_[i - j];
                                                ~~        ~~^~~
polynomial.cc:61:44: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          dest.coefs_.back () += p1.coefs_[j] * p2.coefs_[i - j];
                                 ~~        ^
polynomial.cc:97:14: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i - 1] = coefs_[i] * i;
    ~~~~~~ ~~^~~
polynomial.cc:97:28: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i - 1] = coefs_[i] * i;
                    ~~~~~~ ^
polynomial.cc:137:25: warning: implicit conversion turns floating-point number into integer: '__gnu_cxx::__alloc_traits<std::allocator<double>, double>::value_type' (aka 'double') to 'bool' [-Wfloat-conversion]
             || !coefs_.back ()))
                ~~~~~~~~^~~~~~~
polynomial.cc:148:12: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] += p.coefs_[i];
    ~~~~~~ ^
polynomial.cc:148:27: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] += p.coefs_[i];
                 ~        ^
polynomial.cc:158:12: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] -= p.coefs_[i];
    ~~~~~~ ^
polynomial.cc:158:27: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] -= p.coefs_[i];
                 ~        ^
polynomial.cc:165:12: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] *= fact;
    ~~~~~~ ^
polynomial.cc:172:12: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] = -src.coefs_[i];
    ~~~~~~ ^
polynomial.cc:172:29: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    coefs_[i] = -src.coefs_[i];
                 ~~~        ^
polynomial.cc:197:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (b)
  ~~  ^
polynomial.cc:214:11: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  return !r;
         ~^
polynomial.cc:306:25: warning: implicit conversion changes signedness: 'unsigned long' to 'ssize_t' (aka 'long') [-Wsign-conversion]
  return coefs_.size () - 1;
  ~~~~~~ ~~~~~~~~~~~~~~~^~~
polynomial.cc:336:7: warning: implicit conversion turns floating-point number into integer: 'const __gnu_cxx::__alloc_traits<std::allocator<double>, double>::value_type' (aka 'const double') to 'bool' [-Wfloat-conversion]
  if (coefs_[1])
  ~~  ^~~~~~~~~
In file included from polynomial.cc:23:
In file included from /<<PKGBUILDDIR>>/flower/include/polynomial.hh:28:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<double *, std::vector<double>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
polynomial.cc:88:3: note: in instantiation of function template specialization 'vector_sort<double, std::less<double>>' requested here
  vector_sort (sols, std::less<Real> ());
  ^
In file included from polynomial.cc:23:
In file included from /<<PKGBUILDDIR>>/flower/include/polynomial.hh:28:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<double *, std::vector<double>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
Making flower/out/string-convert.o < cc
In file included from rational.cc:20:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
rational.cc:71:26: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  return Rational (num_, den_);
         ~~~~~~~~        ^~~~
rational.cc:71:20: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  return Rational (num_, den_);
         ~~~~~~~~  ^~~~
rational.cc:77:16: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 i = num_ / den_;
      ~   ~~~~~^~~~~~
rational.cc:86:52: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  return Rational ((num_ - (num_ % den_)) * sign_, den_);
         ~~~~~~~~                                  ^~~~
rational.cc:86:43: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  return Rational ((num_ - (num_ % den_)) * sign_, den_);
         ~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
rational.cc:86:45: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  return Rational ((num_ - (num_ % den_)) * sign_, den_);
                                          ~ ^~~~~
rational.cc:93:10: warning: implicit conversion changes signedness: 'long long' to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
  num_ = ::abs (n);
       ~ ^~~~~~~~~
rational.cc:94:10: warning: implicit conversion changes signedness: 'long long' to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
  den_ = ::abs (d);
       ~ ^~~~~~~~~
rational.cc:101:10: warning: implicit conversion changes signedness: 'long long' to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
  num_ = ::abs (n);
       ~ ^~~~~~~~~
rational.cc:193:26: warning: implicit conversion changes signedness: 'U64' (aka 'unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 g = gcd (num_, den_);
              ~~~        ^~~~
rational.cc:193:20: warning: implicit conversion changes signedness: 'U64' (aka 'unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 g = gcd (num_, den_);
              ~~~  ^~~~
rational.cc:195:15: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'unsigned long long' [-Wsign-conversion]
      num_ /= g;
           ~~ ^
rational.cc:196:15: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'unsigned long long' [-Wsign-conversion]
      den_ /= g;
           ~~ ^
rational.cc:257:45: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 lcm = (den_ / gcd (r.den_, den_)) * r.den_;
          ~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
rational.cc:257:25: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'unsigned long long' [-Wsign-conversion]
      I64 lcm = (den_ / gcd (r.den_, den_)) * r.den_;
                      ~ ^~~~~~~~~~~~~~~~~~
rational.cc:257:38: warning: implicit conversion changes signedness: 'U64' (aka 'unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 lcm = (den_ / gcd (r.den_, den_)) * r.den_;
                        ~~~          ^~~~
rational.cc:257:32: warning: implicit conversion changes signedness: 'U64' (aka 'unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 lcm = (den_ / gcd (r.den_, den_)) * r.den_;
                        ~~~  ~~^~~~
rational.cc:258:43: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
      I64 n = sign_ * num_ * (lcm / den_) + r.sign_ * r.num_ * (lcm / r.den_);
          ~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rational.cc:258:65: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'unsigned long long' [-Wsign-conversion]
      I64 n = sign_ * num_ * (lcm / den_) + r.sign_ * r.num_ * (lcm / r.den_);
                                                                ^~~ ~
rational.cc:258:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long long' [-Wsign-conversion]
      I64 n = sign_ * num_ * (lcm / den_) + r.sign_ * r.num_ * (lcm / r.den_);
                                            ~~^~~~~ ~
rational.cc:258:31: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'unsigned long long' [-Wsign-conversion]
      I64 n = sign_ * num_ * (lcm / den_) + r.sign_ * r.num_ * (lcm / r.den_);
                              ^~~ ~
rational.cc:258:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long long' [-Wsign-conversion]
      I64 n = sign_ * num_ * (lcm / den_) + r.sign_ * r.num_ * (lcm / r.den_);
              ^~~~~ ~
rational.cc:261:14: warning: implicit conversion changes signedness: 'long long' to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
      num_ = ::abs (n);
           ~ ^~~~~~~~~
rational.cc:262:14: warning: implicit conversion changes signedness: 'long long' to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
      den_ = ::abs (d);
           ~ ^~~~~~~~~
rational.cc:318:10: warning: implicit conversion changes signedness: 'U64' (aka 'unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 r (num_);
      ~  ^~~~
rational.cc:320:10: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
  den_ = r;
       ~ ^
string-convert.cc:48:10: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  str += nibble2hex_byte ((Byte) (bin_char >> 4));
      ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
string-convert.cc:49:10: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  str += nibble2hex_byte (bin_char++);
      ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
string-convert.cc:60:14: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
      str += nibble2hex_byte ((Byte) (*byte >> 4));
          ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
string-convert.cc:61:14: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
      str += nibble2hex_byte (*byte++);
          ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~
string-convert.cc:196:22: warning: implicit conversion changes signedness: 'const int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return s + string (std::max (int (n - s.length ()), 0), ' ');
             ~~~~~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
string-convert.cc:219:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[0] = uint8_t (u >> 8);
       ~ ^~~~~~~~~~~~~~~~
string-convert.cc:220:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[1] = uint8_t (u);
       ~ ^~~~~~~~~~~
string-convert.cc:228:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[0] = uint8_t (u >> 24);
       ~ ^~~~~~~~~~~~~~~~~
string-convert.cc:229:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[1] = uint8_t (u >> 16);
       ~ ^~~~~~~~~~~~~~~~~
string-convert.cc:230:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[2] = uint8_t (u >> 8);
       ~ ^~~~~~~~~~~~~~~~
string-convert.cc:231:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[3] = uint8_t (u);
       ~ ^~~~~~~~~~~
string-convert.cc:239:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[0] = uint8_t (u >> 16);
       ~ ^~~~~~~~~~~~~~~~~
string-convert.cc:240:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[1] = uint8_t (u >> 8);
       ~ ^~~~~~~~~~~~~~~~
string-convert.cc:241:10: warning: implicit conversion changes signedness: 'uint8_t' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  r[2] = uint8_t (u);
       ~ ^~~~~~~~~~~
29 warnings generated.
Making flower/out/warn.o < cc
14 warnings generated.
18 warnings generated.
warn.cc:136:65: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::basic_string<char> *, std::vector<std::basic_string<char>>>::difference_type' (aka 'long') [-Wsign-conversion]
          expected_warnings.erase (expected_warnings.begin () + i);
                                                              ~ ^
1 warning generated.
Making flower/out/library.a 
make[2]: Leaving directory '/<<PKGBUILDDIR>>/flower'
make[2]: Entering directory '/<<PKGBUILDDIR>>/lily'
Making lily/out/parser.hh < yy
Making lily/out/lexer.cc < ll
Making lily/out/acceptance-set.o < cc
Making lily/out/accidental-engraver.o < cc
Making lily/out/accidental-placement.o < cc
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from acceptance-set.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from acceptance-set.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from acceptance-set.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from acceptance-set.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental-placement.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from accidental-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/accidental.o < cc
In file included from accidental-engraver.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
accidental-engraver.cc:394:43: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Spanner **, std::vector<Spanner *>>::difference_type' (aka 'long') [-Wsign-conversion]
            ties_.erase (ties_.begin () + j);
                                        ~ ^
Making lily/out/align-interface.o < cc
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::unique_ptr<Accidental_placement_entry> *, std::vector<std::unique_ptr<Accidental_placement_entry>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
accidental-placement.cc:194:3: note: in instantiation of function template specialization 'vector_sort<std::unique_ptr<Accidental_placement_entry>, bool (*)(const std::unique_ptr<Accidental_placement_entry> &, const std::unique_ptr<Accidental_placement_entry> &)>' requested here
  vector_sort (*apes, &ape_less);
  ^
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::unique_ptr<Accidental_placement_entry> *, std::vector<std::unique_ptr<Accidental_placement_entry>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
accidental-placement.cc:260:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_sort (accs, &acc_less);
  ^
In file included from accidental-placement.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-placement.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from accidental.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from accidental.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from align-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from align-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from align-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from align-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from align-interface.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from accidental.cc:24:
/<<PKGBUILDDIR>>/lily/include/lazy-skyline-pair.hh:68:10: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (!thickness)
        ~^~~~~~~~~
In file included from accidental.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from accidental.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
align-interface.cc:226:42: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
            translates[k] = stacking_dir * dy;
                            ~~~~~~~~~~~~ ^ ~~
align-interface.cc:254:50: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                  + stacking_dir * (last_spaceable_element_pos - where) + spaceable_padding));
                                    ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
align-interface.cc:260:74: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                dy = std::max (dy, spaceable_min_distance + stacking_dir * (last_spaceable_element_pos - where));
                                                            ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
align-interface.cc:268:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      down_skyline.raise (-stacking_dir * dy);
                          ~~~~~~~~~~~~~ ^ ~~
align-interface.cc:270:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      where += stacking_dir * dy;
               ~~~~~~~~~~~~ ^ ~~
9 warnings generated.
Making lily/out/all-font-metrics-scheme.o < cc
10 warnings generated.
Making lily/out/all-font-metrics.o < cc
12 warnings generated.
Making lily/out/ambitus-engraver.o < cc
11 warnings generated.
Making lily/out/apply-context-iterator.o < cc
In file included from all-font-metrics-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from all-font-metrics.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from all-font-metrics.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
5 warnings generated.
Making lily/out/arpeggio-engraver.o < cc
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ambitus-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from apply-context-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from apply-context-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from apply-context-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from apply-context-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from apply-context-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from apply-context-iterator.cc:21:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/arpeggio.o < cc
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from arpeggio-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
In file included from arpeggio.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/arpeggio.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
Making lily/out/articulations.o < cc
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/arpeggio.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/arpeggio.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from arpeggio.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/arpeggio.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
5 warnings generated.
Making lily/out/audio-column.o < cc
In file included from arpeggio.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from arpeggio.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
arpeggio.cc:167:25: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      heads[dir] -= dir * arrow.extent (Y_AXIS).length ();
                    ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
Making lily/out/audio-element-info.o < cc
In file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from audio-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hhIn file included from articulations.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37::62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
 warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~

                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/audio-element.o < cc
Making lily/out/audio-item.o < cc
7 warnings generated.
8 warnings generated.
Making lily/out/audio-staff.o < cc
Making lily/out/auto-beam-engraver.o < cc
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from audio-element-info.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/auto-change-iterator.o < cc
In file included from audio-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from audio-staff.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-staff.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-staff.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-staff.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from audio-staff.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-staff.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34In file included from auto-beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'scm_is_null'
: note: expanded from macro 'SCM_UNPACK'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:11: :120:26: note: expanded from macro 'scm_is_eq'
note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y)): note: expanded from macro 'SCM_UNPACK'

                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24::
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'547
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-beam-engraver.cc:20:
10: In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h::
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
36:34: note/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:: expanded from macro 'scm_is_null'
10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34120:26: note: expanded from macro 'scm_is_eq'
: note: expanded from macro 'scm_is_null'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:                         ^26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97: note: expanded from macro 'SCM_UNPACK'45: note: expanded from macro 'SCM_UNPACK'

#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10:#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x)) note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
                                            ^

#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: noteIn file included from audio-staff.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-staff.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-beam-engraver.cc:20:
:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: 547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: /<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL)): note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
:120:44: note: expanded from macro 'scm_is_eq'
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: :note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from In file included from auto-beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
audio-staff.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-staff.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from auto-beam-engraver.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
Making lily/out/axis-group-engraver.o < cc
7 warnings generated.
Making lily/out/axis-group-interface-scheme.o < cc
In file included from auto-change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from auto-change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/axis-group-interface.o < cc
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from axis-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from axis-group-interface.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/balloon-engraver.o < cc
axis-group-interface.cc:169:48: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval iv = begin_of_line_pure_height (me, start);
                ~~~~~~~~~~~~~~~~~~~~~~~~~      ^~~~~
axis-group-interface.cc:170:50: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  iv.unite (rest_of_line_pure_height (me, start, end));
            ~~~~~~~~~~~~~~~~~~~~~~~~             ^~~
axis-group-interface.cc:170:43: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  iv.unite (rest_of_line_pure_height (me, start, end));
            ~~~~~~~~~~~~~~~~~~~~~~~~      ^~~~~
axis-group-interface.cc:228:24: warning: implicit conversion changes signedness: 'typename __normal_iterator<const unsigned long *, vector<unsigned long>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vsize break_idx = it - break_ranks.begin ();
        ~~~~~~~~~   ~~~^~~~~~~~~~~~~~~~~~~~~~
axis-group-interface.cc:235:34: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      vsize r = cols[breaks[i]]->get_rank ();
            ~   ~~~~~~~~~~~~~~~~~^~~~~~~~~~~
axis-group-interface.cc:383:61: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Grob *g = pure_subst_prebroken_piece (elts[i], start, end);
                ~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^~~
axis-group-interface.cc:383:54: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Grob *g = pure_subst_prebroken_piece (elts[i], start, end);
                ~~~~~~~~~~~~~~~~~~~~~~~~~~           ^~~~~
axis-group-interface.cc:391:60: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Interval dims = g->pure_y_extent (common, start, end);
                             ~~~~~~~~~~~~~                 ^~~
axis-group-interface.cc:391:53: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Interval dims = g->pure_y_extent (common, start, end);
                             ~~~~~~~~~~~~~          ^~~~~
8 warnings generated.
axis-group-interface.cc:428:62: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      SCM line_break_details = get_property (system->column (start), "line-break-system-details");
                                                     ~~~~~~  ^~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:205:28: note: expanded from macro 'get_property'
#define get_property(p,x) (p)->internal_get_property (ly_symbol2scm (x))
                           ^
Making lily/out/balloon.o < cc
axis-group-interface.cc:618:66: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real my_coord = me->pure_relative_y_coordinate (common, start, end);
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~                 ^~~
axis-group-interface.cc:618:59: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real my_coord = me->pure_relative_y_coordinate (common, start, end);
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~          ^~~~~
axis-group-interface.cc:1065:86: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        return get_maybe_pure_property (grouper, "staff-staff-spacing", pure, start, end);
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
axis-group-interface.cc:1065:79: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        return get_maybe_pure_property (grouper, "staff-staff-spacing", pure, start, end);
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
axis-group-interface.cc:1067:91: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        return get_maybe_pure_property (grouper, "staffgroup-staff-spacing", pure, start, end);
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
axis-group-interface.cc:1067:84: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        return get_maybe_pure_property (grouper, "staffgroup-staff-spacing", pure, start, end);
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
axis-group-interface.cc:1069:83: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return get_maybe_pure_property (me, "default-staff-staff-spacing", pure, start, end);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
axis-group-interface.cc:1069:76: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return get_maybe_pure_property (me, "default-staff-staff-spacing", pure, start, end);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
8 warnings generated.
Making lily/out/bar-check-iterator.o < cc
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:45:
/<<PKGBUILDDIR>>/flower/include/interval.hh:43:67: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  Interval_t (Interval_t<T2> const &src) : Interval_t (src[LEFT], src[RIGHT])
                                           ~~~~~~~~~~             ^~~~~~~~~~
axis-group-interface.cc:305:25: note: in instantiation of function template specialization 'Interval_t<unsigned long>::Interval_t<int>' requested here
      Interval_t<vsize> rank_span (g->spanned_rank_interval ());
                        ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:45:
/<<PKGBUILDDIR>>/flower/include/interval.hh:43:56: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  Interval_t (Interval_t<T2> const &src) : Interval_t (src[LEFT], src[RIGHT])
                                           ~~~~~~~~~~  ^~~~~~~~~
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:117:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const unsigned long *, std::vector<unsigned long>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
axis-group-interface.cc:307:11: note: in instantiation of function template specialization 'lower_bound<unsigned long, std::less<unsigned long>>' requested here
        = lower_bound (ranks, rank_span[LEFT], std::less<vsize> ());
          ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:116:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const unsigned long *, std::vector<unsigned long>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = lower_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:121:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<const unsigned long *, vector<unsigned long>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
axis-group-interface.cc:550:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_sort (relevant_grobs, pure_staff_priority_less);
  ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:177:45: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  stable_sort (v.begin () + b, v.begin () + e, less);
                                          ~ ^
axis-group-interface.cc:922:3: note: in instantiation of function template specialization 'vector_stable_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_stable_sort (elements, staff_priority_less);
  ^
In file included from axis-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:177:29: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  stable_sort (v.begin () + b, v.begin () + e, less);
                          ~ ^
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from balloon-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from balloon.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from balloon.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from balloon.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
balloon.cc:104:44: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval y = p->pure_y_extent (p, start, end);
                  ~~~~~~~~~~~~~            ^~~
In file included from bar-check-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-check-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-check-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-check-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-check-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from bar-check-iterator.cc:21:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/bar-engraver.o < cc
7 warnings generated.
Making lily/out/bar-line.o < cc
8 warnings generated.
Making lily/out/bar-number-engraver.o < cc
In file included from bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from bar-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from bar-line.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bar-line.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-line.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bar-line.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-line.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bar-line.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-line.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bar-line.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-line.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/beam-collision-engraver.o < cc
In file included from bar-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bar-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from bar-number-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/beam-engraver.o < cc
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-collision-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from beam-collision-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_collision_engraver::Grob_with_context *, std::vector<Beam_collision_engraver::Grob_with_context>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
beam-collision-engraver.cc:113:3: note: in instantiation of function template specialization 'vector_sort<Beam_collision_engraver::Grob_with_context, bool (*)(const Beam_collision_engraver::Grob_with_context &, const Beam_collision_engraver::Grob_with_context &)>' requested here
  vector_sort (covered_grobs_, grob_less);
  ^
In file included from beam-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_collision_engraver::Grob_with_context *, std::vector<Beam_collision_engraver::Grob_with_context>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/beam-performer.o < cc
In file included from beam-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
34 warnings generated.
Making lily/out/beam-quanting.o < cc
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from beam-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
10 warnings generated.
Making lily/out/beam.o < cc
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/beaming-pattern.o < cc
In file included from beam-quanting.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
beam-quanting.cc:131:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (demerit)
  ~~  ^~~~~~~
8 warnings generated.
Making lily/out/bend-engraver.o < cc
beam-quanting.cc:446:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (*dy)
  ~~  ^~~
beam-quanting.cc:489:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
           + dir * beam_translation_ * (multiplicity.length () + 1);
             ~~~ ^ ~~~~~~~~~~~~~~~~~
beam-quanting.cc:538:14: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (!ideal.delta ())
      ~~~~~~~^~~~~~~~
beam-quanting.cc:550:33: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!ideal[LEFT] && chord.delta () && stem_infos_.size () == 2)
                       ~~ ~~~~~~^~~~~~~~
beam-quanting.cc:550:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!ideal[LEFT] && chord.delta () && stem_infos_.size () == 2)
          ~^~~~~~~~~~~
beam-quanting.cc:655:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      concaveness += std::max (beam_dir * (positions[i] - line_y), 0.0);
                               ~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
beam-quanting.cc:664:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (dy)
  ~~  ^~
beam-quanting.cc:735:29: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if ((damping) && (damping + concaveness))
                ~~  ~~~~~~~~^~~~~~~~~~~~~
beam-quanting.cc:735:8: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if ((damping) && (damping + concaveness))
       ^~~~~~~  ~~
beam-quanting.cc:739:26: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      Real slope = dy && x_span_ ? dy / x_span_ : 0;
                      ~~ ^~~~~~~
beam-quanting.cc:739:20: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      Real slope = dy && x_span_ ? dy / x_span_ : 0;
                   ^~ ~~
beam-quanting.cc:759:16: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real slope = x_span_ ? beam_dy / x_span_ : 0.0;
               ^~~~~~~ ~
beam-quanting.cc:841:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
        feasible_beam_placements[d] = d * infinity_f;
                                      ~ ^ ~~~~~~~~~~
beam-quanting.cc:908:13: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
        if (grid_shift)
        ~~  ^~~~~~~~~~
beam-quanting.cc:911:57: warning: arithmetic between floating-point type 'double' and enumeration type 'const Direction' [-Wenum-float-conversion]
            if ((unquanted_y_[d] + unshifted_quants[i]) * edge_dirs_[d] > 2.5)
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~
beam-quanting.cc:912:36: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'const Direction' [-Wenum-float-conversion]
              corr[d] = grid_shift * edge_dirs_[d];
                        ~~~~~~~~~~ ^ ~~~~~~~~~~~~~
beam-quanting.cc:1097:21: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      Real beam_y = dx
                    ^~
beam-quanting.cc:1106:53: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      score[d] += limit_penalty * std::max (0.0, (d * (info.shortest_y_ - current_y)));
                                                  ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam-quanting.cc:1108:27: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      Real ideal_diff = d * (current_y - info.ideal_y_);
                        ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam-quanting.cc:1132:83: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (is_knee_ && count[LEFT] == count[RIGHT] && count[LEFT] == 1 && unquanted_y_.delta ())
                                                                  ~~ ~~~~~~~~~~~~~^~~~~~~~
beam-quanting.cc:1153:12: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (!dy)
          ~^~
beam-quanting.cc:1251:47: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          Real gap1 = config->y[d] - stem_dir * ((j - 1) * beam_translation_ + beam_thickness_ / 2 - line_thickness_ / fudge_factor);
                                     ~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam-quanting.cc:1252:47: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          Real gap2 = config->y[d] - stem_dir * (j * beam_translation_ - beam_thickness_ / 2 + line_thickness_ / fudge_factor);
                                     ~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam-quanting.cc:1295:53: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
              && fabs (config->y[d] - edge_dirs_[d] * beam_translation_) < staff_radius_ + inter)
                                      ~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_segment *, std::vector<Beam_segment>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
beam-quanting.cc:348:7: note: in instantiation of function template specialization 'vector_sort<Beam_segment, bool (*)(const Beam_segment &, const Beam_segment &)>' requested here
      vector_sort (segments_, beam_segment_less);
      ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_segment *, std::vector<Beam_segment>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from beam.cc:43:
In file included from /<<PKGBUILDDIR>>/lily/include/beaming-pattern.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Interval_t<double> *, std::vector<Interval_t<double>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
beam-quanting.cc:826:3: note: in instantiation of function template specialization 'vector_sort<Interval_t<double>, bool (*)(const Interval_t<double> &, const Interval_t<double> &)>' requested here
  vector_sort (forbidden_intervals, Interval::left_less);
  ^
In file included from beam-quanting.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/beam-scoring-problem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Interval_t<double> *, std::vector<Interval_t<double>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from beaming-pattern.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beaming-pattern.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beaming-pattern.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beaming-pattern.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beaming-pattern.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from beam.cc:54:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
beaming-pattern.cc:185:40: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
                            infos_[i - non_flag_dir].count (non_flag_dir));
                                     ~ ^~~~~~~~~~~~
beaming-pattern.cc:184:50: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
                                      infos_[i + non_flag_dir].count (-non_flag_dir)),
                                               ~ ^~~~~~~~~~~~
In file included from beam.cc:65:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
beaming-pattern.cc:236:34: warning: implicit conversion changes signedness: 'I64' (aka 'long long') to 'U64' (aka 'unsigned long long') [-Wsign-conversion]
      U64 tuplet_number = factor.den ();
          ~~~~~~~~~~~~~   ~~~~~~~^~~~~~
beam.cc:433:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              seg.rank_ = 2 * i + (d + 1) / 2;
                                ~ ~~~~~~~~^~~
beam.cc:493:44: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
                               >= segs[j + event_dir].max_connect_);
                                         ~ ^~~~~~~~~
beam.cc:490:60: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
                           || absdiff (seg.rank_, segs[j + event_dir].rank_) > 1
                                                         ~ ^~~~~~~~~
beam.cc:515:40: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                           + event_dir * break_overshoot[event_dir]);
                             ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~
beam.cc:530:73: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
                          Grob *neighbor_stem = stems[seg.stem_index_ + event_dir];
                                                                      ~ ^~~~~~~~~
In file included from bend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
beam.cc:In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: 536:67: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                      current.horizontal_[event_dir] += event_dir * length;
                                                        ~~~~~~~~~ ^ ~~~~~~
expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:beam.cc97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: :543:63: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                  current.horizontal_[event_dir] += event_dir * seg.width_ / 2;
consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
                                                    ~~~~~~~~~ ^ ~~~~~~~~~~
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from beam.ccbend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
:546:67: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                      current.horizontal_[event_dir] -= event_dir * gap_length;
                                                        ~~~~~~~~~ ^ ~~~~~~~~~~
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
beam.ccIn file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
:558:65: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                              = event_dir * std::min (event_dir * current.horizontal_[event_dir],
                                                      ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'beam.cc
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
:561:55: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                                      * heads[k]->extent (commonx,
                                                      ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
beam.cc/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note:558:43: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
                              = event_dir * std::min (event_dir * current.horizontal_[event_dir],
: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
                                ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
beam.cc:671:28: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  Real slope = (dy && span.length ()) ? dy / span.length () : 0;
                   ~~ ~~~~~^~~~~~~~~
beam.cc:671:17: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real slope = (dy && span.length ()) ? dy / span.length () : 0;
                ^~ ~~
beam.cc:682:34: warning: operand of ? changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                   ? segments[0].vertical_count_
                     ~~~~~~~~~~~~^~~~~~~~~~~~~~~
beam.cc:683:39: warning: operand of ? changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                   : segments.back ().vertical_count_);
                     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
beam.cc:795:43: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
            extremes[d] = d * std::max (d * positions[d], d * extremes[d]);
                                        ~ ^ ~~~~~~~~~~~~
beam.cc:795:61: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
            extremes[d] = d * std::max (d * positions[d], d * extremes[d]);
                                                          ~ ^ ~~~~~~~~~~~
beam.cc:795:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
            extremes[d] = d * std::max (d * positions[d], d * extremes[d]);
                          ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam.cc:822:56: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          total[stem_dir] += std::max (int (- stem_dir * Stem::head_positions (s) [-stem_dir]), 0);
                                            ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam.cc:916:49: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
              head_extents[-stemdir] = -stemdir * infinity_f;
                                       ~~~~~~~~ ^ ~~~~~~~~~~
beam.cc:959:55: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          Interval head_extents = head_extents_array[j++];
                                  ~~~~~~~~~~~~~~~~~~ ~^~
beam.cc:1001:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (shorten)
  ~~  ^~~~~~~
In file included from bend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from bend-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
beam.cc:1036:15: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real relx = dx ? (stem->relative_coordinate (common[X_AXIS], X_AXIS) - xl) / dx : 0;
              ^~ ~
beam.cc:1141:31: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
        stem_y += thick * 0.5 * get_grob_direction (s);
                  ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
beam.cc:1285:22: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real slope = dy && dx ? dy / dx : 0;
                  ~~ ^~
beam.cc:1285:16: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real slope = dy && dx ? dy / dx : 0;
               ^~ ~~
beam.cc:1302:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real beam_y = stem_y - d * height_of_my_beams;
                         ~ ^ ~~~~~~~~~~~~~~~~~~
beam.cc:1313:46: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real shift = d * std::min (d * (beam_y - d * minimum_distance - rest_dim), 0.0);
                                           ~ ^ ~~~~~~~~~~~~~~~~
beam.cc:1313:32: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  Real shift = d * std::min (d * (beam_y - d * minimum_distance - rest_dim), 0.0);
                             ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam.cc:1313:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
  Real shift = d * std::min (d * (beam_y - d * minimum_distance - rest_dim), 0.0);
               ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
beam.cc:1364:15: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vsize idx = -1;
        ~~~   ^~
beam.cc:1391:25: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
                  + 4.0 * beamdir; // four staff-positions
                    ~~~ ^ ~~~~~~~
beam.cc:1393:39: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  beam_pos = std::max (-2.0, beam_pos * beamdir) * beamdir;
                             ~~~~~~~~ ^ ~~~~~~~
beam.cc:1393:50: warning: arithmetic between floating-point type 'const double' and enumeration type 'Direction' [-Wenum-float-conversion]
  beam_pos = std::max (-2.0, beam_pos * beamdir) * beamdir;
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~
beam.cc:1399:36: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
                - minimum_distance * beamdir
                  ~~~~~~~~~~~~~~~~ ^ ~~~~~~~
beam.cc:1404:59: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
  offset = floor (std::min (0.0, (offset - previous) / ss * beamdir))
                                 ~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~
beam.cc:1405:17: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
           * ss * beamdir + previous;
           ~~~~ ^ ~~~~~~~
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_stem_segment *, std::vector<Beam_stem_segment>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
beam.cc:457:7: note: in instantiation of function template specialization 'vector_sort<Beam_stem_segment, std::less<Beam_stem_segment>>' requested here
      vector_sort (segs, std::less<Beam_stem_segment> ());
      ^
In file included from beam.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Beam_stem_segment *, std::vector<Beam_stem_segment>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
10 warnings generated.
Making lily/out/bezier-bow.o < cc
8 warnings generated.
Making lily/out/bezier.o < cc
In file included from bezier-bow.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier-bow.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier-bow.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier-bow.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/book-scheme.o < cc
In file included from bezier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bezier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
bezier.cc:214:33: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<double *, std::vector<double>>::difference_type' (aka 'long') [-Wsign-conversion]
      sol.erase (sol.begin () + i);
                              ~ ^
In file included from book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
5 warnings generated.
Making lily/out/book.o < cc
5 warnings generated.
Making lily/out/box.o < cc
34 warnings generated.
Making lily/out/bracket.o < cc
In file included from book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from book.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from book.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
48 warnings generated.
Making lily/out/break-align-engraver.o < cc
In file included from box.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from box.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from box.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from box.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/break-alignment-interface.o < cc
In file included from bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from bracket.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
bracket.cc:57:31: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
    straight_corners[d] += -d * shorten[d] / length * dz;
                           ~~ ^ ~~~~~~~~~~
bracket.cc:70:47: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      straight_corners[d][bracket_axis] += -d * flare[d];
                                           ~~ ^ ~~~~~~~~
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
In file included from break-align-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/break-substitution.o < cc
8 warnings generated.
Making lily/out/breathing-sign-engraver.o < cc
In file included from break-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/break-align-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/break-align-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/break-align-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/break-align-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-alignment-interface.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from break-alignment-interface.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
break-alignment-interface.cc:82:61: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
              writable_elts.erase (writable_elts.begin () + i);
                                                          ~ ^
break-alignment-interface.cc:368:21: warning: comparison of floating-point type 'double' with enumeration type 'Direction' [-Wenum-float-conversion]
      if (alignment < CENTER)
          ~~~~~~~~~ ^ ~~~~~~
break-alignment-interface.cc:374:26: warning: comparison of floating-point type 'double' with enumeration type 'Direction' [-Wenum-float-conversion]
      else if (alignment > CENTER)
               ~~~~~~~~~ ^ ~~~~~~
break-alignment-interface.cc:413:77: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          if (scm_is_vector (vis) && from_scm<bool> (scm_c_vector_ref (vis, dir)))
                                                     ~~~~~~~~~~~~~~~~       ^~~
break-alignment-interface.cc:416:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      scm_c_vector_set_x (ret, dir, scm_from_bool (visible));
      ~~~~~~~~~~~~~~~~~~       ^~~
In file included from break-substitution.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-substitution.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-substitution.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from break-substitution.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/breathing-sign.o < cc
In file included from break-substitution.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from breathing-sign-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from breathing-sign-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
break-substitution.cc:364:24: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
        item_indices[j - system_range[LEFT]].add_point (i);
        ~~~~~~~~~~~~ ~~^~~~~~~~~~~~~~~~~~~~
In file included from breathing-sign.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from breathing-sign.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/breathing-sign.hh:12:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/change-iterator.o < cc
In file included from breathing-sign.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
8 warnings generated.
In file included from breathing-sign.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
Making lily/out/change-sequence-iterator.o < cc
breathing-sign.cc:97:26: warning: implicit conversion turns floating-point number into integer: 'const Real' (aka 'const double') to 'bool' [-Wfloat-conversion]
          if (Real const height = ydim.length ())
          ~~             ^~~~~~
13 warnings generated.
Making lily/out/chord-name-engraver.o < cc
In file included from change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from change-iterator.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from change-sequence-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-sequence-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-sequence-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-sequence-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from change-sequence-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from chord-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from chord-name-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from chord-name-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
7 warnings generated.
Making lily/out/chord-name.o < cc
7 warnings generated.
Making lily/out/chord-tremolo-engraver.o < cc
8 warnings generated.
Making lily/out/chord-tremolo-iterator.o < cc
In file included from chord-name.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-name.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-name.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from chord-tremolo-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-tremolo-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-tremolo-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-tremolo-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-tremolo-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from chord-tremolo-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/chord-tremolo-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from chord-name.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from chord-tremolo-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from chord-tremolo-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from chord-name.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
9 warnings generated.
Making lily/out/clef-engraver.o < cc
7 warnings generated.
Making lily/out/clef-modifier.o < cc
9 warnings generated.
Making lily/out/clef.o < cc
In file included from clef-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from clef-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from clef-modifier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-modifier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-modifier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef-modifier.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/cluster-engraver.o < cc
In file included from clef.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from clef.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
4 warnings generated.
Making lily/out/cluster.o < cc
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
5 warnings generated.
Making lily/out/coherent-ligature-engraver.o < cc
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from cluster-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/collision-engraver.o < cc
In file included from cluster.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/cluster.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/cluster.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/cluster.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/cluster.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cluster.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from cluster.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from coherent-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/column-x-positions.o < cc
8 warnings generated.
Making lily/out/completion-note-heads-engraver.o < cc
8 warnings generated.
Making lily/out/completion-rest-engraver.o < cc
8 warnings generated.
Making lily/out/concurrent-hairpin-engraver.o < cc
Making lily/out/constrained-breaking.o < cc
In file included from completion-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-note-heads-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from completion-note-heads-engraver.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from completion-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from completion-rest-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from completion-rest-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from constrained-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from constrained-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from constrained-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from constrained-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from constrained-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from concurrent-hairpin-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from constrained-breaking.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
concurrent-hairpin-engraver.cc:75:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
          hairpins_hanging_out_.erase (hairpins_hanging_out_.begin () + j);
                                                                      ~ ^
constrained-breaking.cc:134:54: warning: implicit conversion changes signedness: '__gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::value_type' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Paper_column **, std::vector<Paper_column *>>::difference_type' (aka 'long') [-Wsign-conversion]
                                     all_.begin () + breaks_[j] + 1);
                                                   ~ ^~~~~~~~~~
constrained-breaking.cc:133:54: warning: implicit conversion changes signedness: '__gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::value_type' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Paper_column **, std::vector<Paper_column *>>::difference_type' (aka 'long') [-Wsign-conversion]
  vector<Paper_column *> const line (all_.begin () + breaks_[i],
                                                   ~ ^~~~~~~~~~
constrained-breaking.cc:506:79: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval begin_of_line_extent = sys->begin_of_line_pure_height (start_rank, end_rank);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~              ^~~~~~~~
constrained-breaking.cc:506:67: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval begin_of_line_extent = sys->begin_of_line_pure_height (start_rank, end_rank);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~
constrained-breaking.cc:507:77: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval rest_of_line_extent = sys->rest_of_line_pure_height (start_rank, end_rank);
                                      ~~~~~~~~~~~~~~~~~~~~~~~~              ^~~~~~~~
constrained-breaking.cc:507:65: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval rest_of_line_extent = sys->rest_of_line_pure_height (start_rank, end_rank);
                                      ~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~
constrained-breaking.cc:543:76: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->footnote_heights_ = sys->get_footnote_heights_in_range (start_rank, end_rank);
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              ^~~~~~~~
constrained-breaking.cc:543:64: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->footnote_heights_ = sys->get_footnote_heights_in_range (start_rank, end_rank);
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~
constrained-breaking.cc:544:74: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->in_note_heights_ = sys->get_in_note_heights_in_range (start_rank, end_rank);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~              ^~~~~~~~
constrained-breaking.cc:544:62: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->in_note_heights_ = sys->get_in_note_heights_in_range (start_rank, end_rank);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~
constrained-breaking.cc:546:66: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->refpoint_extent_ = sys->pure_refpoint_extent (start_rank, end_rank);
                               ~~~~~~~~~~~~~~~~~~~~              ^~~~~~~~
constrained-breaking.cc:546:54: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  out->refpoint_extent_ = sys->pure_refpoint_extent (start_rank, end_rank);
                               ~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~
9 warnings generated.
Making lily/out/context-def.o < cc
8 warnings generated.
Making lily/out/context-handle.o < cc
8 warnings generated.
Making lily/out/context-mod-scheme.o < cc
In file included from context-def.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-def.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-def.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-def.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-def.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from context-def.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context-handle.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-handle.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-handle.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-handle.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-handle.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context-mod-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/context-mod.o < cc
7 warnings generated.
Making lily/out/context-property.o < cc
In file included from context-mod.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-mod.hh:30:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-mod.hh:30:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-mod.hh:30:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-mod.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-mod.hh:30:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/context-scheme.o < cc
20 warnings generated.
Making lily/out/context-specced-music-iterator.o < cc
In file included from context-property.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-property.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-property.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-property.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-property.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/context.o < cc
In file included from context-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from context-specced-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-specced-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-specced-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-specced-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context-specced-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context-specced-music-iterator.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/control-track-performer.o < cc
In file included from context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from context.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/cue-clef-engraver.o < cc
8 warnings generated.
Making lily/out/custos-engraver.o < cc
In file included from control-track-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from control-track-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from control-track-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from control-track-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from control-track-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from control-track-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from cue-clef-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cue-clef-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cue-clef-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cue-clef-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from cue-clef-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from cue-clef-engraver.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/custos.o < cc
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from custos-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/default-bar-line-engraver.o < cc
8 warnings generated.
Making lily/out/diagnostics.o < cc
In file included from custos.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/custos.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/custos.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/custos.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/custos.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from custos.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
8 warnings generated.
Making lily/out/dimensions-scheme.o < cc
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from default-bar-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from diagnostics.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from diagnostics.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from diagnostics.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from diagnostics.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from diagnostics.cc:21:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
5 warnings generated.
Making lily/out/directional-element-interface.o < cc
5 warnings generated.
Making lily/out/dispatcher-scheme.o < cc
In file included from dimensions-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dimensions-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dimensions-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:8 warnings generated.
97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dimensions-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/dispatcher.o < cc
4 warnings generated.
Making lily/out/dot-column-engraver.o < cc
In file included from directional-element-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from directional-element-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from directional-element-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from directional-element-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/dot-column.o < cc
In file included from dispatcher.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dispatcher.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dispatcher.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from dispatcher.cc:21:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from dot-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
7 warnings generated.
Making lily/out/dot-configuration.o < cc
In file included from dot-column-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from dot-column-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
dot-column.cc:91:12: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (!ss)
          ~^~
dot-column.cc:188:37: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
        dots.erase (dots.begin () + i);
                                  ~ ^
8 warnings generated.
Making lily/out/dot-formatting-problem.o < cc
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
dot-column.cc:153:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_sort (dots, pure_position_less);
  ^
In file included from dot-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from dot-configuration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-configuration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-configuration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-configuration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/dots-engraver.o < cc
In file included from dot-formatting-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-formatting-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-formatting-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-formatting-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-formatting-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-formatting-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dot-formatting-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dot-formatting-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/dots.o < cc
4 warnings generated.
Making lily/out/double-percent-repeat-engraver.o < cc
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from dots-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/drum-note-engraver.o < cc
In file included from double-percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120In file included from dots.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dots.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: :note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:2626: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: :expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11 note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note:  note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots.cc:20:
expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from double-percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/dots.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: noteIn file included from : expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots.cc:20:
/<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: In file included from /<<PKGBUILDDIR>>/lily/include/dots.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: /<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:note note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from double-percent-repeat-engraver.cc:20:
: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/dots.hh:24:
: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: noteIn file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:4410: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq' note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: 
expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from double-percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dots.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from double-percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from double-percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from dots.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
8 warnings generated.
Making lily/out/drum-note-performer.o < cc
In file included from drum-note-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
6 warnings generated.
Making lily/out/duration-scheme.o < cc
In file included from drum-note-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from drum-note-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/duration.o < cc
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from drum-note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from duration-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from duration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from duration.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
duration.cc:142:18: warning: implicit conversion changes signedness: 'const int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
    s += string (dots_, '.');
         ~~~~~~  ^~~~~
8 warnings generated.
Making lily/out/dynamic-align-engraver.o < cc
8 warnings generated.
Making lily/out/dynamic-engraver.o < cc
7 warnings generated.
Making lily/out/dynamic-performer.o < cc
8 warnings generated.
Making lily/out/enclosing-bracket.o < cc
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from dynamic-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-performer.cc:20In file included from dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
In file included from                                             ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
dynamic-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:2934: note: expanded from macro 'scm_is_null'
:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))/<<PKGBUILDDIR>>/flower/include/rational.hh:61
:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                 ^                                  ^~~~~ ~

/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from dynamic-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from dynamic-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from enclosing-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from enclosing-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from enclosing-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from enclosing-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
dynamic-performer.cc:276:38: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                        + depart_dir * near_padding * vol_range;
                          ~~~~~~~~~~ ^ ~~~~~~~~~~~~
dynamic-performer.cc:278:37: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                       + depart_dir * far_padding * vol_range;
                         ~~~~~~~~~~ ^ ~~~~~~~~~~~
4 warnings generated.
Making lily/out/engraver-group.o < cc
8 warnings generated.
Making lily/out/engraver-scheme.o < cc
8 warnings generated.
Making lily/out/engraver.o < cc
10 warnings generated.
Making lily/out/episema-engraver.o < cc
In file included from engraver-group.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-group.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-group.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-group.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-group.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from engraver-group.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from engraver-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from episema-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/event-chord-iterator.o < cc
8 warnings generated.
Making lily/out/event-iterator.o < cc
8 warnings generated.
Making lily/out/extender-engraver.o < cc
In file included from event-chord-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-chord-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-chord-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-chord-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-chord-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-chord-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-chord-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-chord-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from event-chord-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-chord-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/figured-bass-continuation.o < cc
In file included from event-chord-iterator.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from event-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-iterator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-iterator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-iterator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-iterator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from event-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/event-iterator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from event-iterator.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from extender-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from extender-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from extender-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from extender-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from extender-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from extender-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/figured-bass-engraver.o < cc
8 warnings generated.
Making lily/out/figured-bass-position-engraver.o < cc
In file included from figured-bass-continuation.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-continuation.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-continuation.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-continuation.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-continuation.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from figured-bass-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from figured-bass-position-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/file-name-map.o < cc
5 warnings generated.
Making lily/out/fingering-column-engraver.o < cc
In file included from file-name-map.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from file-name-map.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from file-name-map.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from file-name-map.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from fingering-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/fingering-column.o < cc
4 warnings generated.
Making lily/out/fingering-engraver.o < cc
8 warnings generated.
Making lily/out/flag.o < cc
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/font-config-scheme.o < cc
In file included from fingering-column.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
fingering-column.cc:96:27: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
      Real stack_end = -d * infinity_f;
                       ~~ ^ ~~~~~~~~~~
fingering-column.cc:100:17: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
           i += d)
             ~~ ^
fingering-column.cc:108:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
            stack_end += d * (y_ext.length () + padding);
                         ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
fingering-column.cc:142:26: warning: arithmetic between floating-point type 'const Real' (aka 'const double') and enumeration type 'Direction' [-Wenum-float-conversion]
  Real prev = infinity_f * dir;
              ~~~~~~~~~~ ^ ~~~
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
fingering-column.cc:88:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_sort (fingerings, pure_position_less);
  ^
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Fingering_and_offset *, std::vector<Fingering_and_offset>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
fingering-column.cc:137:3: note: in instantiation of function template specialization 'vector_sort<Fingering_and_offset, bool (*)(Fingering_and_offset, Fingering_and_offset)>' requested here
  vector_sort (fos, fingering_and_offset_less);
  ^
In file included from fingering-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Fingering_and_offset *, std::vector<Fingering_and_offset>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from flag.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from flag.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from flag.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from flag.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-config-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-config-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-config-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^In file included from flag.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~

/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-config-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from flag.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
flag.cc:195:39: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                 : stem_extent[d] - d * blot / 2);
                                    ~ ^ ~~~~
4 warnings generated.
Making lily/out/font-config.o < cc
15 warnings generated.
Making lily/out/font-interface.o < cc
8 warnings generated.
Making lily/out/font-metric-scheme.o < cc
7 warnings generated.
Making lily/out/font-metric.o < cc
In file included from font-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
Making lily/out/font-select.o < cc
In file included from font-metric-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hhIn file included from font-interface.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
font-metric-scheme.cc:87:34: warning: operand of ? changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  size_t glyph_index ((i >= 0) ? i : GLYPH_INDEX_INVALID);
         ~~~~~~~~~~~             ^
In file included from font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-metric.cc:20:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
6 warnings generated.
Making lily/out/font-size-engraver.o < cc
In file included from font-select.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-select.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-select.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-select.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-select.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
5 warnings generated.
6 warnings generated.
Making lily/out/footnote-engraver.o < cc
Making lily/out/forbid-break-engraver.o < cc
In file included from font-select.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from font-size-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-size-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-size-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-size-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from font-size-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from font-size-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
font-size-engraver.cc:52:8: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (!size)
      ~^~~~
6 warnings generated.
Making lily/out/freetype-error.o < cc
In file included from forbid-break-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from forbid-break-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from forbid-break-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from forbid-break-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: 
expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from forbid-break-engraver.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from footnote-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from forbid-break-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
9 warnings generated.
Making lily/out/freetype.o < cc
In file included from freetype-error.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype-error.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype-error.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype-error.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/fretboard-engraver.o < cc
8 warnings generated.
Making lily/out/function-documentation.o < cc
In file included from freetype.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from freetype.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/gdb.o < cc
In file included from freetype.cc:22:
/<<PKGBUILDDIR>>/lily/include/lazy-skyline-pair.hh:68:10: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (!thickness)
        ~^~~~~~~~~
In file included from fretboard-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/articulations.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fretboard-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/articulations.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
freetype.cc#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fretboard-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/articulations.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK':129:27: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    size_t quantization = std::max (2, int ((end - start).length () / 0.2));
           ~~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fretboard-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/articulations.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from fretboard-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/articulations.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from fretboard-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from function-documentation.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from function-documentation.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from function-documentation.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from function-documentation.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from function-documentation.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from function-documentation.cc:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
6 warnings generated.
Making lily/out/general-scheme.o < cc
In file included from gdb.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gdb.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gdb.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gdb.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gdb.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/glissando-engraver.o < cc
8 warnings generated.
Making lily/out/global-context-scheme.o < cc
In file included from general-scheme.cc:27:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from general-scheme.cc:27:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from general-scheme.cc:27:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from general-scheme.cc:27:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
general-scheme.cc:240:18: warning: implicit conversion changes signedness: '__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type' (aka 'char') to 'Byte' (aka 'unsigned char') [-Wsign-conversion]
      Byte cur = orig_str[i];
           ~~~   ^~~~~~~~~~~
general-scheme.cc:243:20: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        new_str += cur;
                ~~ ^~~
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from glissando-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from global-context-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from global-context-scheme.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/global-context.o < cc
In file included from global-context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from global-context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from global-context.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/global-ctor.o < cc
In file included from global-context.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/global-vars.o < cc
6 warnings generated.
Making lily/out/grace-engraver.o < cc
Making lily/out/grace-iterator.o < cc
Making lily/out/grace-music.o < cc
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grace-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/grace-spacing-engraver.o < cc
In file included from grace-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grace-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grace-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grace-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grace-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grace-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from grace-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/gregorian-ligature-engraver.o < cc
8 warnings generated.
Making lily/out/gregorian-ligature.o < cc
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
7 warnings generated.
Making lily/out/grid-line-interface.o < cc
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grace-spacing-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from gregorian-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from gregorian-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from gregorian-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/grid-line-span-engraver.o < cc
In file included from grid-line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grid-line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grid-line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grid-line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grid-line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-interface.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/grid-point-engraver.o < cc
8 warnings generated.
Making lily/out/grob-array-scheme.o < cc
5 warnings generated.
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: Making lily/out/grob-array.o < cc
note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grid-line-span-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grid-point-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from grob-array-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-array.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-array.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/grob-closure.o < cc
8 warnings generated.
8 warnings generated.
Making lily/out/grob-info.o < cc
Making lily/out/grob-interface-scheme.o < cc
4 warnings generated.
Making lily/out/grob-interface.o < cc
In file included from grob-closure.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-closure.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-closure.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-closure.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-info.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-info.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-info.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-info.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-info.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from grob-info.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/grob-pq-engraver.o < cc
4 warnings generated.
Making lily/out/grob-property.o < cc
8 warnings generated.
Making lily/out/grob-scheme.o < cc
In file included from grob-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
Making lily/out/grob-smob.o < cc
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from grob-pq-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grob-property.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-property.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-property.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-property.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-property.cc:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grob-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob_pq_entry *, std::vector<Grob_pq_entry>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
grob-pq-engraver.cc:105:3: note: in instantiation of function template specialization 'vector_sort<Grob_pq_entry, std::less<Grob_pq_entry>>' requested here
  vector_sort (started_now_, std::less<Grob_pq_entry> ());
  ^
In file included from grob-pq-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob_pq_entry *, std::vector<Grob_pq_entry>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from grob-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from grob-scheme.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grob-scheme.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
grob-scheme.cc:99:71: warning: implicit conversion changes signedness: 'scm_t_int32' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  SCM retval = sc->internal_get_pure_property (sym, scm_to_int (beg), scm_to_int (end));
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~                         ^~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/numbers.h:385:23: note: expanded from macro 'scm_to_int'
#define scm_to_int    scm_to_int32
                      ^
grob-scheme.cc:99:53: warning: implicit conversion changes signedness: 'scm_t_int32' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  SCM retval = sc->internal_get_pure_property (sym, scm_to_int (beg), scm_to_int (end));
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~       ^~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/numbers.h:385:23: note: expanded from macro 'scm_to_int'
#define scm_to_int    scm_to_int32
                      ^
grob-scheme.cc:122:63: warning: implicit conversion changes signedness: 'scm_t_int32' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval retval = sc->pure_y_extent (ref, scm_to_int (beg), scm_to_int (end));
                        ~~~~~~~~~~~~~                         ^~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/numbers.h:385:23: note: expanded from macro 'scm_to_int'
#define scm_to_int    scm_to_int32
                      ^
grob-scheme.cc:122:45: warning: implicit conversion changes signedness: 'scm_t_int32' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval retval = sc->pure_y_extent (ref, scm_to_int (beg), scm_to_int (end));
                        ~~~~~~~~~~~~~       ^~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/numbers.h:385:23: note: expanded from macro 'scm_to_int'
#define scm_to_int    scm_to_int32
                      ^
5 warnings generated.
Making lily/out/grob.o < cc
In file included from grob-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/guile-init.o < cc
10 warnings generated.
Making lily/out/hairpin.o < cc
In file included from grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from grob.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from grob.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from guile-init.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from guile-init.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from guile-init.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from guile-init.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
13 warnings generated.
4 warnings generated.
Making lily/out/hara-kiri-group-spanner.o < cc
Making lily/out/horizontal-bracket-engraver.o < cc
In file included from hairpin.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/hairpin.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hairpin.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/hairpin.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hairpin.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/hairpin.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hairpin.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/hairpin.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hairpin.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from hairpin.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
hairpin.cc:185:32: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
              x_points[d] -= d * broken_bound_padding;
                             ~ ^ ~~~~~~~~~~~~~~~~~~~~
hairpin.cc:193:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                x_points[d] = e[-d] - d * padding;
                                      ~ ^ ~~~~~~~
hairpin.cc:226:57: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                          x_points[d] = e.center () + d * (rad - thick / 2.0);
                                                      ~ ^ ~~~~~~~~~~~~~~~~~~~
hairpin.cc:235:55: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                        x_points[d] = e.center () - d * padding / 3;
                                                    ~ ^ ~~~~~~~
hairpin.cc:240:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                    x_points[d] = e[-d] - d * padding;
                                          ~ ^ ~~~~~~~
hairpin.cc:252:38: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                    x_points[d] -= d * padding;
                                   ~ ^ ~~~~~~~
hairpin.cc:257:33: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      x_points[d] -= shorten[d] * d;
                     ~~~~~~~~~~ ^ ~
In file included from hara-kiri-group-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
In file included from hara-kiri-group-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'                                            ^~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: 
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket-engraver.cc:20:
                                            ^
In file included from hara-kiri-group-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket-engraver.cc:20:

#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: noteIn file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: 10expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: : note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'note
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hara-kiri-group-spanner.cc:21:
 note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44In file included from : note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34:/<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
 note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: : expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hara-kiri-group-spanner.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from horizontal-bracket-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from horizontal-bracket-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
hara-kiri-group-spanner.cc:57:35: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  if (request_suicide (me, start, end))
      ~~~~~~~~~~~~~~~             ^~~
hara-kiri-group-spanner.cc:57:28: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  if (request_suicide (me, start, end))
      ~~~~~~~~~~~~~~~      ^~~~~
hara-kiri-group-spanner.cc:150:35: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  if (!request_suicide (me, left, right))
       ~~~~~~~~~~~~~~~            ^~~~~
hara-kiri-group-spanner.cc:150:29: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  if (!request_suicide (me, left, right))
       ~~~~~~~~~~~~~~~      ^~~~
In file included from hara-kiri-group-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
hara-kiri-group-spanner.cc:126:7: note: in instantiation of function template specialization 'vector_sort<int, std::less<int>>' requested here
      vector_sort (ranks, std::less<int> ());
      ^
In file included from hara-kiri-group-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/hara-kiri-group-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
15 warnings generated.
Making lily/out/horizontal-bracket.o < cc
8 warnings generated.
Making lily/out/hyphen-engraver.o < cc
13 warnings generated.
Making lily/out/includable-lexer.o < cc
In file included from horizontal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/horizontal-bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/horizontal-bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/horizontal-bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from horizontal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/horizontal-bracket.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/input-scheme.o < cc
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from hyphen-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/input-smob.o < cc
In file included from input-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-scheme.cc:21:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from includable-lexer.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from includable-lexer.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from includable-lexer.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from includable-lexer.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
5 warnings generated.
Making lily/out/input.o < cc
In file included from input-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input-smob.cc:20:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/instrument-name-engraver.o < cc
8 warnings generated.
Making lily/out/instrument-switch-engraver.o < cc
In file included from input.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from input.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
5 warnings generated.
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/interval-minefield.o < cc
In file included from input.cc:20:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from instrument-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from instrument-name-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from instrument-name-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from instrument-switch-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
interval-minefield.cc:66:51: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
              if (forbidden_intervals_[i][d] == d * infinity_f)
                                                ~ ^ ~~~~~~~~~~
interval-minefield.cc:67:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                feasible_placements_[d] = d * infinity_f;
                                          ~ ^ ~~~~~~~~~~
interval-minefield.cc:73:76: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                  feasible_placements_[d] = forbidden_intervals_[i][d] + d * (epsilon + (bulk_ / 2));
                                                                         ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
5 warnings generated.
Making lily/out/item-scheme.o < cc
3 warnings generated.
Making lily/out/item.o < cc
8 warnings generated.
Making lily/out/keep-alive-together-engraver.o < cc
8 warnings generated.
Making lily/out/key-engraver.o < cc
In file included from item-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from item-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from item.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
item.cc:146:75: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return from_scm<bool> (scm_c_vector_ref (vis, it->break_status_dir () + 1));
                           ~~~~~~~~~~~~~~~~       ~~~~~~~~~~~~~~~~~~~~~~~~^~~
In file included from keep-alive-together-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from keep-alive-together-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from keep-alive-together-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from keep-alive-together-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from keep-alive-together-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from keep-alive-together-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
Making lily/out/key-performer.o < cc
8 warnings generated.
Making lily/out/key-signature-interface.o < cc
In file included from key-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/clef.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from key-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from key-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from key-signature-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-signature-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-signature-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-signature-interface.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/accidental-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from key-performer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from key-signature-interface.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from key-signature-interface.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from key-signature-interface.cc:29:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/kievan-ligature-engraver.o < cc
9 warnings generated.
Making lily/out/kievan-ligature.o < cc
8 warnings generated.
Making lily/out/laissez-vibrer-engraver.o < cc
8 warnings generated.
Making lily/out/least-squares.o < cc
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from kievan-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from kievan-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
kievan-ligature-engraver.cc:90:36: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
      if (size_t const dot_count = Rhythmic_head::dot_count (current))
                       ~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from kievan-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/kievan-ligature.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/kievan-ligature.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/kievan-ligature.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from kievan-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/kievan-ligature.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
least-squares.cc/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
:51:18: warning                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: : implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
note: expanded from macro 'scm_is_eq'
  if (!count || !den)
                ~^~~
least-squares.cc:#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:9751:8: warning:: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
  if (!count || !den)
      ~^~~~~
45: note: expanded from macro 'SCM_UNPACK'
least-squares.cc:57:17: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      *offset = count ? sy / count : 0.0;
                ^~~~~ ~
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from laissez-vibrer-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
3 warnings generated.
Making lily/out/ledger-line-engraver.o < cc
4 warnings generated.
Making lily/out/ledger-line-spanner.o < cc
10 warnings generated.
Making lily/out/ligature-bracket-engraver.o < cc
In file included from ledger-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ledger-line-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ledger-line-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from ledger-line-spanner.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
ledger-line-spanner.cc:293:56: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
8 warnings generated.
                  Real limit = (center + (both ? which * gap / 2 : 0));
                                                 ~~~~~ ^ ~~~
ledger-line-spanner.cc:295:47: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                    = which * std::max (which * lr.max_ledger_extent_[-which],
                                        ~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ledger-line-spanner.cc:296:47: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                                        which * limit);
                                        ~~~~~ ^ ~~~~~
ledger-line-spanner.cc:295:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
                    = which * std::max (which * lr.max_ledger_extent_[-which],
                      ~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Making lily/out/ligature-engraver.o < cc
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ligature-bracket-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/lily-guile.o < cc
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/lily-imports.o < cc
In file included from lily-guile.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-guile.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-guile.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-guile.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-guile.cc:30:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/lily-lexer.o < cc
lily-guile.cc:106:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  string result = gulp_file (s, size);
                  ~~~~~~~~~     ^~~~
11 warnings generated.
Making lily/out/lily-modules.o < cc
lily-guile.cc:439:36: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  SCM tab = scm_c_make_hash_table (i);
            ~~~~~~~~~~~~~~~~~~~~~  ^
In file included from lily-imports.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-imports.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-imports.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-imports.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-imports.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-imports.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-imports.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-imports.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/lily-parser-scheme.o < cc
In file included from lily-modules.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warningIn file included from : indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
lily-lexer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))          ^~~~~~~~~~~~~~~~~~~~~~~
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-lexer.cc:20:

/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: noteIn file included from : expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45/<<PKGBUILDDIR>>/lily/include/lily-lexer.hh: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: :note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note:  note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: noteexpanded from macro 'SCM_UNPACK': expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-lexer.cc:20:

#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-modules.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note/<<PKGBUILDDIR>>/lily/include/lily-guile.hh: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: :544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44note: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
 note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11:                                             ^~~~~~~~note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))

                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-lexer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10:                                             ^warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34:
In file included from lily-modules.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL)) 
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44:                                             ^~~~~~~~note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
 note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-modules.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-modules.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:: 10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note:: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:  note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
9 warnings generated.
Making lily/out/lily-parser.o < cc
In file included from lily-lexer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from lily-lexer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
lily-lexer.cc:361:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char_count_stack_.back () += count;
                            ~~ ^~~~~
4 warnings generated.
Making lily/out/lily-version.o < cc
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lily-parser-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
9 warnings generated.
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
Making lily/out/lilypond-version.o < cc
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lily-parser.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
Making lily/out/line-interface-scheme.o < cc
In file included from line-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/line-interface.o < cc
Making lily/out/line-spanner.o < cc
8 warnings generated.
Making lily/out/listener.o < cc
4 warnings generated.
Making lily/out/lookup.o < cc
In file included from line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/line-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
In file included from /<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'line-interface.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~

/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from line-interface.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from line-spanner.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from line-spanner.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from listener.cc:20:
In file included from In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
line-spanner.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from listener.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from listener.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from listener.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/listener.hh:78:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
line-spanner.cc:200:16: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      y += dir * extra_dy / 2;
           ~~~ ^ ~~~~~~~~
line-spanner.cc:334:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      span_points[d] += -d * gaps[d] * magstep * dz.direction ();
                        ~~ ^ ~~~~~~~
4 warnings generated.
Making lily/out/ly-module.o < cc
In file included from lookup.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lookup.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lookup.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lookup.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
6 warnings generated.
Making lily/out/lyric-combine-music-iterator.o < cc
In file included from ly-module.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ly-module.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ly-module.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ly-module.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/lyric-combine-music.o < cc
4 warnings generated.
Making lily/out/lyric-engraver.o < cc
In file included from lyric-combine-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
11 warnings generated.
Making lily/out/lyric-extender.o < cc
In file included from lyric-combine-music-iterator.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from lyric-combine-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-combine-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lyric-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lyric-extender.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-extender.hh:11:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-extender.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-extender.hh:11:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-extender.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-extender.hh:11:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-extender.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-extender.hh:11:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from lyric-extender.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lyric-extender.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/lyric-hyphen.o < cc
7 warnings generated.
Making lily/out/lyric-performer.o < cc
8 warnings generated.
Making lily/out/main.o < cc
In file included from lyric-hyphen.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-hyphen.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-hyphen.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-hyphen.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-hyphen.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-hyphen.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-hyphen.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/lyric-hyphen.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-hyphen.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from lyric-hyphen.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lyric-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lyric-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from lyric-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/mark-engraver.o < cc
In file included from main.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from main.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from main.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from main.cc:21:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from main.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
8 warnings generated.
Making lily/out/measure-grouping-engraver.o < cc
In file included from main.cc:48:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
main.cc:416:19: warning: implicit conversion changes signedness: '__uid_t' (aka 'unsigned int') to 'int' [-Wsign-conversion]
    uid = passwd->pw_uid;
        ~ ~~~~~~~~^~~~~~
main.cc:433:18: warning: implicit conversion changes signedness: '__gid_t' (aka 'unsigned int') to 'int' [-Wsign-conversion]
    gid = group->gr_gid;
        ~ ~~~~~~~^~~~~~
main.cc:452:15: warning: implicit conversion changes signedness: 'int' to '__gid_t' (aka 'unsigned int') [-Wsign-conversion]
  if (setgid (gid))
      ~~~~~~  ^~~
main.cc:458:15: warning: implicit conversion changes signedness: 'int' to '__uid_t' (aka 'unsigned int') [-Wsign-conversion]
  if (setuid (uid))
      ~~~~~~  ^~~
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from mark-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/measure-grouping-spanner.o < cc
In file included from measure-grouping-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from measure-grouping-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from measure-grouping-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-grouping-spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-grouping-spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-grouping-spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-grouping-spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-grouping-spanner.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
10 warnings generated.
Making lily/out/measure-spanner.o < cc
8 warnings generated.
Making lily/out/melody-engraver.o < cc
5 warnings generated.
Making lily/out/melody-spanner.o < cc
8 warnings generated.
Making lily/out/mensural-ligature-engraver.o < cc
In file included from measure-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-spanner.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-spanner.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-spanner.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/measure-spanner.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from measure-spanner.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from measure-spanner.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from melody-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from measure-spanner.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
measure-spanner.cc:46:53: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
      vsize neighbor_idx = me->get_break_index () - break_dir;
                                                  ~ ^~~~~~~~~
In file included from melody-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/melody-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/melody-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/melody-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from melody-spanner.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/melody-spanner.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from mensural-ligature-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from mensural-ligature-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
mensural-ligature-engraver.cc:421:36: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
      if (size_t const dot_count = Rhythmic_head::dot_count (current))
                       ~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10 warnings generated.
Making lily/out/mensural-ligature.o < cc
8 warnings generated.
Making lily/out/metronome-engraver.o < cc
4 warnings generated.
Making lily/out/midi-cc-announcer.o < cc
In file included from mensural-ligature.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/mensural-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/mensural-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/mensural-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/mensural-ligature.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from mensural-ligature.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from midi-cc-announcer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-announcer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-announcer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-announcer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from In file included from midi-cc-announcer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
metronome-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: /<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~

                             ~~~~~~ ^~~~
In file included from midi-cc-announcer.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
10 warnings generated.
Making lily/out/midi-cc-performer.o < cc
8 warnings generated.
Making lily/out/midi-chunk.o < cc
6 warnings generated.
Making lily/out/midi-item.o < cc
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from midi-cc-performer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from midi-chunk.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-chunk.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-chunk.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-chunk.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-chunk.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/midi-stream.o < cc
In file included from midi-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
midi-item.cc:95:10: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  str += program_byte;
      ~~ ^~~~~~~~~~~~
midi-item.cc:225:22: warning: implicit conversion changes signedness: 'char' to 'Byte' (aka 'unsigned char') [-Wsign-conversion]
  Byte status_byte = (char) (0x90 + channel_);
       ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
midi-item.cc:239:10: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  str += status_byte;
      ~~ ^~~~~~~~~~~
midi-item.cc:241:10: warning: implicit conversion changes signedness: 'const Byte' (aka 'const unsigned char') to 'char' [-Wsign-conversion]
  str += dynamic_byte_;
      ~~ ^~~~~~~~~~~~~
midi-item.cc:259:22: warning: implicit conversion changes signedness: 'char' to 'Byte' (aka 'unsigned char') [-Wsign-conversion]
  Byte status_byte = (char) (0x90 + channel_);
       ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
midi-item.cc:261:18: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  string str (1, status_byte);
         ~~~     ^~~~~~~~~~~
midi-item.cc:263:10: warning: implicit conversion changes signedness: 'const Byte' (aka 'const unsigned char') to 'char' [-Wsign-conversion]
  str += aftertouch_byte_;
      ~~ ^~~~~~~~~~~~~~~~
midi-item.cc:286:22: warning: implicit conversion changes signedness: 'char' to 'Byte' (aka 'unsigned char') [-Wsign-conversion]
  Byte status_byte = (char) (0xB0 + channel_);
       ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
midi-item.cc:287:18: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  string str (1, status_byte);
         ~~~     ^~~~~~~~~~~
midi-item.cc:309:44: warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  uint32_t useconds_per_4 = 60 * (int) 1e6 / audio_->per_minute_4_;
           ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
midi-item.cc:333:22: warning: implicit conversion changes signedness: 'char' to 'Byte' (aka 'unsigned char') [-Wsign-conversion]
  Byte status_byte = (char) (0xB0 + channel_);
       ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
midi-item.cc:334:18: warning: implicit conversion changes signedness: 'Byte' (aka 'unsigned char') to 'char' [-Wsign-conversion]
  string str (1, status_byte);
         ~~~     ^~~~~~~~~~~
7 warnings generated.
Making lily/out/midi-walker.o < cc
In file included from midi-stream.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-stream.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-stream.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-stream.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
midi-stream.cc:76:20: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t written = ::write (out_file_, str.data (), count);
         ~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
Making lily/out/minimal-page-breaking.o < cc
5 warnings generated.
Making lily/out/misc.o < cc
19 warnings generated.
Making lily/out/modified-font-metric.o < cc
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:24:
In file included from /<<PKGBUILDDIR>>/flower/include/pqueue.hh:22:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:177:45: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Audio_item **, std::vector<Audio_item *>>::difference_type' (aka 'long') [-Wsign-conversion]
  stable_sort (v.begin () + b, v.begin () + e, less);
                                          ~ ^
midi-walker.cc:60:3: note: in instantiation of function template specialization 'vector_stable_sort<Audio_item *, bool (*)(Audio_item *, Audio_item *)>' requested here
  vector_stable_sort (items_, audio_item_less);
  ^
In file included from midi-walker.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-walker.hh:24:
In file included from /<<PKGBUILDDIR>>/flower/include/pqueue.hh:22:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:177:29: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Audio_item **, std::vector<Audio_item *>>::difference_type' (aka 'long') [-Wsign-conversion]
  stable_sort (v.begin () + b, v.begin () + e, less);
                          ~ ^
In file included from minimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/minimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from minimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/minimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from minimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/minimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from minimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/minimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from minimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/minimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from minimal-page-breaking.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from modified-font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from modified-font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from modified-font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from modified-font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/module-scheme.o < cc
8 warnings generated.
Making lily/out/moment-scheme.o < cc
In file included from modified-font-metric.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
5 warnings generated.
Making lily/out/moment.o < cc
9 warnings generated.
Making lily/out/multi-measure-rest-engraver.o < cc
In file included from module-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-module.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from module-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-module.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from module-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-module.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from module-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-module.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/multi-measure-rest.o < cc
In file included from moment.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from moment.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from multi-measure-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from multi-measure-rest-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
Making lily/out/music-function-scheme.o < cc
7 warnings generated.
Making lily/out/music-function.o < cc
In file included from multi-measure-rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/multi-measure-rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from multi-measure-rest.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from multi-measure-rest.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from multi-measure-rest.cc:30:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
multi-measure-rest.cc:236:15: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real blot = width ? (.8 * std::min (y, ythick)) : 0.0;
              ^~~~~ ~
In file included from music-function-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-function.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-function.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from music-function.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/music-iterator.o < cc
8 warnings generated.
Making lily/out/music-output.o < cc
8 warnings generated.
Making lily/out/music-scheme.o < cc
10 warnings generated.
Making lily/out/music-sequence.o < cc
In file included from music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from music-iterator.cc:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from music-output.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-output.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-output.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-output.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from music-scheme.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from music-sequence.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-sequence.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-sequence.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-sequence.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-sequence.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-sequence.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-sequence.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-sequence.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-sequence.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-sequence.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
In file included from music-sequence.cc:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
Making lily/out/music-wrapper-iterator.o < cc
8 warnings generated.
Making lily/out/music-wrapper.o < cc
In file included from music-wrapper-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from music-wrapper.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music-wrapper.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/music.o < cc
8 warnings generated.
Making lily/out/nested-property.o < cc
7 warnings generated.
Making lily/out/new-fingering-engraver.o < cc
7 warnings generated.
Making lily/out/note-collision.o < cc
In file included from music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from nested-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from nested-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from nested-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from nested-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from music.cc:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from nested-property.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
new-fingering-engraver.cc:234:47: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Finger_tuple *, std::vector<Finger_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
          scripts->erase (scripts->begin () + i);
                                            ~ ^
Making lily/out/note-column-scheme.o < cc
new-fingering-engraver.cc:264:72: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Finger_tuple *, std::vector<Finger_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
      down.insert (down.end (), scripts->begin (), scripts->begin () + center);
                                                                     ~ ^~~~~~
new-fingering-engraver.cc:265:49: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Finger_tuple *, std::vector<Finger_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
      up.insert (up.end (), scripts->begin () + center, scripts->end ());
                                              ~ ^~~~~~
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-collision.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Finger_tuple *, std::vector<Finger_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
new-fingering-engraver.cc:238:3: note: in instantiation of function template specialization 'vector_sort<Finger_tuple, std::less<Finger_tuple>>' requested here
  vector_sort (*scripts, std::less<Finger_tuple> ());
  ^
In file included from new-fingering-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Finger_tuple *, std::vector<Finger_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
note-collision.cc:415:32: warning: implicit conversion changes signedness: 'decltype(__lhs.base() - __rhs.base())' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      vsize x = find (done, s) - done.begin ();
            ~   ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
note-collision.cc:535:35: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
          offsets[d].push_back (d * offset);
                                ~ ^ ~~~~~~
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
note-collision.cc:452:7: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
      vector_sort (clashes, Note_column::shift_less);
      ^
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
note-collision.cc:600:3: note: in instantiation of function template specialization 'vector_sort<int, std::less<int>>' requested here
  vector_sort (out, std::less<int> ());
  ^
In file included from note-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-collision.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
8 warnings generated.
In file included from note-column-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
Making lily/out/note-column.o < cc
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/note-head-line-engraver.o < cc
In file included from note-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-column.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
13 warnings generated.
Making lily/out/note-head-scheme.o < cc
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-head-line-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
5 warnings generated.
Making lily/out/note-head.o < cc
11 warnings generated.
Making lily/out/note-heads-engraver.o < cc
In file included from note-head-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from note-head-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
Making lily/out/note-name-engraver.o < cc
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from note-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-head.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
note-heads-engraver.cc:107:83: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          unsigned int delta = (pit->get_notename () - tonic.get_notename () + 7) % 7;
                       ~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
5 warnings generated.
Making lily/out/note-performer.o < cc
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-name-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
5 warnings generated.
Making lily/out/note-spacing-engraver.o < cc
9 warnings generated.
Making lily/out/note-spacing.o < cc
8 warnings generated.
Making lily/out/one-line-auto-height-breaking.o < cc
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/note-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from note-spacing.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from note-spacing.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from note-spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
note-spacing.cc:128:27: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  return -note_head_width * get_grob_direction (right_stem)
         ~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note-spacing.cc:149:13: warning: arithmetic between floating-point type 'const double' and enumeration type 'Direction' [-Wenum-float-conversion]
            * left_stem_dir
            ^ ~~~~~~~~~~~~~
note-spacing.cc:188:32: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  return (delta > 1) ? -lowest * corr : 0;
                       ~~~~~~~ ^ ~~~~
In file included from one-line-auto-height-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-auto-height-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-auto-height-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-auto-height-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-auto-height-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-auto-height-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-auto-height-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-auto-height-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-auto-height-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-auto-height-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
In file included from one-line-auto-height-breaking.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
Making lily/out/one-line-page-breaking.o < cc
11 warnings generated.
Making lily/out/one-page-breaking.o < cc
8 warnings generated.
Making lily/out/open-type-font-scheme.o < cc
8 warnings generated.
Making lily/out/open-type-font.o < cc
In file included from one-line-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/one-line-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from one-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/one-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/one-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/one-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/one-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from one-line-page-breaking.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from one-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/one-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from one-page-breaking.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from open-type-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from open-type-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
In file included from open-type-font-scheme.cc         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
:21:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/optimal-page-breaking.o < cc
In file included from open-type-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
open-type-font-scheme.cc:311:11: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          | static_cast<unsigned char>(buff[3]);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
open-type-font-scheme.cc:365:15: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
              | static_cast<unsigned char>(buff[3]);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
open-type-font-scheme.cc:486:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      | static_cast<unsigned char>(buff[3]);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
open-type-font-scheme.cc:539:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      | static_cast<unsigned char>(buff[1]);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
open-type-font-scheme.cc:647:11: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          | static_cast<unsigned char>(buff[3]);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
open-type-font-scheme.cc:677:11: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          | static_cast<unsigned char>(buff[3]);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
open-type-font.cc:205:32: warning: implicit conversion changes signedness: 'std::basic_string<char>::size_type' (aka 'unsigned long') to 'FT_Long' (aka 'long') [-Wsign-conversion]
  args.memory_size = cff_table.size ();
                   ~ ~~~~~~~~~~^~~~~~~
Making lily/out/ottava-bracket.o < cc
open-type-font.cc:236:50: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<char *, std::basic_string<char>>::difference_type' (aka 'long') [-Wsign-conversion]
      string::iterator it = cff_table.begin () + hdrsize;
                                               ~ ^~~~~~~
open-type-font.cc:239:60: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      name_index_count = static_cast<unsigned char>(*it++) << 8;
                       ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
open-type-font.cc:509:49: warning: implicit conversion changes signedness: 'int' to 'FT_UInt' (aka 'unsigned int') [-Wsign-conversion]
      FT_Error code = FT_Get_Glyph_Name (face_, i, name, len);
                      ~~~~~~~~~~~~~~~~~         ^
In file included from optimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/optimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from optimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/optimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from optimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/optimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from optimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/optimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from optimal-page-breaking.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/optimal-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from optimal-page-breaking.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
optimal-page-breaking.cc:51:22: warning: implicit conversion changes signedness: 'decltype(conv_scm_traits<int>::from(s))' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vsize page_count = from_scm (forced_page_count, 1);
        ~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
optimal-page-breaking.cc:89:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          ideal_sys_count = systems_per_page () * page_count;
                            ^~~~~~~~~~~~~~~~~~~ ~
In file included from ottava-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-bracket.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from ottava-bracket.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ottava-bracket.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
ottava-bracket.cc:122:27: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      span_points[d] -= d * shorten[d];
                        ~ ^ ~~~~~~~~~~
ottava-bracket.cc:147:22: warning: compound assignment of floating-point type 'double' from enumeration type 'Direction' [-Wenum-float-conversion]
      edge_height[d] *= -get_grob_direction (me);
      ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~
11 warnings generated.
Making lily/out/ottava-engraver.o < cc
10 warnings generated.
Making lily/out/output-def-scheme.o < cc
9 warnings generated.
Making lily/out/output-def.o < cc
11 warnings generated.
Making lily/out/output-property-engraver.o < cc
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from ottava-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from output-def.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from output-def.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from output-property-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from output-def-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from output-def-scheme.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/overlay-string-port.o < cc
8 warnings generated.
Making lily/out/page-breaking-scheme.o < cc
9 warnings generated.
Making lily/out/page-breaking.o < cc
8 warnings generated.
Making lily/out/page-layout-problem-scheme.o < cc
In file included from overlay-string-port.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from overlay-string-port.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from overlay-string-port.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from overlay-string-port.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from overlay-string-port.cc:20:
/<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:143:25: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'off_t' (aka 'long') [-Wsign-conversion]
    pt->read_buf_size = len_;
                      ~ ^~~~
/<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:44:10: warning: private field 'pos_' is not used [-Wunused-private-field]
  size_t pos_;
         ^
In file included from page-breaking-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
6 warnings generated.
Making lily/out/page-layout-problem.o < cc
In file included from page-breaking-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from page-layout-problem-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-breaking.cc:135:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
Making lily/out/page-marker-scheme.o < cc
page-breaking.cc:223:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      ret.push_back (systems_per_page[i] + compressed_count);
                                         ~ ^~~~~~~~~~~~~~~~
page-breaking.cc:512:64: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  if (page_num >= 0 && (int) cache.size () > page_num && cache[page_num] >= 0)
                                                         ~~~~~ ^~~~~~~~
page-breaking.cc:513:18: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    return cache[page_num];
           ~~~~~ ^~~~~~~~
page-breaking.cc:527:36: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
            cache.resize (page_num + 1, -1);
                  ~~~~~~  ~~~~~~~~~^~~
page-breaking.cc:528:17: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          cache[page_num] = height;
          ~~~~~ ^~~~~~~~
page-breaking.cc:761:78: warning: implicit conversion changes signedness: 'scm_t_int32' (aka 'int') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
              vector<Line_details> details = breaking.line_details (0, VPOS, scm_to_int (system_count));
                                                      ~~~~~~~~~~~~           ^~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/numbers.h:385:23: note: expanded from macro 'scm_to_int'
#define scm_to_int    scm_to_int32
                      ^
page-breaking.cc:1216:10: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return ret;
  ~~~~~~ ^~~
page-breaking.cc:1538:101: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Line_details *, std::vector<Line_details>>::difference_type' (aka 'long') [-Wsign-conversion]
        vector<Line_details> lines1 (cached_line_details_.begin (), cached_line_details_.begin () + i + 1);
                                                                                                  ~ ^
page-breaking.cc:1539:70: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Line_details *, std::vector<Line_details>>::difference_type' (aka 'long') [-Wsign-conversion]
        vector<Line_details> lines2 (cached_line_details_.begin () + i + 1, cached_line_details_.end ());
                                                                   ~ ^
In file included from page-layout-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-layout-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-spacer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-layout-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-spacer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-layout-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-spacer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-layout-problem.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-layout-problem.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-spacer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/page-marker.o < cc
In file included from page-layout-problem.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from page-layout-problem.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
page-layout-problem.cc:567:32: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                               * (in_note_padding_
                               ^ ~~~~~~~~~~~~~~~~~
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::pair<double, unsigned long> *, std::vector<std::pair<double, unsigned long>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
page-breaking.cc:950:7: note: in instantiation of function template specialization 'vector_sort<std::pair<double, unsigned long>, std::less<std::pair<double, unsigned long>>>' requested here
      vector_sort (dems_and_indices, std::less<pair<Real, vsize> > ());
      ^
In file included from page-breaking.cc:130:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::pair<double, unsigned long> *, std::vector<std::pair<double, unsigned long>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from page-marker-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/page-spacing-result.o < cc
In file included from page-marker.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-marker.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-marker.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/page-spacing.o < cc
Making lily/out/page-turn-engraver.o < cc
In file included from page-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-spacing.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
page-spacing.cc:53:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (rod_height_)
  ~~  ^~~~~~~~~~~
page-spacing.cc:114:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (rod_height_)
  ~~  ^~~~~~~~~~~
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:117:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const Rational *, std::vector<Rational>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
page-turn-engraver.cc:125:17: note: in instantiation of function template specialization 'lower_bound<Rational, std::less<Rational>>' requested here
  vsize start = lower_bound (breakable_moments_, brk.duration_[LEFT], std::less<Rational> ());
                ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:116:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const Rational *, std::vector<Rational>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = lower_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:121:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<const Rational *, vector<Rational>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:135:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const Rational *, std::vector<Rational>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
page-turn-engraver.cc:126:15: note: in instantiation of function template specialization 'upper_bound<Rational, std::less<Rational>>' requested here
  vsize end = upper_bound (breakable_moments_, brk.duration_[RIGHT], std::less<Rational> ());
              ^
In file included from page-turn-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:134:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const Rational *, std::vector<Rational>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = upper_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:139:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<const Rational *, vector<Rational>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
9 warnings generated.
Making lily/out/page-turn-page-breaking.o < cc
9 warnings generated.
Making lily/out/pango-font-scheme.o < cc
In file included from page-turn-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from page-turn-page-breaking.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/page-turn-page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/page-breaking.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/constrained-breaking.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from page-turn-page-breaking.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
page-turn-page-breaking.cc:39:19: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  bool turnable = scm_is_symbol (get_property (g, "page-turn-permission"));
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:187:42: note: expanded from macro 'SCM_VALIDATE_CELL'
#  define SCM_VALIDATE_CELL(cell, expr) (expr)
                                         ^~~~
page-turn-page-breaking.cc:39:19: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:191:27: note: expanded from macro 'SCM_CELL_WORD'
  SCM_VALIDATE_CELL ((x), SCM_GC_CELL_WORD ((x), (n)))
                          ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
page-turn-page-breaking.cc:43:29: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      bool page_breakable = scm_is_symbol (get_property (g, "page-break-permission"));
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:187:42: note: expanded from macro 'SCM_VALIDATE_CELL'
#  define SCM_VALIDATE_CELL(cell, expr) (expr)
                                         ^~~~
page-turn-page-breaking.cc:43:29: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:191:27: note: expanded from macro 'SCM_CELL_WORD'
  SCM_VALIDATE_CELL ((x), SCM_GC_CELL_WORD ((x), (n)))
                          ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
page-turn-page-breaking.cc:44:29: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      bool line_breakable = scm_is_symbol (get_property (g, "line-break-permission"));
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^~~~~~~~~~~~~~~~~~~
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:187:42: note: expanded from macro 'SCM_VALIDATE_CELL'
#  define SCM_VALIDATE_CELL(cell, expr) (expr)
                                         ^~~~
page-turn-page-breaking.cc:44:29: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/symbols.h:29:42: note: expanded from macro 'scm_is_symbol'
                                     && (SCM_TYP7 (x) == scm_tc7_symbol))
                                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:402:38: note: expanded from macro 'SCM_TYP7'
#define SCM_TYP7(x)             (0x7f &        SCM_CELL_TYPE (x))
                                               ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:222:26: note: expanded from macro 'SCM_CELL_TYPE'
#define SCM_CELL_TYPE(x) SCM_CELL_WORD_0 (x)
                         ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:191:27: note: expanded from macro 'SCM_CELL_WORD'
  SCM_VALIDATE_CELL ((x), SCM_GC_CELL_WORD ((x), (n)))
                          ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/gc.h:168:35: note: expanded from macro 'SCM_GC_CELL_WORD'
#define SCM_GC_CELL_WORD(x, n)   (SCM_UNPACK (SCM_GC_CELL_OBJECT ((x), (n))))
                                  ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
page-turn-page-breaking.cc:79:71: warning: operand of ? changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  if (start < end - 1 && min_p_count + (auto_first ? 0 : (page_number % 2)) > 2)
                                     ~                    ~~~~~~~~~~~~^~~
page-turn-page-breaking.cc:132:17: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  vsize end = b.first_page_number_ + b.page_count_;
              ~~^~~~~~~~~~~~~~~~~~ ~
page-turn-page-breaking.cc:133:34: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  return end - 1 + (end % 2) - b.first_page_number_;
                             ~ ~~^~~~~~~~~~~~~~~~~~
page-turn-page-breaking.cc:194:48: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                  || (cur.page_count_ + (p_num % 2) > 2
                                      ~  ~~~~~~^~~
page-turn-page-breaking.cc:255:34: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
      breaking.push_back (state_[i]);
                          ~~~~~~ ^
page-turn-page-breaking.cc:256:36: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
      i = static_cast<int> (state_[i].prev_);
                            ~~~~~~ ^
page-turn-page-breaking.cc:293:44: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
      if (i + 1 < soln.size () && (soln[i].first_page_number_ + soln[i].page_count_) % 2)
                                   ~~~~~~~~^~~~~~~~~~~~~~~~~~ ~
In file included from pango-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/lookup.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
14 warnings generated.
Making lily/out/pango-font.o < cc
In file included from pango-font-scheme.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
18 warnings generated.
Making lily/out/pango-select-scheme.o < cc
5 warnings generated.
Making lily/out/pango-select.o < cc
In file included from pango-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-font.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
19 warnings generated.
Making lily/out/paper-book-scheme.o < cc
In file included from pango-font.cc:30:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
pango-font.cc:81:13: warning: 'pango_fc_font_lock_face' is deprecated: Use 'pango_font_get_hb_font' instead [-Wdeprecated-declarations]
    face_ = pango_fc_font_lock_face (pango_font);
            ^
/usr/include/pango-1.0/pango/pangofc-font.h:112:1: note: 'pango_fc_font_lock_face' has been explicitly marked deprecated here
PANGO_DEPRECATED_IN_1_44_FOR(pango_font_get_hb_font)
^
/usr/include/pango-1.0/pango/pango-version-macros.h:668:49: note: expanded from macro 'PANGO_DEPRECATED_IN_1_44_FOR'
# define PANGO_DEPRECATED_IN_1_44_FOR(f)        PANGO_DEPRECATED_FOR(f)
                                                ^
/usr/include/pango-1.0/pango/pango-version-macros.h:366:49: note: expanded from macro 'PANGO_DEPRECATED_FOR'
# define PANGO_DEPRECATED_FOR(f)                G_DEPRECATED_FOR(f) _PANGO_EXTERN
                                                ^
/usr/include/glib-2.0/glib/gmacros.h:1112:44: note: expanded from macro 'G_DEPRECATED_FOR'
#define G_DEPRECATED_FOR(f) __attribute__((__deprecated__("Use '" #f "' instead")))
                                           ^
pango-font.cc:87:5: warning: 'pango_fc_font_unlock_face' is deprecated: Use 'pango_font_get_hb_font' instead [-Wdeprecated-declarations]
    pango_fc_font_unlock_face (pango_font_);
    ^
/usr/include/pango-1.0/pango/pangofc-font.h:114:1: note: 'pango_fc_font_unlock_face' has been explicitly marked deprecated here
PANGO_DEPRECATED_IN_1_44_FOR(pango_font_get_hb_font)
^
/usr/include/pango-1.0/pango/pango-version-macros.h:668:49: note: expanded from macro 'PANGO_DEPRECATED_IN_1_44_FOR'
# define PANGO_DEPRECATED_IN_1_44_FOR(f)        PANGO_DEPRECATED_FOR(f)
                                                ^
/usr/include/pango-1.0/pango/pango-version-macros.h:366:49: note: expanded from macro 'PANGO_DEPRECATED_FOR'
# define PANGO_DEPRECATED_FOR(f)                G_DEPRECATED_FOR(f) _PANGO_EXTERN
                                                ^
/usr/include/glib-2.0/glib/gmacros.h:1112:44: note: expanded from macro 'G_DEPRECATED_FOR'
#define G_DEPRECATED_FOR(f) __attribute__((__deprecated__("Use '" #f "' instead")))
                                           ^
In file included from pango-select.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from pango-font.cc:30:
/<<PKGBUILDDIR>>/lily/include/pango-font.hh:42:13: warning: private field 'text_direction_' is not used [-Wunused-private-field]
  Direction text_direction_;
            ^
In file included from pango-select-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pango-select-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/pango-font.hh:28:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from pango-select.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
5 warnings generated.
Making lily/out/paper-book.o < cc
In file included from paper-book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
6 warnings generated.
Making lily/out/paper-column-engraver.o < cc
8 warnings generated.
Making lily/out/paper-column.o < cc
5 warnings generated.
Making lily/out/paper-def.o < cc
In file included from paper-book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-book.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-book.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-book.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from paper-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from paper-column.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from paper-column.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-def.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-def.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-def.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-def.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-def.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-def.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/modified-font-metric.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
6 warnings generated.
Making lily/out/paper-outputter-scheme.o < cc
8 warnings generated.
Making lily/out/paper-outputter.o < cc
8 warnings generated.
Making lily/out/paper-score-scheme.o < cc
9 warnings generated.
Making lily/out/paper-score.o < cc
In file included from paper-outputter-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-outputter.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-outputter.cc:25:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from paper-outputter.cc:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-outputter.cc:33:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
9 warnings generated.
Making lily/out/paper-system-scheme.o < cc
4 warnings generated.
Making lily/out/paper-system.o < cc
In file included from paper-score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-score.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-score.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
4 warnings generated.
Making lily/out/parenthesis-engraver.o < cc
In file included from paper-score.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from paper-score.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
paper-score.cc:83:54: warning: implicit conversion changes signedness: 'int' to 'std::vector<unsigned long>::value_type' (aka 'unsigned long') [-Wsign-conversion]
          break_ranks_.push_back (it->get_column ()->get_rank ());
                       ~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
paper-score.cc:122:38: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
    return algorithm.solve (0, VPOS, system_count);
                     ~~~~~           ^~~~~~~~~~~~
In file included from paper-system-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from paper-system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from paper-system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-system.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/parse-scm.o < cc
11 warnings generated.
Making lily/out/part-combine-engraver.o < cc
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
7 warnings generated.
Making lily/out/part-combine-iterator.o < cc
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from parenthesis-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from parse-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parse-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parse-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parse-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parse-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from part-combine-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from part-combine-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/part-combine-part-iterator.o < cc
In file included from parse-scm.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-lexer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from parse-scm.cc:27:
/<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:143:25: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'off_t' (aka 'long') [-Wsign-conversion]
    pt->read_buf_size = len_;
                      ~ ^~~~
parse-scm.cc:83:86: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
  Overlay_string_port overlay (start.start (), start.get_source_file ()->length () - byte_offset);
                                                                                   ~ ^~~~~~~~~~~
In file included from parse-scm.cc:27:
/<<PKGBUILDDIR>>/lily/include/overlay-string-port.hh:44:10: warning: private field 'pos_' is not used [-Wunused-private-field]
  size_t pos_;
         ^
11 warnings generated.
Making lily/out/partial-iterator.o < cc
7 warnings generated.
Making lily/out/pdf-scheme.o < cc
In file included from part-combine-part-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-part-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-part-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-part-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from part-combine-part-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/change-sequence-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/percent-repeat-engraver.o < cc
7 warnings generated.
Making lily/out/percent-repeat-item.o < cc
In file included from partial-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from partial-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from partial-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from partial-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from partial-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from partial-iterator.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from pdf-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pdf-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pdf-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pdf-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/percent-repeat-iterator.o < cc
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from percent-repeat-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from percent-repeat-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/percent-repeat-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/percent-repeat-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/percent-repeat-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/percent-repeat-item.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from percent-repeat-item.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
Making lily/out/performance-scheme.o < cc
In file included from percent-repeat-item.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from percent-repeat-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from percent-repeat-iterator.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from percent-repeat-iterator.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/performance.o < cc
In file included from performance-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/performer-group.o < cc
8 warnings generated.
Making lily/out/performer.o < cc
7 warnings generated.
Making lily/out/pfb-scheme.o < cc
In file included from performance.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-output.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performance.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performance.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from performance.cc:31:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
performance.cc:70:31: warning: implicit conversion loses integer precision: 'std::vector::size_type' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
  int tracks_ = audio_staffs_.size ();
      ~~~~~~~   ~~~~~~~~~~~~~~^~~~~~~
performance.cc:94:31: warning: implicit conversion loses integer precision: 'vsize' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
      s->output (midi_stream, i, ports_, start_mom_);
         ~~~~~~               ^
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from performer-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
10 warnings generated.
In file included from performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/pfb.o < cc
In file included from performer.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from pfb-scheme.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
8 warnings generated.
Making lily/out/phrasing-slur-engraver.o < cc
8 warnings generated.
Making lily/out/piano-pedal-align-engraver.o < cc
5 warnings generated.
Making lily/out/piano-pedal-bracket.o < cc
In file included from pfb.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pfb.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from phrasing-slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from piano-pedal-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
pfb.cc:56:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      seglen |= (static_cast<Byte>(*p++) << 8);
             ~~  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
pfb.cc:57:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      seglen |= (static_cast<Byte>(*p++) << 16);
             ~~  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
pfb.cc:58:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      seglen |= (static_cast<Byte>(*p++) << 24);
             ~~  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
pfb.cc:59:16: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>::difference_type' (aka 'long') [-Wsign-conversion]
      if ((p + seglen) > pfb.end ())
             ~ ^~~~~~
pfb.cc:67:24: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>::difference_type' (aka 'long') [-Wsign-conversion]
          copy (p, p + seglen, back_inserter (out));
                     ~ ^~~~~~
pfb.cc:68:16: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>::difference_type' (aka 'long') [-Wsign-conversion]
          p += seglen;
            ~~ ^~~~~~
In file included from piano-pedal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-bracket.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
11 warnings generated.
Making lily/out/piano-pedal-engraver.o < cc
4 warnings generated.
Making lily/out/piano-pedal-performer.o < cc
8 warnings generated.
Making lily/out/pitch-interval.o < cc
8 warnings generated.
Making lily/out/pitch-scheme.o < cc
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from piano-pedal-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
piano-pedal-engraver.cc:152:97: warning: implicit conversion changes signedness: 'int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
            base_ident = base_ident + String_convert::to_lower (string (name, prev_pos, cur_pos - prev_pos)) + "-";
                                                                ~~~~~~                  ~~~~~~~~^~~~~~~~~~
piano-pedal-engraver.cc:152:79: warning: implicit conversion changes signedness: 'int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
            base_ident = base_ident + String_convert::to_lower (string (name, prev_pos, cur_pos - prev_pos)) + "-";
                                                                ~~~~~~        ^~~~~~~~
piano-pedal-engraver.cc:155:79: warning: implicit conversion changes signedness: 'int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
      base_ident += String_convert::to_lower (string (name, prev_pos, cur_pos - prev_pos));
                                              ~~~~~~                  ~~~~~~~~^~~~~~~~~~
piano-pedal-engraver.cc:155:61: warning: implicit conversion changes signedness: 'int' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
      base_ident += String_convert::to_lower (string (name, prev_pos, cur_pos - prev_pos));
                                              ~~~~~~        ^~~~~~~~
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from piano-pedal-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from pitch-interval.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch-interval.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-interval.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch-interval.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-interval.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch-interval.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-interval.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch-interval.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-interval.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch-interval.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from pitch-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/pitch-squash-engraver.o < cc
12 warnings generated.
Making lily/out/pitch.o < cc
7 warnings generated.
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
Making lily/out/pitched-trill-engraver.o < cc
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/pointer-group-interface-scheme.o < cc
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from pitch-squash-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from pitch.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitch.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from pitched-trill-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/pointer-group-interface.o < cc
4 warnings generated.
Making lily/out/prob-scheme.o < cc
7 warnings generated.
Making lily/out/prob.o < cc
In file included from pointer-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pointer-group-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/pointer-group-interface.hh:25:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from prob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from prob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from prob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
Making lily/out/profile.o < cc
In file included from prob.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/program-option-scheme.o < cc
7 warnings generated.
Making lily/out/program-option.o < cc
8 warnings generated.
Making lily/out/property-iterator.o < cc
In file included from profile.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/profile.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from profile.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/profile.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from profile.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/profile.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from profile.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/profile.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/protected-scm.o < cc
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option-scheme.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/parse-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::basic_string<char> *, std::vector<std::basic_string<char>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
program-option-scheme.cc:173:3: note: in instantiation of function template specialization 'vector_sort<std::basic_string<char>, std::less<std::basic_string<char>>>' requested here
  vector_sort (opts, std::less<string> ());
  ^
In file included from program-option-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<std::basic_string<char> *, std::vector<std::basic_string<char>>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from program-option.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from program-option.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/program-option.hh:22:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/pure-from-neighbor-engraver.o < cc
In file included from property-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/property-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from property-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/property-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from property-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/property-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from property-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/property-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from property-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/property-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from property-iterator.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from protected-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from protected-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from protected-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from protected-scm.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/protected-scm.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/pure-from-neighbor-interface.o < cc
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/quote-iterator.o < cc
In file included from pure-from-neighbor-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from pure-from-neighbor-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
pure-from-neighbor-engraver.cc:122:54: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
                 > (need_pure_heights_from_neighbors[pos[1]][0]
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
pure-from-neighbor-engraver.cc:132:53: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
               k < need_pure_heights_from_neighbors[pos[j]].size ();
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
pure-from-neighbor-engraver.cc:134:67: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
            if (!in_same_column (need_pure_heights_from_neighbors[pos[j]][k],
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
pure-from-neighbor-engraver.cc:137:49: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
              (need_pure_heights_from_neighbors[pos[j]][k],
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
7 warnings generated.
Making lily/out/relative-octave-check.o < cc
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
pure-from-neighbor-engraver.cc:85:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *, Grob *)>' requested here
  vector_sort (need_pure_heights_from_neighbors_, Grob::less);
  ^
In file included from pure-from-neighbor-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from pure-from-neighbor-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from pure-from-neighbor-interface.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from quote-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from quote-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from quote-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from quote-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from quote-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music-wrapper-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from quote-iterator.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from relative-octave-check.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-check.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-check.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-check.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-check.cc:20:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from relative-octave-check.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/relative-octave-music.o < cc
8 warnings generated.
Making lily/out/relocate.o < cc
14 warnings generated.
Making lily/out/repeat-acknowledge-engraver.o < cc
8 warnings generated.
Making lily/out/repeat-tie-engraver.o < cc
In file included from relative-octave-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relative-octave-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from relocate.cc:29:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relocate.cc:29:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relocate.cc:29:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from relocate.cc:29:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
relocate.cc:273:38: warning: implicit conversion changes signedness: 'long' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
          out += string (ptr, dollar - ptr);
                 ~~~~~~       ~~~~~~~^~~~~
relocate.cc:307:51: warning: implicit conversion changes signedness: 'long' to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
              string var_name (start_var, end_var - start_var);
                     ~~~~~~~~             ~~~~~~~~^~~~~~~~~~~
7 warnings generated.
In file included from repeat-tie-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-tie-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-tie-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
Making lily/out/repeated-music.o < cc
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-tie-engraver.ccIn file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
:22:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: In file included from repeat-acknowledge-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: expanded from macro 'SCM_UNPACK'
implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeat-tie-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/laissez-vibrer-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from repeat-tie-engraver.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/laissez-vibrer-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from repeated-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/repeated-music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeated-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/repeated-music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
8                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeated-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/repeated-music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34:  warnings generated.
note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from repeated-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/repeated-music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/rest-collision-engraver.o < cc
In file included from repeated-music.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/repeated-music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
6 warnings generated.
Making lily/out/rest-collision.o < cc
8 warnings generated.
Making lily/out/rest-engraver.o < cc
In file included from rest-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
7/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh warnings generated.
:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/rest.o < cc
In file included from rest-collision-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from rest-collision-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest-collision.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
rest-collision.cc:155:19: warning: implicit conversion changes signedness: 'Direction' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
            rests[d]->warning (_ ("cannot resolve rest collision: rest direction not set"));
            ~~~~~ ^
In file included from rest-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
rest-collision.cc:197:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
              Real diff = d * ((last_y - y) / staff_space);
                          ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rest-collision.cc:259:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                   -dir * restdim[-dir] + dir * notedim[dir] + minimum_dist);
                                   ~~~~ ^ ~~~~~~~~~~~~~
rest-collision.cc:259:63: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                   -dir * restdim[-dir] + dir * notedim[dir] + minimum_dist);
                                                          ~~~ ^ ~~~~~~~~~~~~
rest-collision.cc:258:24: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
          Real y = dir * std::max (0.0,
                   ~~~ ^ ~~~~~~~~~~~~~~
rest-collision.cc:262:54: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
          int discrete_y = dir * int (ceil (y / (0.5 * dir * staff_space)));
                                                 ~~~ ^ ~~~
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
rest-collision.cc:159:9: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
        vector_sort (ordered_rests[d], rest_shift_less);
        ^
In file included from rest-collision.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest-collision.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rest.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rest.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from rest.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/rhythmic-column-engraver.o < cc
8 warnings generated.
Making lily/out/rhythmic-head.o < cc
16 warnings generated.
Making lily/out/rhythmic-music-iterator.o < cc
In file included from rhythmic-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/axis-group-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-column-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from rhythmic-column-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from rhythmic-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-head.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-head.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
6 warnings generated.
Making lily/out/rod.o < cc
In file included from rhythmic-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rhythmic-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/rhythmic-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from rhythmic-music-iterator.cc:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
4 warnings generated.
Making lily/out/scale.o < cc
8 warnings generated.
Making lily/out/scheme-engraver.o < cc
8 warnings generated.
In file included from rod.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rod.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rod.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
Making lily/out/scm-hash.o < cc
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rod.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from rod.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
rod.cc:43:23: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      distance_ += -d * item_drul_[d]->relative_coordinate (pc, X_AXIS);
                   ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rod.cc:65:17: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
        w += -d * item_drul_[d]->extent (item_drul_[d], X_AXIS)[-d];
             ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
9 warnings generated.
Making lily/out/score-engraver.o < cc
In file included from scale.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scale.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scale.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scale.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scale.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scale.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scale.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scale.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scale.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scale.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
scale.cc:110:22: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return step_tones_[normalized_step] + Rational (octave * 6);
         ~~~~~~~~~~~ ^~~~~~~~~~~~~~~
scale.cc:122:39: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    return Rational (6) - step_tones_[normalized_step];
                          ~~~~~~~~~~~ ^~~~~~~~~~~~~~~
scale.cc:124:57: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return step_tones_[normalized_step + 1] - step_tones_[normalized_step];
                                            ~~~~~~~~~~~ ^~~~~~~~~~~~~~~
scale.cc:124:38: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return step_tones_[normalized_step + 1] - step_tones_[normalized_step];
         ~~~~~~~~~~~ ~~~~~~~~~~~~~~~~^~~
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scm-hash.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/scm-hash.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/small-smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scm-hash.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/scm-hash.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/small-smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scm-hash.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/scm-hash.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/small-smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scm-hash.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/scm-hash.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/small-smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from scheme-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/scheme-engraver.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
4 warnings generated.
Making lily/out/score-performer.o < cc
11 warnings generated.
Making lily/out/score-scheme.o < cc
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from score-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/score.o < cc
In file included from score-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from score-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: noteIn file included from : expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warningscore-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/performer-group.hh:24: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:: note: expanded from macro 'scm_is_eq'
27:
/<<PKGBUILDDIR>>/lily/include/input.hh#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
: note: expanded from macro 'SCM_UNPACK'
  size_t size () const { return end_ - start_; }
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11                         ~~~~~~ ~~~~~^~~~~~~~
: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from score-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/input.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from score.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score.hh:25:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from score.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/global-context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/script-column-engraver.o < cc
9 warnings generated.
Making lily/out/script-column.o < cc
8 warnings generated.
Making lily/out/script-engraver.o < cc
8 warnings generated.
Making lily/out/script-interface.o < cc
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from script-column-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/script-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from script-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from script-interface.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from script-interface.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/script-row-engraver.o < cc
4 warnings generated.
Making lily/out/self-alignment-interface.o < cc
6 warnings generated.
Making lily/out/semi-tie-column.o < cc
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from script-row-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/semi-tie.o < cc
In file included from self-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/self-alignment-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from self-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/self-alignment-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from self-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/self-alignment-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from self-alignment-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/self-alignment-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from self-alignment-interface.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
self-alignment-interface.cc:58:64: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval ext (me->maybe_pure_extent (me, a, pure, start, end));
                        ~~~~~~~~~~~~~~~~~                      ^~~
self-alignment-interface.cc:58:57: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval ext (me->maybe_pure_extent (me, a, pure, start, end));
                        ~~~~~~~~~~~~~~~~~               ^~~~~
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
semi-tie-column.cc:58:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *, Grob *)>' requested here
  vector_sort (lv_ties, Semi_tie::less);
  ^
In file included from semi-tie-column.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from semi-tie.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/semi-tie-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from semi-tie.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/separating-line-group-engraver.o < cc
9 warnings generated.
Making lily/out/separation-item.o < cc
6 warnings generated.
Making lily/out/sequential-iterator.o < cc
7 warnings generated.
Making lily/out/side-position-interface.o < cc
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from separating-line-group-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from separation-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/separation-item.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separation-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/separation-item.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separation-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/separation-item.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separation-item.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/separation-item.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from separation-item.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
separation-item.cc:162:50: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval y (il->pure_y_extent (ycommon, 0, very_large));
                      ~~~~~~~~~~~~~              ^~~~~~~~~~
In file included from sequential-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sequential-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sequential-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sequential-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sequential-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/sequential-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from side-position-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from side-position-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from side-position-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from side-position-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/side-position-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sequential-iterator.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from side-position-interface.cc:41:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
side-position-interface.cc:211:107: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  bool quantize_position = from_scm<bool> (get_maybe_pure_property (me, "quantize-position", pure, start, end));
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:211:100: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  bool quantize_position = from_scm<bool> (get_maybe_pure_property (me, "quantize-position", pure, start, end));
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:217:84: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      && scm_is_number (get_maybe_pure_property (me, "staff-padding", pure, start, end))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:217:77: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      && scm_is_number (get_maybe_pure_property (me, "staff-padding", pure, start, end))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:229:39: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                                      end);
                                      ^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:228:39: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                                      start,
                                      ^~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:254:74: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                ? me->pure_relative_y_coordinate (common[Y_AXIS], start, end)
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~                         ^~~
side-position-interface.cc:254:67: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                ? me->pure_relative_y_coordinate (common[Y_AXIS], start, end)
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^~~~~
side-position-interface.cc:255:100: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                : me->get_y_parent ()->maybe_pure_coordinate (common[Y_AXIS], Y_AXIS, pure, start, end);
                                       ~~~~~~~~~~~~~~~~~~~~~                                       ^~~
side-position-interface.cc:255:93: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                : me->get_y_parent ()->maybe_pure_coordinate (common[Y_AXIS], Y_AXIS, pure, start, end);
                                       ~~~~~~~~~~~~~~~~~~~~~                                ^~~~~
side-position-interface.cc:296:45: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                                            end);
                                            ^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:295:45: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                                            start,
                                            ^~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:306:81: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                        ? e->pure_relative_y_coordinate (common[Y_AXIS], start, end)
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~                         ^~~
side-position-interface.cc:306:74: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                        ? e->pure_relative_y_coordinate (common[Y_AXIS], start, end)
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^~~~~
side-position-interface.cc:307:90: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                        : e->maybe_pure_coordinate (common[Y_AXIS], Y_AXIS, pure, start, end);
                             ~~~~~~~~~~~~~~~~~~~~~                                       ^~~
side-position-interface.cc:307:83: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                        : e->maybe_pure_coordinate (common[Y_AXIS], Y_AXIS, pure, start, end);
                             ~~~~~~~~~~~~~~~~~~~~~                                ^~~~~
side-position-interface.cc:311:100: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                  && from_scm<bool> (get_maybe_pure_property (me, "add-stem-support", pure, start, end)))
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:311:93: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                  && from_scm<bool> (get_maybe_pure_property (me, "add-stem-support", pure, start, end)))
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:332:93: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      staff_extents = staff_symbol->maybe_pure_extent (common[Y_AXIS], Y_AXIS, pure, start, end);
                                    ~~~~~~~~~~~~~~~~~                                       ^~~
side-position-interface.cc:332:86: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      staff_extents = staff_symbol->maybe_pure_extent (common[Y_AXIS], Y_AXIS, pure, start, end);
                                    ~~~~~~~~~~~~~~~~~                                ^~~~~
side-position-interface.cc:358:116: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real dist = dim.distance (my_dim, from_scm<double> (get_maybe_pure_property (me, "horizon-padding", pure, start, end), 0.0));
                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:358:109: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real dist = dim.distance (my_dim, from_scm<double> (get_maybe_pure_property (me, "horizon-padding", pure, start, end), 0.0));
                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:359:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real total_off = !std::isinf (dist) ? dir * dist : 0.0;
                                        ~~~ ^ ~~~~
side-position-interface.cc:361:20: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  total_off += dir * ss * from_scm<double> (get_maybe_pure_property (me, "padding", pure, start, end), 0.0);
               ~~~ ^ ~~
side-position-interface.cc:361:98: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  total_off += dir * ss * from_scm<double> (get_maybe_pure_property (me, "padding", pure, start, end), 0.0);
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:361:91: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  total_off += dir * ss * from_scm<double> (get_maybe_pure_property (me, "padding", pure, start, end), 0.0);
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:363:106: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real minimum_space = ss * from_scm<double> (get_maybe_pure_property (me, "minimum-space", pure, start, end), -1);
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:363:99: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real minimum_space = ss * from_scm<double> (get_maybe_pure_property (me, "minimum-space", pure, start, end), -1);
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:367:20: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      && total_off * dir < minimum_space)
         ~~~~~~~~~ ^ ~~~
side-position-interface.cc:368:31: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
    total_off = minimum_space * dir;
                ~~~~~~~~~~~~~ ^ ~~~
side-position-interface.cc:371:37: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
    total_off = dir * std::max (dir * total_off,
                                ~~~ ^ ~~~~~~~~~
side-position-interface.cc:372:37: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                                dir * (*current_off));
                                ~~~ ^ ~~~~~~~~~~~~~~
side-position-interface.cc:371:21: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
    total_off = dir * std::max (dir * total_off,
                ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~
side-position-interface.cc:397:98: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real my_off = me->get_y_parent ()->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                             ~~~~~~~~~~~~~~~~~~~~~                               ^~~
side-position-interface.cc:397:91: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real my_off = me->get_y_parent ()->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                             ~~~~~~~~~~~~~~~~~~~~~                        ^~~~~
side-position-interface.cc:398:87: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real staff_off = staff->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                  ~~~~~~~~~~~~~~~~~~~~~                               ^~~
side-position-interface.cc:398:80: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real staff_off = staff->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                  ~~~~~~~~~~~~~~~~~~~~~                        ^~~~~
side-position-interface.cc:409:26: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                  && dir * position < 0))
                     ~~~ ^ ~~~~~~~~
side-position-interface.cc:413:34: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                total_off += dir * 0.5 * ss;
                             ~~~ ^ ~~~
side-position-interface.cc:416:90: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      else if (scm_is_number (get_maybe_pure_property (me, "staff-padding", pure, start, end)) && dir)
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:416:83: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      else if (scm_is_number (get_maybe_pure_property (me, "staff-padding", pure, start, end)) && dir)
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:420:91: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
              * scm_to_double (get_maybe_pure_property (me, "staff-padding", pure, start, end));
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
side-position-interface.cc:420:84: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
              * scm_to_double (get_maybe_pure_property (me, "staff-padding", pure, start, end));
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
side-position-interface.cc:424:94: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real parent_position = parent->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                         ~~~~~~~~~~~~~~~~~~~~~                               ^~~
side-position-interface.cc:424:87: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real parent_position = parent->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                         ~~~~~~~~~~~~~~~~~~~~~                        ^~~~~
side-position-interface.cc:425:92: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real staff_position = staff->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                       ~~~~~~~~~~~~~~~~~~~~~                               ^~~
side-position-interface.cc:425:85: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Real staff_position = staff->maybe_pure_coordinate (common, Y_AXIS, pure, start, end);
                                       ~~~~~~~~~~~~~~~~~~~~~                        ^~~~~
side-position-interface.cc:426:84: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Interval staff_extent = staff->maybe_pure_extent (staff, a, pure, start, end);
                                         ~~~~~~~~~~~~~~~~~                         ^~~
side-position-interface.cc:426:77: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          Interval staff_extent = staff->maybe_pure_extent (staff, a, pure, start, end);
                                         ~~~~~~~~~~~~~~~~~                  ^~~~~
side-position-interface.cc:427:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          Real diff = (dir * staff_extent[dir] + staff_padding
                       ~~~ ^ ~~~~~~~~~~~~~~~~~
side-position-interface.cc:428:30: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                       - dir * total_off
                         ~~~ ^ ~~~~~~~~~
side-position-interface.cc:429:30: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                       + dir * (staff_position - parent_position));
                         ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
side-position-interface.cc:430:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
          total_off += dir * std::max (diff, 0.0);
                       ~~~ ^ ~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
Making lily/out/simple-music-iterator.o < cc
8 warnings generated.
Making lily/out/simple-spacer-scheme.o < cc
8 warnings generated.
Making lily/out/simple-spacer.o < cc
In file included from simple-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simple-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/simultaneous-music-iterator.o < cc
In file included from simple-spacer-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
simple-spacer-scheme.cc:75:26: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      spacer.add_rod (l, r, distance);
             ~~~~~~~     ^
simple-spacer-scheme.cc:75:23: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      spacer.add_rod (l, r, distance);
             ~~~~~~~  ^
In file included from simple-spacer.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simple-spacer.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
9 warnings generated.
Making lily/out/skyline-pair.o < cc
In file included from simple-spacer.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
simple-spacer.cc:155:17: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
            if (spring_dist)
            ~~  ^~~~~~~~~~~
60 warnings generated.
Making lily/out/skyline.o < cc
In file included from simple-spacer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/column-x-positions.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:117:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Paper_column *const *, std::vector<Paper_column *>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:149:14: note: in instantiation of function template specialization 'lower_bound<Paper_column *, bool (*)(Paper_column *const &, Paper_column *const &)>' requested here
  vsize lb = lower_bound (v, key, less, b, e);
             ^
simple-spacer.cc:432:21: note: in instantiation of function template specialization 'binary_search<Paper_column *, bool (*)(Paper_column *const &, Paper_column *const &)>' requested here
          vsize j = binary_search (cols, other,
                    ^
In file included from simple-spacer.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/column-x-positions.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:116:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Paper_column *const *, std::vector<Paper_column *>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = lower_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:121:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<Paper_column *const *, vector<Paper_column *>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
In file included from simultaneous-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simultaneous-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simultaneous-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simultaneous-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simultaneous-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simultaneous-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simultaneous-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simultaneous-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from simultaneous-music-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/simultaneous-music-iterator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/music-iterator.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from simultaneous-music-iterator.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from skyline-pair.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline-pair.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline-pair.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline-pair.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline-pair.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline-pair.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline-pair.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline-pair.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
skyline-pair.cc:64:8: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (!r)
      ~^
In file included from skyline.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from skyline.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
skyline.cc:108:21: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  Real height = sky * b[other_axis (horizon_axis)][sky];
                ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
skyline.cc:429:49: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      Real y1 = left[other_axis (horizon_axis)] * sky;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~
skyline.cc:430:50: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      Real y2 = right[other_axis (horizon_axis)] * sky;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~
skyline.cc:498:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
    i->y_intercept_ += sky_ * r;
                       ~~~~ ^ ~
skyline.cc:640:21: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
        return sky_ * b.height (airplane);
               ~~~~ ^ ~~~~~~~~~~~~~~~~~~~
skyline.cc:659:15: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  return sky_ * ret;
         ~~~~ ^ ~~~
skyline.cc:703:42: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  s.buildings_.front ().y_intercept_ = h * sky_;
                                       ~ ^ ~~~~
skyline.cc:716:42: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      out.push_back (Offset (start, sky_ * b.height (start)));
                                    ~~~~ ^ ~~~~~~~~~~~~~~~~
skyline.cc:717:48: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      out.push_back (Offset (b.x_[RIGHT], sky_ * b.height (b.x_[RIGHT])));
                                          ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
Making lily/out/slash-repeat-engraver.o < cc
5 warnings generated.
Making lily/out/slur-configuration.o < cc
In file included from slash-repeat-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slash-repeat-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slash-repeat-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slash-repeat-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slash-repeat-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from slash-repeat-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
11 warnings generated.
Making lily/out/slur-engraver.o < cc
In file included from slur-configuration.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-configuration.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-configuration.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-configuration.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-configuration.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
slur-configuration.cc:78:48: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                                + ((state.dir_ * distance > 0.0)
                                    ~~~~~~~~~~ ^ ~~~~~~~~
slur-configuration.cc:85:36: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          Real dy = resolution_dir * (min_distance - fabs (distance));
                    ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:115:19: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                d * dot_product (z, dz_perp));
                ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:119:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
        close_to_edge = close_to_edge || -d * (p[X_AXIS] - curve_xext[d]) < close_to_edge_length;
                                         ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:132:11: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (y)
      ~~  ^
slur-configuration.cc:211:12: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  index_ = -1;
         ~ ^~
slur-configuration.cc:223:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (s)
  ~~  ^
slur-configuration.cc:259:26: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
          if (state.dir_ * head_dy < 0)
              ~~~~~~~~~~ ^ ~~~~~~~
slur-configuration.cc:266:26: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
              Real hd = (head_dy)
                         ^~~~~~~
slur-configuration.cc:284:53: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                = state.dir_ * std::max (state.dir_ * state.encompass_infos_[j].get_point (state.dir_), state.dir_ * line_y);
                                         ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:284:116: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                = state.dir_ * std::max (state.dir_ * state.encompass_infos_[j].get_point (state.dir_), state.dir_ * line_y);
                                                                                                        ~~~~~~~~~~ ^ ~~~~~~
slur-configuration.cc:284:30: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const double' [-Wenum-float-conversion]
                = state.dir_ * std::max (state.dir_ * state.encompass_infos_[j].get_point (state.dir_), state.dir_ * line_y);
                  ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:291:22: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
      if (state.dir_ * (y - state.encompass_infos_[j].stem_) < 0)
          ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-configuration.cc:438:27: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
        dist = state.dir_ * (y - info.extents_[Y_AXIS][state.dir_]);
               ~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
Making lily/out/slur-performer.o < cc
In file included from slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from slur-engraver.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-engraver.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
slur-engraver.cc:239:64: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Slur_engraver::Event_info *, std::vector<Slur_engraver::Event_info>>::difference_type' (aka 'long') [-Wsign-conversion]
                start_events_.erase (start_events_.begin () + (*event_idx));
                                                            ~  ^~~~~~~~~~
slur-engraver.cc:266:47: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
              slurs_.erase (slurs_.begin () + j);
                                            ~ ^
slur-engraver.cc:296:43: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
          slurs_.erase (slurs_.begin () + j);
                                        ~ ^
slur-engraver.cc:315:61: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Slur_engraver::Event_info *, std::vector<Slur_engraver::Event_info>>::difference_type' (aka 'long') [-Wsign-conversion]
                stop_events_.erase (stop_events_.begin () + j);
                                                          ~ ^
18 warnings generated.
Making lily/out/slur-score-parameters.o < cc
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from slur-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
13 warnings generated.
Making lily/out/slur-scoring.o < cc
In file included from slur-score-parameters.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-score-parameters.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-score-parameters.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-score-parameters.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/slur.o < cc
4 warnings generated.
Making lily/out/smobs.o < cc
In file included from slur-scoring.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-scoring.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-scoring.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-scoring.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-scoring.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-scoring.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-scoring.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/slur-scoring.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur-scoring.cc:37:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from slur-scoring.cc:38:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
slur-scoring.cc:159:30: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
        ei.stem_ += stem_dir * 0.5 * Beam::get_beam_thickness (b);
                    ~~~~~~~~ ^ ~~~
slur-scoring.cc:316:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                        * (parameters_.encompass_object_range_overshoot_
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:340:24: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                       * extremes_[d].slur_head_->relative_coordinate (common_[Y_AXIS], Y_AXIS);
                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:494:52: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                        * std::max (std::max (dir_ * (base_attachments_[d][Y_AXIS]
                                              ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:496:60: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                              dir_ * (dir_ + nc_extent[dir_])),
                                                      ~~~~ ^ ~~~~~~~~~~~~~~~
slur-scoring.cc:496:52: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                              dir_ * (dir_ + nc_extent[dir_])),
                                              ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:497:42: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                                    dir_ * base_attachments_[-d][Y_AXIS]);
                                    ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:494:25: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const double' [-Wenum-float-conversion]
                        * std::max (std::max (dir_ * (base_attachments_[d][Y_AXIS]
                        ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:502:58: warning: arithmetic between floating-point type 'double' and enumeration type 'const Direction' [-Wenum-float-conversion]
          end_ys[d] = base_attachments_[d][Y_AXIS] + 0.3 * dir_;
                                                     ~~~ ^ ~~~~
slur-scoring.cc:552:21: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
          y += dir_ * 0.5 * staff_space_;
               ~~~~ ^ ~~~
slur-scoring.cc:571:40: warning: arithmetic between floating-point type 'double' and enumeration type 'const Direction' [-Wenum-float-conversion]
              .linear_combination (0.5 * dir_);
                                   ~~~ ^ ~~~~
slur-scoring.cc:600:25: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
              y += dir_ * 0.5 * staff_space_;
                   ~~~~ ^ ~~~
slur-scoring.cc:605:27: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                y -= dir_ * 1.5 * staff_space_;
                     ~~~~ ^ ~~~
slur-scoring.cc:651:29: warning: arithmetic between floating-point type 'double' and enumeration type 'const Direction' [-Wenum-float-conversion]
    y += 1.5 * staff_space_ * dir_ / 10;
         ~~~~~~~~~~~~~~~~~~ ^ ~~~~
slur-scoring.cc:669:39: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      Real y = dir_ * (std::max (dir_ * inf.head_, dir_ * inf.stem_));
                                 ~~~~ ^ ~~~~~~~~~
slur-scoring.cc:669:57: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      Real y = dir_ * (std::max (dir_ * inf.head_, dir_ * inf.stem_));
                                                   ~~~~ ^ ~~~~~~~~~
slur-scoring.cc:669:21: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const double' [-Wenum-float-conversion]
      Real y = dir_ * (std::max (dir_ * inf.head_, dir_ * inf.stem_));
               ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:671:49: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
      avoid.push_back (Offset (inf.x_, y + dir_ * parameters_.free_head_distance_));
                                           ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:686:29: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
          z[Y_AXIS] += dir_ * parameters_.free_slur_distance_;
                       ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:725:24: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  for (int i = 0; dir_ * os[LEFT][Y_AXIS] <= dir_ * end_ys[LEFT]; i++)
                  ~~~~ ^ ~~~~~~~~~~~~~~~~
slur-scoring.cc:725:51: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
  for (int i = 0; dir_ * os[LEFT][Y_AXIS] <= dir_ * end_ys[LEFT]; i++)
                                             ~~~~ ^ ~~~~~~~~~~~~
slur-scoring.cc:728:28: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      for (int j = 0; dir_ * os[RIGHT][Y_AXIS] <= dir_ * end_ys[RIGHT]; j++)
                      ~~~~ ^ ~~~~~~~~~~~~~~~~~
slur-scoring.cc:728:56: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
      for (int j = 0; dir_ * os[RIGHT][Y_AXIS] <= dir_ * end_ys[RIGHT]; j++)
                                                  ~~~~ ^ ~~~~~~~~~~~~~
slur-scoring.cc:744:43: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                                      - d * 0.3;
                                        ~ ^ ~~~
slur-scoring.cc:747:33: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                  else if (dir_ * extremes_[d].stem_extent_[Y_AXIS][dir_]
                           ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:748:35: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                           < dir_ * os[d][Y_AXIS]
                             ~~~~ ^ ~~~~~~~~~~~~~
slur-scoring.cc:782:27: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'double' [-Wenum-float-conversion]
                  -= dir_ * extremes_[d].slur_head_x_extent_.length ()
                     ~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur-scoring.cc:789:37: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
          os[RIGHT][Y_AXIS] += dir_ * staff_space_ / 2;
                               ~~~~ ^ ~~~~~~~~~~~~
slur-scoring.cc:792:32: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
      os[LEFT][Y_AXIS] += dir_ * staff_space_ / 2;
                          ~~~~ ^ ~~~~~~~~~~~~
slur-scoring.cc:829:45: warning: arithmetic between enumeration type 'const Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
              yext[dir_] = z[Y_AXIS] + dir_ * thickness_ * 1.0;
                                       ~~~~ ^ ~~~~~~~~~~
slur-scoring.cc:865:30: warning: arithmetic between floating-point type 'double' and enumeration type 'const Direction' [-Wenum-float-conversion]
                    xp = 0.5 * dir_;
                         ~~~ ^ ~~~~
12 warnings generated.
Making lily/out/source-file.o < cc
In file included from slur.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/slur.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/slur.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/slur.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/slur.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from smobs.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from smobs.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from smobs.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from smobs.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from slur.cc:35:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
slur.cc:107:66: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval d = encompasses[i]->pure_y_extent (parent, start, end);
                                   ~~~~~~~~~~~~~                 ^~~
slur.cc:107:59: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval d = encompasses[i]->pure_y_extent (parent, start, end);
                                   ~~~~~~~~~~~~~          ^~~~~
slur.cc:133:14: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
  ret += 0.5 * dir;
         ~~~ ^ ~~~
4 warnings generated.
slur.cc:172:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                    get_grob_direction (me) * base_thick,
                    ~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~
Making lily/out/sources.o < cc
slur.cc:268:31: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  return to_scm (offset + dir * slur->pure_y_extent (slur, start, end).length () / 4);
                          ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
slur.cc:268:67: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return to_scm (offset + dir * slur->pure_y_extent (slur, start, end).length () / 4);
                                      ~~~~~~~~~~~~~               ^~~
slur.cc:268:60: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return to_scm (offset + dir * slur->pure_y_extent (slur, start, end).length () / 4);
                                      ~~~~~~~~~~~~~        ^~~~~
slur.cc:331:88: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
          Real x = minmax (-d, xext[d], curve.control_[d == LEFT ? 0 : 3][X_AXIS] + -d * EPS);
                                                                                    ~~ ^ ~~~
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
source-file.cc:71:23: warning: implicit conversion changes signedness: 'const long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t read_count = real_size;
         ~~~~~~~~~~   ^~~~~~~~~
source-file.cc:126:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    data_ = gulp_file (filename_string, -1);
            ~~~~~~~~~                   ^~
source-file.cc:172:36: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
  string context = line.substr (0, offset);
                        ~~~~~~     ^~~~~~
source-file.cc:175:24: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
    context += string (col, ' ');
               ~~~~~~  ^~~
source-file.cc:176:52: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
  context += line.substr (offset, line.length () - offset);
                                                 ~ ^~~~~~
source-file.cc:176:27: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'std::basic_string<char>::size_type' (aka 'unsigned long') [-Wsign-conversion]
  context += line.substr (offset, line.length () - offset);
                  ~~~~~~  ^~~~~~
source-file.cc:218:56: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  return SourceSlice (begin_str0 - data_str0, end_str0 - data_str0);
         ~~~~~~~~~~~                          ~~~~~~~~~^~~~~~~~~~~
source-file.cc:218:34: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  return SourceSlice (begin_str0 - data_str0, end_str0 - data_str0);
         ~~~~~~~~~~~  ~~~~~~~~~~~^~~~~~~~~~~
source-file.cc:252:25: warning: implicit conversion changes signedness: 'long' to 'ssize' (aka 'unsigned long') [-Wsign-conversion]
  ssize left = pos_str0 - line_start;
        ~~~~   ~~~~~~~~~^~~~~~~~~~~~
source-file.cc:253:23: warning: implicit conversion changes signedness: 'ssize' (aka 'unsigned long') to 'ssize_t' (aka 'long') [-Wsign-conversion]
  *line_byte_offset = left;
                    ~ ^~~~
source-file.cc:299:17: warning: implicit conversion changes signedness: 'unsigned long' to 'ssize_t' (aka 'long') [-Wsign-conversion]
  return lo + 1 + line_offset_;
  ~~~~~~ ~~~~~~~^~~~~~~~~~~~~~
source-file.cc:299:19: warning: implicit conversion changes signedness: 'const ssize_t' (aka 'const long') to 'unsigned long' [-Wsign-conversion]
  return lo + 1 + line_offset_;
                ~ ^~~~~~~~~~~~
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:117:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const char *const *, std::vector<const char *>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
source-file.cc:294:14: note: in instantiation of function template specialization 'lower_bound<const char *, std::less<const char *>>' requested here
  vsize lo = lower_bound (newline_locations_,
             ^
In file included from source-file.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:116:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<const char *const *, std::vector<const char *>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = lower_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:121:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<const char *const *, vector<const char *>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
In file included from sources.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sources.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sources.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sources.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/source-file.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sources.cc:105:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from sources.cc:105:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-parser.hh:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
19 warnings generated.
Making lily/out/spaceable-grob.o < cc
39 warnings generated.
Making lily/out/spacing-basic.o < cc
8 warnings generated.
Making lily/out/spacing-determine-loose-columns.o < cc
In file included from spacing-basic.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
14 warnings generated.
Making lily/out/spacing-engraver.o < cc
In file included from spaceable-grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spaceable-grob.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spaceable-grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spaceable-grob.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spaceable-grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spaceable-grob.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spaceable-grob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spaceable-grob.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-basic.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-basic.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-basic.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-basic.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spaceable-grob.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from spacing-determine-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-determine-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-determine-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-determine-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-determine-loose-columns.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-options.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
spacing-basic.cc:90:27: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vsize col_idx = column->get_rank ();
        ~~~~~~~   ~~~~~~~~^~~~~~~~~~~
7 warnings generated.
Making lily/out/spacing-interface.o < cc
8 warnings generated.
Making lily/out/spacing-loose-columns.o < cc
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from spacing-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/spacing-options.o < cc
In file included from spacing-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-interface.hh:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-interface.hh:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-interface.hh:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-interface.hh:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-interface.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from spacing-options.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-options.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from spacing-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
spacing-interface.cc:217:30: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          || (last_grob && d * (ext[-d] - (*last_ext)[-d]) < 0))
                           ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from spacing-loose-columns.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
spacing-loose-columns.cc:109:29: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
              if (base_cols[j]->get_system () == which)
                  ~~~~~~~~~ ^
spacing-loose-columns.cc:110:65: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
                right = dynamic_cast<Paper_column *> (base_cols[j]);
                                                      ~~~~~~~~~ ^
In file included from spacing-options.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-options.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-options.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-options.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
7 warnings generated.
Making lily/out/spacing-spanner.o < cc
9 warnings generated.
Making lily/out/span-arpeggio-engraver.o < cc
8 warnings generated.
Making lily/out/span-bar-engraver.o < cc
In file included from spacing-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/span-bar-stub-engraver.o < cc
In file included from spacing-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spacing-spanner.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spacing-spanner.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
spacing-spanner.cc:60:76: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                                                      r_bound->get_rank () + 1);
                                                      ~~~~~~~~~~~~~~~~~~~~~^~~
spacing-spanner.cc:59:64: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return get_root_system (me)->used_columns_in_range (l_bound->get_rank (),
                               ~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~~^~~~~~~~~~~
spacing-spanner.cc:135:52: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
                  counts.insert (counts.begin () + j, 1);
                                                 ~ ^
spacing-spanner.cc:136:58: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Rational *, std::vector<Rational>>::difference_type' (aka 'long') [-Wsign-conversion]
                  durations.insert (durations.begin () + j, shortest_in_measure);
                                                       ~ ^
spacing-spanner.cc:442:61: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Item *next = sys->column (col->get_column ()->get_rank () + 1);
                    ~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from span-arpeggio-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from span-bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from span-bar-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from span-bar-stub-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-stub-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-stub-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-stub-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/align-interface.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from span-bar-stub-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from span-bar-stub-engraver.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
span-bar-stub-engraver.cc:128:21: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
          vsize j = Grob::get_vertical_axis_group_index (g);
                ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
8 warnings generated.
Making lily/out/spanner-break-forbid-engraver.o < cc
Making lily/out/spanner-scheme.o < cc
13 warnings generated.
Making lily/out/spanner.o < cc
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
In file included from spanner-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: 97:45: note: expanded from macro 'SCM_UNPACK'
note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26::10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
 note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'

#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-scheme.cc:#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h21:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23::
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44:120:44: note: expanded from macro 'scm_is_eq'
 note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note97: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note:: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:45: note: expanded from macro 'SCM_UNPACK'
 note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:
                                            ^
In file included from spanner-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/spanner.hh:23:
547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
:36:34: note                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120: expanded from macro 'scm_is_null'
:44: note: #define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:
45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note                                 ^: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h: expanded from macro 'scm_is_eq'
:120:#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))44: note: expanded from macro 'scm_is_eq'

                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: #define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
45:                                             ^
note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from spanner-break-forbid-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
9 warnings generated.
Making lily/out/spring-smob.o < cc
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
spanner.cc:312:30: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return orig->broken_intos_[j];
         ~~~~                ^
4 warnings generated.
Making lily/out/spring.o < cc
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Spanner **, std::vector<Spanner *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
spanner.cc:132:3: note: in instantiation of function template specialization 'vector_sort<Spanner *, bool (*)(Spanner *const &, Spanner *const &)>' requested here
  vector_sort (broken_intos_, Spanner::less);
  ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Spanner **, std::vector<Spanner *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:117:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Spanner *const *, std::vector<Spanner *>>::difference_type' (aka 'long') [-Wsign-conversion]
                                                           v.begin () + e,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:149:14: note: in instantiation of function template specialization 'lower_bound<Spanner *, bool (*)(Spanner *const &, Spanner *const &)>' requested here
  vsize lb = lower_bound (v, key, less, b, e);
             ^
spanner.cc:294:15: note: in instantiation of function template specialization 'binary_search<Spanner *, bool (*)(Spanner *const &, Spanner *const &)>' requested here
  vsize idx = binary_search (broken_intos_, (Spanner *) l, Spanner::less);
              ^
In file included from spanner.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:116:73: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Spanner *const *, std::vector<Spanner *>>::difference_type' (aka 'long') [-Wsign-conversion]
  typename std::vector<T>::const_iterator i = lower_bound (v.begin () + b,
                                                                      ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:121:12: warning: implicit conversion changes signedness: 'typename __normal_iterator<Spanner *const *, vector<Spanner *>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return i - v.begin ();
  ~~~~~~ ~~^~~~~~~~~~~~
In file included from spring-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring-smob.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/staff-collecting-engraver.o < cc
4 warnings generated.
Making lily/out/staff-grouper-interface.o < cc
In file included from spring.cc:37:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring.cc:37:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring.cc:37:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from spring.cc:37:
In file included from /<<PKGBUILDDIR>>/lily/include/spring.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/staff-performer.o < cc
In file included from staff-collecting-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-collecting-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-collecting-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-collecting-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-collecting-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from staff-collecting-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from staff-grouper-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-grouper-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-grouper-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-grouper-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-grouper-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-grouper-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-grouper-interface.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-grouper-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
13 warnings generated.
Making lily/out/staff-spacing.o < cc
staff-grouper-interface.cc:44:40: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
  for (vsize i = start; i != end; i += dir)
                                    ~~ ^~~
staff-grouper-interface.cc:73:76: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        && ((pure && !Hara_kiri_group_spanner::request_suicide (*i, start, end))
                      ~~~~~~~~~~~~~~~~~~~~~~~                              ^~~
staff-grouper-interface.cc:73:69: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
        && ((pure && !Hara_kiri_group_spanner::request_suicide (*i, start, end))
                      ~~~~~~~~~~~~~~~~~~~~~~~                       ^~~~~
In file included from staff-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from staff-performer.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/midi-cc-announcer.hh:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
Making lily/out/staff-symbol-engraver.o < cc
8 warnings generated.
Making lily/out/staff-symbol-referencer-scheme.o < cc
In file included from staff-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-spacing.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-spacing.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-spacing.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/staff-symbol-referencer.o < cc
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from staff-symbol-referencer-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer-scheme.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
8 warnings generated.
Making lily/out/staff-symbol.o < cc
Making lily/out/stanza-number-align-engraver.o < cc
In file included from staff-symbol-referencer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol-referencer.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol-referencer.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol-referencer.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol-referencer.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol-referencer.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/stanza-number-engraver.o < cc
5 warnings generated.
Making lily/out/stem-engraver.o < cc
In file included from stanza-number-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from staff-symbol.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/staff-symbol.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from staff-symbol.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from staff-symbol.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from stanza-number-align-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
staff-symbol.cc:85:27: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      span_points[d] -= d * t / 2;
                        ~ ^ ~
staff-symbol.cc:122:28: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
      vector<Real> values (line_count);
                   ~~~~~~  ^~~~~~~~~~
staff-symbol.cc:125:18: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          values[i] = height - i * 2;
          ~~~~~~ ^
staff-symbol.cc:204:49: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      ledger_fill.add_point (nearest_line + 0.5 * dir);
                                            ~~~ ^ ~~~
staff-symbol.cc:205:40: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      ledger_fill.add_point (pos + 0.5 * dir + ledger_extra * dir);
                                   ~~~ ^ ~~~
staff-symbol.cc:205:61: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      ledger_fill.add_point (pos + 0.5 * dir + ledger_extra * dir);
                                               ~~~~~~~~~~~~ ^ ~~~
staff-symbol.cc:257:22: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
      values.resize (ledger_count);
             ~~~~~~  ^~~~~~~~~~~~
staff-symbol.cc:260:18: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
          values[i] = nearest_line + dir * (ledger_count - i) * 2;
          ~~~~~~ ^
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from stanza-number-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from stem-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/stem-tremolo.o < cc
16 warnings generated.
Making lily/out/stem.o < cc
8 warnings generated.
Making lily/out/stencil-expression.o < cc
In file included from stem-tremolo.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stem-tremolo.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-tremolo.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stem-tremolo.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-tremolo.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stem-tremolo.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-tremolo.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stem-tremolo.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem-tremolo.cc:30:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
stem-tremolo.cc:71:22: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      return to_scm (dx ? dy / dx : 0);
                     ^~ ~
stem-tremolo.cc:161:46: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      b.translate_axis (beam_translation * i * dir * -1, Y_AXIS);
                        ~~~~~~~~~~~~~~~~~~~~ ^ ~~~
stem-tremolo.cc:324:82: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      return (ph - dir * std::max (beam_count, 1) * beam_translation)[dir] - dir * 0.5 * me->pure_y_extent (me, 0, INT_MAX).length ();
                                                                             ~~~ ^ ~~~
stem-tremolo.cc:338:22: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
        end_y -= dir * beam_translation * 0.5;
                 ~~~ ^ ~~~~~~~~~~~~~~~~
stem-tremolo.cc:356:35: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
          end_y = note_head + dir * 1.5;
                              ~~~ ^ ~~~
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-expression.cc8 warnings generated.
:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-expression.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-expression.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-expression.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/stencil-integral.o < cc
In file included from stem.cc:46:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from stem.cc:51:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from stem.cc:52:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
stem.cc:132:14: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  if (d && d * head_positions (me)[get_grob_direction (me)] >= se * d)
           ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
stem.cc:132:67: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  if (d && d * head_positions (me)[get_grob_direction (me)] >= se * d)
                                                               ~~ ^ ~
stem.cc:159:25: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                        * (0.5 * beam_thickness
                        ^ ~~~~~~~~~~~~~~~~~~~~~
stem.cc:172:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (fc)
  ~~  ^~
4 warnings generated.
Making lily/out/stencil-interpret.o < cc
stem.cc:333:39: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
        overshoot[d] = d == dir ? dir * infinity_f : iv[d];
                                  ~~~ ^ ~~~~~~~~~~
stem.cc:382:35: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
    overshoot[d] = d == dir ? dir * infinity_f : my_iv[d];
                              ~~~ ^ ~~~~~~~~~~
stem.cc:420:20: warning: arithmetic between enumeration type 'Direction' and floating-point type 'decltype(conv_scm_traits<double>::from(s))' (aka 'double') [-Wenum-float-conversion]
             + dir * from_scm<double> (get_property (me, "stem-begin-position"), 0.0);
               ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
stem.cc:438:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  if (dir && dir * hp[dir] >= 0)
             ~~~ ^ ~~~~~~~
stem.cc:498:39: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real stem_end = dir ? hp[dir] + dir * length : 0;
                                  ~~~ ^ ~~~~~~
stem.cc:502:25: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  if (!no_extend && dir * stem_end < 0)
                    ~~~ ^ ~~~~~~~~
stem.cc:615:73: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
              heads[i]->translate_axis ((ell - thick * reverse_overlap) * d,
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~
stem.cc:677:33: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      int udistance = (int) (UP * hp[UP] - staff_center);
                             ~~ ^ ~~~~~~
stem.cc:678:35: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      int ddistance = (int) (DOWN * hp[DOWN] - staff_center);
                             ~~~~ ^ ~~~~~~~~
stem.cc:716:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      return dir * Beam::get_beam_thickness (beam) * 0.5;
             ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
stem.cc:748:17: warning: arithmetic between enumeration type 'Direction' and floating-point type 'decltype(conv_scm_traits<double>::from(s))' (aka 'double') [-Wenum-float-conversion]
  Real y2 = dir * from_scm<double> ((calc_beam
            ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
stem.cc:831:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
        pos += d * y_attach * 2 / ss;
               ~ ^ ~~~~~~~~
stem.cc:901:17: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real y2 = dir * stem_length + y1;
            ~~~ ^ ~~~~~~~~~~~
stem.cc:950:57: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      Real real_attach = head_wid.linear_combination (d * attach);
                                                      ~ ^ ~~~~~~
stem.cc:955:11: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (attach && style != "mensural"
          ^~~~~~ ~~
stem.cc:960:19: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
          r += -d * rule_thick * 0.5;
               ~~ ^ ~~~~~~~~~~
stem.cc:1073:7: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      * my_dir * staff_space;
      ^ ~~~~~~
stem.cc:1120:11: warning: compound assignment of floating-point type 'Real' (aka 'double') from enumeration type 'Direction' [-Wenum-float-conversion]
  ideal_y *= my_dir;
  ~~~~~~~ ^  ~~~~~~
stem.cc:1122:31: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  Real shortest_y = minimum_y * my_dir;
                    ~~~~~~~~~ ^ ~~~~~~
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
stem.cc:271:3: note: in instantiation of function template specialization 'vector_sort<int, std::less<int>>' requested here
  vector_sort (ps, std::less<int> ());
  ^
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
stem.cc:528:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *const &, Grob *const &)>' requested here
  vector_sort (heads, position_less);
  ^
In file included from stem.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/stem.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from stencil-integral.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-integral.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-integral.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-integral.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/bezier.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/ly-scm-list.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-interpret.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil-interpret.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-interpret.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil-interpret.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-interpret.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil-interpret.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-interpret.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil-interpret.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-integral.cc:26:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
10 warnings generated.
Making lily/out/stencil-scheme.o < cc
4 warnings generated.
Making lily/out/stencil.o < cc
In file included from stencil-integral.cc:31:
/<<PKGBUILDDIR>>/lily/include/lazy-skyline-pair.hh:68:10: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (!thickness)
        ~^~~~~~~~~
stencil-integral.cc:217:52: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  bool rotated = (transform.get_yx () || transform.get_xy ());
                                      ~~ ~~~~~~~~~~^~~~~~~~~
stencil-integral.cc:217:29: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  bool rotated = (transform.get_yx () || transform.get_xy ());
                  ~~~~~~~~~~^~~~~~~~~ ~~
stencil-integral.cc:249:11: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (radius)
      ~~  ^~~~~~
stencil-integral.cc:269:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                    Offset inter (cx[h] + h * pt[X_AXIS],
                                          ~ ^ ~~~~~~~~~~
stencil-integral.cc:270:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                                  cy[v] + v * pt[Y_AXIS]);
                                          ~ ^ ~~~~~~~~~~
stencil-integral.cc:339:32: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  points.reserve (quantization + 1);
         ~~~~~~~  ~~~~~~~~~~~~~^~~
stencil-integral.cc:787:66: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                 : me->maybe_pure_extent (me, Y_AXIS, pure, beg, end);
                       ~~~~~~~~~~~~~~~~~                         ^~~
stencil-integral.cc:787:61: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
                 : me->maybe_pure_extent (me, Y_AXIS, pure, beg, end);
                       ~~~~~~~~~~~~~~~~~                    ^~~
stencil-integral.cc:901:85: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      y_pos.push_back (elts[i]->maybe_pure_coordinate (y_common, Y_AXIS, pure, beg, end));
                                ~~~~~~~~~~~~~~~~~~~~~                               ^~~
stencil-integral.cc:901:80: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      y_pos.push_back (elts[i]->maybe_pure_coordinate (y_common, Y_AXIS, pure, beg, end));
                                ~~~~~~~~~~~~~~~~~~~~~                          ^~~
stencil-integral.cc:904:71: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real my_y = me->maybe_pure_coordinate (y_common, Y_AXIS, pure, beg, end);
                  ~~~~~~~~~~~~~~~~~~~~~                               ^~~
stencil-integral.cc:904:66: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Real my_y = me->maybe_pure_coordinate (y_common, Y_AXIS, pure, beg, end);
                  ~~~~~~~~~~~~~~~~~~~~~                          ^~~
stencil-integral.cc:909:154: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Skyline_pair *skyp = unsmob<Skyline_pair> (get_maybe_pure_property (elts[i], a == X_AXIS ? "vertical-skylines" : "horizontal-skylines", pure, beg, end));
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:67: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^
stencil-integral.cc:909:149: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Skyline_pair *skyp = unsmob<Skyline_pair> (get_maybe_pure_property (elts[i], a == X_AXIS ? "vertical-skylines" : "horizontal-skylines", pure, beg, end));
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile-macros.hh:209:64: note: expanded from macro 'get_maybe_pure_property'
  (p)->internal_get_maybe_pure_property (ly_symbol2scm (w), x, y, z)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
In file included from stencil-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stencil-scheme.cc:22:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from stencil.cc:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from stencil.cc:24:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
stencil.cc:289:19: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
      offset += d * padding;
                ~ ^ ~~~~~~~
stencil.cc:382:9: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  if (d * next_extent [-d] < 0)
      ~ ^ ~~~~~~~~~~~~~~~~
stencil.cc:385:15: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  offset += d * padding;
            ~ ^ ~~~~~~~
stencil.cc:387:14: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
  if (offset * d < mindist)
      ~~~~~~ ^ ~
stencil.cc:388:16: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
    offset = d * mindist;
             ~ ^ ~~~~~~~
11 warnings generated.
Making lily/out/stream-event-scheme.o < cc
36 warnings generated.
Making lily/out/stream-event.o < cc
In file included from stream-event-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
5 warnings generated.
Making lily/out/sustain-pedal.o < cc
7 warnings generated.
Making lily/out/system-start-delimiter-engraver.o < cc
In file included from stream-event.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from stream-event.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from stream-event.cc:23:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from sustain-pedal.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sustain-pedal.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sustain-pedal.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sustain-pedal.cc:19:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from sustain-pedal.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
20 warnings generated.
Making lily/out/system-start-delimiter.o < cc
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from system-start-delimiter-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/system.o < cc
5 warnings generated.
Making lily/out/tab-note-heads-engraver.o < cc
In file included from system-start-delimiter.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system-start-delimiter.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system-start-delimiter.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system-start-delimiter.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system-start-delimiter.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/item.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/grob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from system-start-delimiter.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
system-start-delimiter.cc:173:44: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      b = fm->get_indexed_char_dimensions (cmp);
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~
In file included from system.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/all-font-metrics.hh:24:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tab-note-heads-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/tab-staff-symbol-engraver.o < cc
In file included from system.cc:31:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
system.cc:87:10: warning: implicit conversion changes signedness: 'typename iterator_traits<__normal_iterator<Grob *const *, vector<Grob *>>>::difference_type' (aka 'long') to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  return std::count_if (grobs.begin (), grobs.end (), is_spanner);
  ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
system.cc:325:55: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
      footnote_grobs.erase (footnote_grobs.begin () + i);
                                                    ~ ^
system.cc:404:80: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vector<Grob *> footnote_grobs = sys->get_footnote_grobs_in_range (sri[LEFT], sri[RIGHT]);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^~~~~~~~~~
system.cc:404:69: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  vector<Grob *> footnote_grobs = sys->get_footnote_grobs_in_range (sri[LEFT], sri[RIGHT]);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~
system.cc:463:45: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval iv (pure_y_extent (this, st, end));
                   ~~~~~~~~~~~~~            ^~~
system.cc:463:41: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
      Interval iv (pure_y_extent (this, st, end));
                   ~~~~~~~~~~~~~        ^~
system.cc:704:40: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  for (vsize i = left_col->get_rank () + 1; i < end_rank; ++i)
             ~   ~~~~~~~~~~~~~~~~~~~~~~^~~
system.cc:811:40: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
  for (vsize i = start; i != end; i += dir)
                                    ~~ ^~~
system.cc:943:58: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval begin = me->begin_of_line_pure_height (start, end);
                       ~~~~~~~~~~~~~~~~~~~~~~~~~         ^~~
system.cc:943:51: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval begin = me->begin_of_line_pure_height (start, end);
                       ~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~
system.cc:944:56: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval rest = me->rest_of_line_pure_height (start, end);
                      ~~~~~~~~~~~~~~~~~~~~~~~~         ^~~
system.cc:944:49: warning: implicit conversion changes signedness: 'int' to 'vsize' (aka 'unsigned long') [-Wsign-conversion]
  Interval rest = me->rest_of_line_pure_height (start, end);
                      ~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~
system.cc:962:27: warning: implicit conversion changes signedness: 'typename __normal_iterator<const unsigned long *, vector<unsigned long>>::difference_type' (aka 'long') to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
    return cols[indices[i - ranks.begin ()]];
                ~~~~~~~ ~~^~~~~~~~~~~~~~~~
7 warnings generated.
Making lily/out/tab-tie-follow-engraver.o < cc
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/column-x-positions.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
system.cc:405:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *, Grob *)>' requested here
  vector_sort (footnote_grobs, grob_2D_less);
  ^
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/column-x-positions.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Layer_entry *, std::vector<Layer_entry>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
system.cc:611:3: note: in instantiation of function template specialization 'vector_sort<Layer_entry, std::less<Layer_entry>>' requested here
  vector_sort (entries, std::less<Layer_entry> ());
  ^
In file included from system.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/system.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/column-x-positions.hh:23:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Layer_entry *, std::vector<Layer_entry>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tab-staff-symbol-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/template5.o < cc
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tab-tie-follow-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/tempo-performer.o < cc
In file included from template5.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from template5.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from template5.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from template5.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from template5.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/text-engraver.o < cc
8 warnings generated.
Making lily/out/text-interface.o < cc
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tempo-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from text-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from text-interface.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-interface.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-interface.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-interface.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/text-interface.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/stencil.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
In file included from text-interface.cc:26:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
Making lily/out/text-spanner-engraver.o < cc
In file included from text-interface.cc:31:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
text-interface.cc:239:26: warning: implicit conversion changes signedness: 'decltype(conv_scm_traits<int>::from(s))' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      size_t max_depth = from_scm (opt_depth, 1024);
             ~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~
26 warnings generated.
Making lily/out/tie-column.o < cc
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from text-spanner-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/tie-configuration.o < cc
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-column.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tie-column.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
7 warnings generated.
Making lily/out/tie-details.o < cc
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
tie-column.cc:91:3: note: in instantiation of function template specialization 'vector_sort<Grob *, bool (*)(Grob *, Grob *)>' requested here
  vector_sort (ties, Tie::less);
  ^
In file included from tie-column.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-column.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from tie-configuration.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-configuration.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-configuration.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-configuration.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/tie-engraver.o < cc
tie-configuration.cc:56:21: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  delta_y_ = - dir_ * center;
             ~~~~~~ ^ ~~~~~~
tie-configuration.cc:111:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (s)
  ~~  ^
tie-configuration.cc:145:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (s)
  ~~  ^
tie-configuration.cc:159:7: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  if (s)
  ~~  ^
In file included from tie-details.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-details.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-details.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-details.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
10 warnings generated.
Making lily/out/tie-formatting-problem.o < cc
4 warnings generated.
Making lily/out/tie-performer.o < cc
8 warnings generated.
Making lily/out/tie-specification.o < cc
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tie-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
tie-engraver.cc:200:57: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Head_event_tuple *, std::vector<Head_event_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
          heads_to_tie_.erase (heads_to_tie_.begin () + i);
                                                      ~ ^
tie-engraver.cc:249:61: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Head_event_tuple *, std::vector<Head_event_tuple>>::difference_type' (aka 'long') [-Wsign-conversion]
              heads_to_tie_.erase (heads_to_tie_.begin () + i);
                                                          ~ ^
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
In file included from tie-formatting-problem.cc:24:
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41:#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y)) warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]:97:45: note: expanded from macro 'SCM_UNPACK'

  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
                                            ^
In file included from tie-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tie-specification.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-specification.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-specification.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie-specification.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
In file included from tie-performer.cc:20#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
:
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45:In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10::61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
 note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44:/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
 note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from tie-formatting-problem.cc:39:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
tie-formatting-problem.cc:158:59: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
            stem_end_position = get_grob_direction (stem) * infinity_f;
                                ~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~
tie-formatting-problem.cc:203:35: warning: arithmetic between floating-point type 'const Real' (aka 'const double') and enumeration type 'Direction' [-Wenum-float-conversion]
          x_ext[dir] = infinity_f * dir;
                       ~~~~~~~~~~ ^ ~~~
tie-formatting-problem.cc:250:36: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
          y[updowndir] = updowndir * infinity_f;
                         ~~~~~~~~~ ^ ~~~~~~~~~~
tie-formatting-problem.cc:437:69: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  chord_outlines_[open_key].set_minimum_height (extremal - head_dir * 1.5);
                                                           ~~~~~~~~ ^ ~~~
tie-formatting-problem.cc:443:26: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
  return specifications_[i];
         ~~~~~~~~~~~~~~~ ^
tie-formatting-problem.cc:483:29: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
      conf->delta_y_ += dir * 0.25 * details_.staff_space_;
                        ~~~ ^ ~~~~
tie-formatting-problem.cc:494:17: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
          + dir * details_.outer_tie_vertical_gap_;
            ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:523:41: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                  conf->delta_y_ += dir *
                                    ~~~ ^
tie-formatting-problem.cc:533:60: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
              Real top_y = y + conf->delta_y_ + conf->dir_ * h;
                                                ~~~~~~~~~~ ^ ~
tie-formatting-problem.cc:543:55: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
                  Real new_y = (round_pos + clearance * conf->dir_) * 0.5 * details_.staff_space_;
                                            ~~~~~~~~~ ^ ~~~~~~~~~~
tie-formatting-problem.cc:558:50: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                                          + (dir * details_.intra_space_threshold_ * 0.25
                                             ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:584:31: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
            = d * std::min (d * conf->attachment_x_[d],
                            ~ ^ ~~~~~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:585:94: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
                            d * (get_stem_extent (conf->column_ranks_[d], d, X_AXIS)[-d] - d * details_.stem_gap_));
                                                                                           ~ ^ ~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:585:31: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
                            d * (get_stem_extent (conf->column_ranks_[d], d, X_AXIS)[-d] - d * details_.stem_gap_));
                            ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:584:17: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const double' [-Wenum-float-conversion]
            = d * std::min (d * conf->attachment_x_[d],
              ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tie-formatting-problem.cc:733:35: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
  Real top_y = tip_y + conf->dir_ * height;
                       ~~~~~~~~~~ ^ ~~~~~~
tie-formatting-problem.cc:925:29: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (!specifications_[i].manual_position_)
        ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
tie-formatting-problem.cc:1014:11: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
      if (span_diff && fabs (diff) <= 2)
          ^~~~~~~~~ ~~
4 warnings generated.
Making lily/out/tie.o < cc
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:38: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                                   ~ ^
tie-formatting-problem.cc:293:3: note: in instantiation of function template specialization 'vector_sort<int, std::less<int>>' requested here
  vector_sort (ranks, std::less<int> ());
  ^
In file included from tie-formatting-problem.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tie-formatting-problem.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/lily-guile.hh:47:
/<<PKGBUILDDIR>>/flower/include/std-vector.hh:165:22: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<int *, std::vector<int>>::difference_type' (aka 'long') [-Wsign-conversion]
  sort (v.begin () + b, v.begin () + e, less);
                   ~ ^
In file included from tie.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tie.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/tie.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/skyline.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
10 warnings generated.
Making lily/out/time-signature-engraver.o < cc
8 warnings generated.
Making lily/out/time-signature-performer.o < cc
In file included from tie.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from tie.cc:29:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tie.cc:30:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
tie.cc:274:45: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
                    get_grob_direction (me) * base_thick,
                    ~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from time-signature-performer.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/audio-item.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from time-signature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from time-signature-performer.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/performer.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
10 warnings generated.
Making lily/out/timing-translator.o < cc
8 warnings generated.
Making lily/out/transform-scheme.o < cc
8 warnings generated.
Making lily/out/transform.o < cc
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from timing-translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/timing-translator.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from transform-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform-scheme.cc:20:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/transform.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/transform.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/transform.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from transform.cc:40:
In file included from /<<PKGBUILDDIR>>/lily/include/transform.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
4 warnings generated.
Making lily/out/translator-ctors.o < cc
4 warnings generated.
Making lily/out/translator-dispatch-list.o < cc
8 warnings generated.
Making lily/out/translator-group-ctors.o < cc
In file included from translator-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from translator-ctors.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator-dispatch-list.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-dispatch-list.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
28 warnings generated.
Making lily/out/translator-group.o < cc
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator-group-ctors.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/score-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/translator-scheme.o < cc
8 warnings generated.
Making lily/out/translator.o < cc
8 warnings generated.
Making lily/out/trill-spanner-engraver.o < cc
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator-group.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/translator-group.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from translator-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator-scheme.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from translator-scheme.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from translator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from trill-spanner-engraver.cc:27:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
8 warnings generated.
Making lily/out/ttf.o < cc
8 warnings generated.
Making lily/out/tuplet-bracket.o < cc
8 warnings generated.
Making lily/out/tuplet-engraver.o < cc
In file included from ttf.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ttf.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ttf.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from ttf.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/freetype.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/tuplet-iterator.o < cc
In file included from ttf.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/open-type-font.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from tuplet-bracket.cc:46:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-bracket.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-bracket.cc:46:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-bracket.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-bracket.cc:46:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-bracket.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-bracket.cc:46:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-bracket.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-bracket.cc:53:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tuplet-bracket.cc:54:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
ttf.cc:157:41: warning: implicit conversion changes signedness: 'int' to 'FT_ULong' (aka 'unsigned long') [-Wsign-conversion]
          offset = ((p[0] << 8) | p[1]) << 1;
                 ~ ~~~~~~~~~~~~~~~~~~~~~^~~~
ttf.cc:210:23: warning: implicit conversion changes signedness: 'int' to 'std::vector::size_type' (aka 'unsigned long') [-Wsign-conversion]
      if (l >= chunks[cur_chunk_idx])
               ~~~~~~ ^~~~~~~~~~~~~
ttf.cc:280:22: warning: implicit conversion changes signedness: 'int' to 'FT_UInt' (aka 'unsigned int') [-Wsign-conversion]
  searchRange = 0x10 << entrySelector;
              ~ ~~~~~^~~~~~~~~~~~~~~~
ttf.cc:299:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      FT_ULong len = (lengths[i] + 3) & ~3;
                                      ~ ^~
ttf.cc:325:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        checksum += (q[0] << 24) | (q[1] << 16) | (q[2] << 8) | q[3];
                 ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
ttf.cc:351:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      offset += (lengths[i] + 3) & ~3;
                                 ~ ^~
ttf.cc:357:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    checksum += (q[0] << 24) | (q[1] << 16) | (q[2] << 8) | q[3];
             ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
ttf.cc:418:53: warning: implicit conversion changes signedness: 'int' to 'FT_UInt' (aka 'unsigned int') [-Wsign-conversion]
          FT_Error error = FT_Get_Glyph_Name (face, i, glyph_name,
                           ~~~~~~~~~~~~~~~~~        ^
ttf.cc:427:42: warning: implicit conversion changes signedness: 'int' to 'const std::map<unsigned int, unsigned long>::key_type' (aka 'const unsigned int') [-Wsign-conversion]
      if (!glyph_name[0] && ic_map.find (i) != ic_map.end ())
                                   ~~~~  ^
ttf.cc:429:35: warning: implicit conversion changes signedness: 'int' to 'std::map<unsigned int, unsigned long>::key_type' (aka 'unsigned int') [-Wsign-conversion]
          FT_ULong ucode = ic_map[i];
                           ~~~~~~ ^
ttf.cc:439:43: warning: implicit conversion changes signedness: 'int' to 'FT_ULong' (aka 'unsigned long') [-Wsign-conversion]
        get_glyph_index_name (glyph_name, i);
        ~~~~~~~~~~~~~~~~~~~~              ^
In file included from tuplet-bracket.cc:64:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
tuplet-bracket.cc:162:53: warning: implicit conversion changes signedness: 'Direction' to 'unsigned long' [-Wsign-conversion]
      vsize neighbor_idx = me->get_break_index () - break_dir;
                                                  ~ ^~~~~~~~~
tuplet-bracket.cc:227:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
            x_span[d] += d * overshoot[d];
                         ~ ^ ~~~~~~~~~~~~
tuplet-bracket.cc:301:35: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      mol.translate_axis (padding * dir, Y_AXIS);
                          ~~~~~~~ ^ ~~~
tuplet-bracket.cc:414:36: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
          scale_drul (&height, -ss * dir);
                               ~~~ ^ ~~~
tuplet-bracket.cc:688:18: warning: arithmetic between enumeration type 'Direction' and floating-point type 'const Real' (aka 'const double') [-Wenum-float-conversion]
  *offset = -dir * infinity_f;
            ~~~~ ^ ~~~~~~~~~~
tuplet-bracket.cc:695:29: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
      if (points[i][Y_AXIS] * dir > (*offset + tuplety) * dir)
          ~~~~~~~~~~~~~~~~~ ^ ~~~
tuplet-bracket.cc:695:57: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
      if (points[i][Y_AXIS] * dir > (*offset + tuplety) * dir)
                                    ~~~~~~~~~~~~~~~~~~~ ^ ~~~
tuplet-bracket.cc:699:59: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
  *offset += scm_to_double (get_property (me, "padding")) * dir;
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~
tuplet-bracket.cc:716:21: warning: compound assignment of floating-point type 'Real' (aka 'double') from enumeration type 'Direction' [-Wenum-float-conversion]
            *offset += dir;
            ~~~~~~~ ^  ~~~
tuplet-bracket.cc:782:36: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
        extremal_positions[d] = -d * (staff_extent[d] - extremal_positions[d]);
                                ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from tuplet-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/beam.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tuplet-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
tuplet-engraver.cc:130:47: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Tuplet_description *, std::vector<Tuplet_description>>::difference_type' (aka 'long') [-Wsign-conversion]
          tuplets_.erase (tuplets_.begin () + i);
                                            ~ ^
In file included from tuplet-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-iterator.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from tuplet-iterator.cc:22:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
8 warnings generated.
Making lily/out/tuplet-number.o < cc
16 warnings generated.
Making lily/out/tweak-engraver.o < cc
In file included from tuplet-number.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-number.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: 19 warnings generated.
expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-number.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-number.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-number.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-number.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tuplet-number.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/tuplet-number.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
Making lily/out/undead.o < cc
In file included from tuplet-number.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
9 warnings generated.
Making lily/out/unpure-pure-container.o < cc
tuplet-number.cc:200:112: warning: arithmetic between enumeration type 'Direction' and floating-point type 'Real' (aka 'double') [-Wenum-float-conversion]
        available_ext[d] = Axis_group_interface::generic_bound_extent (adj_cols[d], commonx, X_AXIS)[-d] + (-d * padding);
                                                                                                            ~~ ^ ~~~~~~~
tuplet-number.cc:248:16: warning: implicit conversion turns floating-point number into integer: 'Real' (aka 'double') to 'bool' [-Wfloat-conversion]
  Real slope = beam_dx ? beam_dy / beam_dx : 0.0;
               ^~~~~~~ ~
tuplet-number.cc:322:38: warning: arithmetic between floating-point type 'double' and enumeration type 'Direction' [-Wenum-float-conversion]
          cor[d] = overlap.length () * -d;
                   ~~~~~~~~~~~~~~~~~ ^ ~~
tuplet-number.cc:367:28: warning: arithmetic between enumeration type 'Direction' and floating-point type 'double' [-Wenum-float-conversion]
  y_offset += ref_stem_dir * (padding + num_height / 2.0);
              ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tuplet-number.cc:401:42: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
                        + line_thickness * ref_stem_dir;
                          ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~
tuplet-number.cc:447:88: warning: arithmetic between floating-point type 'Real' (aka 'double') and enumeration type 'Direction' [-Wenum-float-conversion]
    y_offset += colliding_acc_ext_y[ref_stem_dir] - num_ext_y[-ref_stem_dir] + padding * ref_stem_dir;
                                                                               ~~~~~~~ ^ ~~~~~~~~~~~~
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from tweak-engraver.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from undead.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from undead.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from undead.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from undead.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from unpure-pure-container.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/unpure-pure-container.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from unpure-pure-container.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/unpure-pure-container.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from unpure-pure-container.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/unpure-pure-container.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from unpure-pure-container.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/unpure-pure-container.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/vaticana-ligature-engraver.o < cc
4 warnings generated.
Making lily/out/vaticana-ligature.o < cc
13 warnings generated.
Making lily/out/vertical-align-engraver.o < cc
4 warnings generated.
Making lily/out/volta-bracket.o < cc
In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vaticana-ligature.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vaticana-ligature.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vaticana-ligature.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vaticana-ligature.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from vertical-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vertical-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vertical-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vertical-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: In file included from vaticana-ligature-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/gregorian-ligature-engraver.hh:22:
In file included from /<<PKGBUILDDIR>>/lily/include/coherent-ligature-engraver.hh:22consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: :
In file included from /<<PKGBUILDDIR>>/lily/include/ligature-engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:4426:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y)):

                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from vertical-align-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from vaticana-ligature-engraver.cc:22:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from vaticana-ligature.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from vaticana-ligature.cc:28:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from vertical-align-engraver.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from volta-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/font-metric.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/box.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
vertical-align-engraver.cc:174:46: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
                  arr.insert (arr.begin () + i, added);
                                           ~ ^
vertical-align-engraver.cc:184:46: warning: implicit conversion changes signedness: 'vsize' (aka 'unsigned long') to '__gnu_cxx::__normal_iterator<Grob **, std::vector<Grob *>>::difference_type' (aka 'long') [-Wsign-conversion]
                  arr.insert (arr.begin () + i + 1, added);
                                           ~ ^
In file included from volta-bracket.cc:21:
In file included from /<<PKGBUILDDIR>>/lily/include/font-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/font-metric.hh:31:42: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
static const size_t GLYPH_INDEX_INVALID (-1);
                    ~~~~~~~~~~~~~~~~~~~  ^~
In file included from volta-bracket.cc:23:
In file included from /<<PKGBUILDDIR>>/lily/include/paper-column.hh:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from volta-bracket.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
6 warnings generated.
Making lily/out/volta-engraver.o < cc
9 warnings generated.
Making lily/out/volta-repeat-iterator.o < cc
10 warnings generated.
Making lily/out/vowel-transition.o < cc
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/callback.hh:34:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-info.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
9 warnings generated.
Making lily/out/warn-scheme.o < cc
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from volta-engraver.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/engraver.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/translator.hh:29:
In file included from /<<PKGBUILDDIR>>/lily/include/stream-event.hh:26:
In file included from /<<PKGBUILDDIR>>/lily/include/prob.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/pitch.hh:25:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from volta-repeat-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-repeat-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-repeat-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-repeat-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from volta-repeat-iterator.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/music.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from vowel-transition.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vowel-transition.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vowel-transition.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vowel-transition.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vowel-transition.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vowel-transition.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vowel-transition.cc:20:
In file included from /<<PKGBUILDDIR>>/lily/include/vowel-transition.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/grob-interface.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from vowel-transition.cc:24:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from vowel-transition.cc:25:
In file included from /<<PKGBUILDDIR>>/lily/include/output-def.hh:26:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
7 warnings generated.
In file included from warn-scheme.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
Making lily/out/lexer.o < cc
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from warn-scheme.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from warn-scheme.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from warn-scheme.cc:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
8 warnings generated.
Making lily/out/parser.o < cc
8 warnings generated.
parser.yy:33:32: warning: unknown warning group '-Wuseless-cast', ignored [-Wunknown-warning-option]
#pragma GCC diagnostic ignored "-Wuseless-cast"
                               ^
4 warnings generated.
In file included from lexer.ll:55:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lexer.ll:55:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lexer.ll:55:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lexer.ll:55:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/acceptance-set.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from lexer.ll:55:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
In file included from lexer.ll:56:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
In file included from parser.yy:118:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parser.yy:118:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
      if (scm_is_eq (s, tortoise))
          ^~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:544:11: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parser.yy:118:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:26: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                         ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parser.yy:118:
In file included from /<<PKGBUILDDIR>>/lily/include/book.hh:27:
In file included from /<<PKGBUILDDIR>>/lily/include/smobs.hh:23:
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: warning: indirection of non-volatile null pointer will be deleted, not trap [-Wnull-dereference]
  return scm_is_null (s); // Don't admit dotted pairs
         ^~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^~~~~~~~
/<<PKGBUILDDIR>>/lily/include/lily-guile.hh:547:10: note: consider using __builtin_trap() or qualifying pointer with 'volatile'
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/pairs.h:36:34: note: expanded from macro 'scm_is_null'
#define scm_is_null(x)          (scm_is_eq ((x), SCM_EOL))
                                 ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:120:44: note: expanded from macro 'scm_is_eq'
#define scm_is_eq(x, y) (SCM_UNPACK (x) == SCM_UNPACK (y))
                                           ^
/<<PKGBUILDDIR>>/out/guile/usr/include/libguile/tags.h:97:45: note: expanded from macro 'SCM_UNPACK'
#   define SCM_UNPACK(x) ((scm_t_bits) (0? (*(SCM*)0=(x)): x))
                                            ^
In file included from parser.yy:119:
In file included from /<<PKGBUILDDIR>>/lily/include/context.hh:25:
In file included from /<<PKGBUILDDIR>>/lily/include/duration.hh:23:
In file included from /<<PKGBUILDDIR>>/lily/include/moment.hh:24:
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:41: warning: implicit conversion changes signedness: 'unsigned long long' to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                           ~~~~~~ ~~~~~~^~~~~~
/<<PKGBUILDDIR>>/flower/include/rational.hh:61:35: warning: implicit conversion changes signedness: 'const int' to 'unsigned long long' [-Wsign-conversion]
  I64 numerator () const { return sign_ * num_; }
                                  ^~~~~ ~
/<<PKGBUILDDIR>>/flower/include/rational.hh:62:37: warning: implicit conversion changes signedness: 'const U64' (aka 'const unsigned long long') to 'I64' (aka 'long long') [-Wsign-conversion]
  I64 denominator () const { return den_; }
                             ~~~~~~ ^~~~
lexer.ll:92:32: warning: unknown warning group '-Wuseless-cast', ignored [-Wunknown-warning-option]
#pragma GCC diagnostic ignored "-Wuseless-cast"
                               ^
In file included from parser.yy:120:
In file included from /<<PKGBUILDDIR>>/lily/include/context-def.hh:27:
/<<PKGBUILDDIR>>/lily/include/input.hh:43:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  size_t size () const { return end_ - start_; }
                         ~~~~~~ ~~~~~^~~~~~~~
parser.yy:3574:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                if (scm_to_double (yyvsp[0])) {
                ~~  ^~~~~~~~~~~~~~~~~~~~~~~~
9 warnings generated.
10 warnings generated.
Making lily/out/lilypond 
make[3]: Entering directory '/<<PKGBUILDDIR>>/flower'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/flower'
Making lily/out/lilypond.1 (help2man)
make[2]: Leaving directory '/<<PKGBUILDDIR>>/lily'
make[2]: Entering directory '/<<PKGBUILDDIR>>/mf'
Making mf/out/mf2pt1.mem < mp
Copying mf/out/00-lilypond-fonts.conf 
Copying mf/out/99-lilypond-fonts.conf 
Making mf/out/fonts.conf 
Making mf/out/feta11.pfb < mf
Making mf/out/feta-noteheads11.pfb < mf
Making mf/out/feta-flags11.pfb < mf
Making mf/out/feta-alphabet11.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan11.pfb < mf
Making mf/out/parmesan-noteheads11.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta13.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-noteheads13.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags13.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet13.pfb < mf
Making mf/out/parmesan13.pfb < mf
Making mf/out/parmesan-noteheads13.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta14.pfb < mf
Making mf/out/feta-noteheads14.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags14.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet14.pfb < mf
Making mf/out/parmesan14.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan-noteheads14.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta16.pfb < mf
Making mf/out/feta-noteheads16.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags16.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet16.pfb < mf
Making mf/out/parmesan16.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan-noteheads16.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta18.pfb < mf
Making mf/out/feta-noteheads18.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags18.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet18.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan18.pfb < mf
Making mf/out/parmesan-noteheads18.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta20.pfb < mf
Making mf/out/feta-noteheads20.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags20.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet20.pfb < mf
Making mf/out/parmesan20.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan-noteheads20.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta23.pfb < mf
Making mf/out/feta-noteheads23.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags23.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet23.pfb < mf
Making mf/out/parmesan23.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan-noteheads23.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta26.pfb < mf
Making mf/out/feta-noteheads26.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags26.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-alphabet26.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan26.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/parmesan-noteheads26.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-a.pfb < mf
Making mf/out/feta-braces-b.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-c.pfb < mf
Making mf/out/feta-braces-d.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-e.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-f.pfb < mf
Making mf/out/feta-braces-g.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-h.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-i.pfb < mf
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta11.lisp < log
Making mf/out/feta-noteheads11.lisp < log
Making mf/out/feta-flags11.lisp < log
Making mf/out/feta-alphabet11.lisp < log
Making mf/out/parmesan11.lisp < log
Making mf/out/parmesan-noteheads11.lisp < log
Making mf/out/feta13.lisp < log
Making mf/out/feta-noteheads13.lisp < log
Making mf/out/feta-flags13.lisp < log
Making mf/out/feta-alphabet13.lisp < log
Making mf/out/parmesan13.lisp < log
Making mf/out/parmesan-noteheads13.lisp < log
Making mf/out/feta14.lisp < log
Making mf/out/feta-noteheads14.lisp < log
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags14.lisp < log
Making mf/out/feta-alphabet14.lisp < log
Making mf/out/parmesan14.lisp < log
Making mf/out/parmesan-noteheads14.lisp < log
Making mf/out/feta16.lisp < log
Making mf/out/feta-noteheads16.lisp < log
Making mf/out/feta-flags16.lisp < log
Making mf/out/feta-alphabet16.lisp < log
Making mf/out/parmesan16.lisp < log
Making mf/out/parmesan-noteheads16.lisp < log
Making mf/out/feta18.lisp < log
Making mf/out/feta-noteheads18.lisp < log
Making mf/out/feta-flags18.lisp < log
Making mf/out/feta-alphabet18.lisp < log
Making mf/out/parmesan18.lisp < log
Making mf/out/parmesan-noteheads18.lisp < log
Making mf/out/feta20.lisp < log
Making mf/out/feta-noteheads20.lisp < log
Making mf/out/feta-flags20.lisp < log
Making mf/out/feta-alphabet20.lisp < log
Making mf/out/parmesan20.lisp < log
Making mf/out/parmesan-noteheads20.lisp < log
Making mf/out/feta23.lisp < log
Making mf/out/feta-noteheads23.lisp < log
Making mf/out/feta-flags23.lisp < log
Making mf/out/feta-alphabet23.lisp < log
Making mf/out/parmesan23.lisp < log
Making mf/out/parmesan-noteheads23.lisp < log
Making mf/out/feta26.lisp < log
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
Making mf/out/feta-noteheads26.lisp < log
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-flags26.lisp < log
Making mf/out/feta-alphabet26.lisp < log
Making mf/out/parmesan26.lisp < log
Making mf/out/parmesan-noteheads26.lisp < log
Making mf/out/feta-braces-a.lisp < log
Making mf/out/feta-braces-b.lisp < log
Making mf/out/feta-braces-c.lisp < log
Making mf/out/feta-braces-d.lisp < log
Making mf/out/feta-braces-e.lisp < log
Making mf/out/feta-braces-f.lisp < log
Making mf/out/feta-braces-g.lisp < log
Making mf/out/feta-braces-h.lisp < log
Making mf/out/emmentaler-11.svg 
Making mf/out/emmentaler-13.svg 
Making mf/out/emmentaler-14.svg 
Making mf/out/emmentaler-16.svg 
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/emmentaler-18.svg 
Making mf/out/emmentaler-20.svg 
Making mf/out/emmentaler-23.svg 
Making mf/out/emmentaler-26.svg 
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
Making mf/out/feta-braces-i.lisp < log
Making mf/out/emmentaler-brace.otf 
Copyright (c) 2000-2021. See AUTHORS for Contributors.
 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
 with many parts BSD <http://fontforge.org/license.html>. Please read LICENSE.
 Version: 20201107
 Based on sources from 2021-01-15 15:55 UTC-ML-D-GDK3.
PythonUI_Init()
copyUIMethodsToBaseTable()
make[3]: Entering directory '/<<PKGBUILDDIR>>'
Making out/share/lilypond/current/mf-link-tree 
make[3]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/mf'
make[2]: Entering directory '/<<PKGBUILDDIR>>/ly'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/ly'
make[2]: Entering directory '/<<PKGBUILDDIR>>/tex'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/tex'
make[2]: Entering directory '/<<PKGBUILDDIR>>/ps'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/ps'
make[2]: Entering directory '/<<PKGBUILDDIR>>/scm'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/scm'
make[2]: Entering directory '/<<PKGBUILDDIR>>/po'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/po'
make[2]: Entering directory '/<<PKGBUILDDIR>>/elisp'
Making elisp/out/lilypond-words.el 
make[2]: Leaving directory '/<<PKGBUILDDIR>>/elisp'
make[2]: Entering directory '/<<PKGBUILDDIR>>/vim'
Making vim/out/lilypond-words 
Making vim/out/lilypond-words.vim 
make[2]: Leaving directory '/<<PKGBUILDDIR>>/vim'
make[2]: Entering directory '/<<PKGBUILDDIR>>/input'
make[3]: Entering directory '/<<PKGBUILDDIR>>/input/regression'
make[4]: Entering directory '/<<PKGBUILDDIR>>/input/regression/midi'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/input/regression/midi'
make[4]: Entering directory '/<<PKGBUILDDIR>>/input/regression/musicxml'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/input/regression/musicxml'
make[4]: Entering directory '/<<PKGBUILDDIR>>/input/regression/abc2ly'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/input/regression/abc2ly'
make[4]: Entering directory '/<<PKGBUILDDIR>>/input/regression/lilypond-book'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/input/regression/lilypond-book'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/input/regression'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/input'
make[2]: Entering directory '/<<PKGBUILDDIR>>/Documentation'
Making Documentation/out/lilypond-changes.info < texi
Making Documentation/out/en/ROADMAP (copy)
Making Documentation/out/colorado.itexi < bib
Making Documentation/out/computer-notation.itexi < bib
Making Documentation/out/engravingbib.itexi < bib
Making Documentation/out/en/extending.texi < tely
Making Documentation/out/en/internals.texi 
Making Documentation/out/snippets/dep 
Making Documentation/out/en/music-glossary.texi < tely
Making Documentation/out/snippets/ancient-notation.itely 
Making Documentation/out/snippets/chords.itely 
Making Documentation/out/snippets/contexts-and-engravers.itely 
Making Documentation/out/snippets/editorial-annotations.itely 
Making Documentation/out/snippets/expressive-marks.itely 
Making Documentation/out/snippets/fretted-strings.itely 
Making Documentation/out/snippets/keyboards.itely 
Making Documentation/out/snippets/midi.itely 
Making Documentation/out/snippets/paper-and-layout.itely 
Making Documentation/out/snippets/percussion.itely 
Making Documentation/out/snippets/pitches.itely 
Making Documentation/out/snippets/repeats.itely 
Making Documentation/out/snippets/rhythms.itely 
Making Documentation/out/snippets/simultaneous-notes.itely 
Making Documentation/out/snippets/spacing.itely 
Making Documentation/out/snippets/staff-notation.itely 
Making Documentation/out/snippets/template.itely 
Making Documentation/out/snippets/text.itely 
Making Documentation/out/snippets/titles.itely 
Making Documentation/out/snippets/tweaks-and-overrides.itely 
Making Documentation/out/snippets/unfretted-strings.itely 
Making Documentation/out/snippets/vocal-music.itely 
Making Documentation/out/snippets/winds.itely 
Making Documentation/out/snippets/world-music.itely 
Making Documentation/out/we-wrote.itexi < bib
Making Documentation/out/others-did.itexi < bib
Making Documentation/out/en/contributor.texi (copy)
Making Documentation/out/en/essay.texi < tely
Making Documentation/out/lilypond-extending.info < texi
Making Documentation/out/en/learning.texi < tely
Making Documentation/out/en/usage.texi < tely
Making Documentation/out/music-glossary.info < texi
Making Documentation/out/en/snippets.texi < tely
Making Documentation/out/en/web.texi (sed)
Making Documentation/out/lilypond-contributor.info < texi
Making Documentation/out/lilypond-essay.info < texi
Making Documentation/out/lilypond-internals.info < texi
Making Documentation/out/lilypond-learning.info < texi
Making Documentation/out/en/notation.texi < tely
Making Documentation/out/lilypond-usage.info < texi
Making Documentation/out/lilypond-snippets.info < texi
Making Documentation/out/lilypond-web.info < texi
Making Documentation/out/lilypond-notation.info < texi
make[3]: Entering directory '/<<PKGBUILDDIR>>/Documentation/po'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/Documentation/po'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/Documentation'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   debian/rules execute_after_dh_auto_build-indep
make[1]: Entering directory '/<<PKGBUILDDIR>>'
/usr/bin/make -j4 CPU_COUNT=4 WEB_TARGETS="offline" doc
make[2]: Entering directory '/<<PKGBUILDDIR>>'
make[3]: Entering directory '/<<PKGBUILDDIR>>/Documentation/po'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/Documentation/po'
make[3]: Entering directory '/<<PKGBUILDDIR>>'
make[4]: Entering directory '/<<PKGBUILDDIR>>/python'
make[5]: Entering directory '/<<PKGBUILDDIR>>/python/auxiliar'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/python/auxiliar'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/python'
make[4]: Entering directory '/<<PKGBUILDDIR>>/scripts'
make[5]: Entering directory '/<<PKGBUILDDIR>>/scripts/build'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/scripts/build'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/scripts'
make[4]: Entering directory '/<<PKGBUILDDIR>>/flower'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/flower'
make[4]: Entering directory '/<<PKGBUILDDIR>>/lily'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/lily'
make[4]: Entering directory '/<<PKGBUILDDIR>>/mf'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/mf'
make[4]: Entering directory '/<<PKGBUILDDIR>>/ly'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/ly'
make[4]: Entering directory '/<<PKGBUILDDIR>>/tex'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/tex'
make[4]: Entering directory '/<<PKGBUILDDIR>>/ps'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/ps'
make[4]: Entering directory '/<<PKGBUILDDIR>>/scm'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/scm'
make[4]: Entering directory '/<<PKGBUILDDIR>>/po'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/po'
make[4]: Entering directory '/<<PKGBUILDDIR>>/elisp'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/elisp'
make[4]: Entering directory '/<<PKGBUILDDIR>>/vim'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/vim'
make[4]: Entering directory '/<<PKGBUILDDIR>>/input'
make[5]: Entering directory '/<<PKGBUILDDIR>>/input/regression'
Making input/regression/out-www/collated-files.list < 1414 files
Making input/regression/out-www/collated-files.tely 
Making input/regression/out-www/collated-files.texi < tely
Making input/regression/out-www/collated-files.pdf < texi
Making input/regression/out-www/collated-files.html < texi
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font FreeSerif as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font FreeSerif as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font FreeSerif as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font FreeSerif as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineOI as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineOB as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
GPL Ghostscript 9.54.0: Can't embed the complete font LinLibertineO as it is too large, embedding a subset.
make[6]: Entering directory '/<<PKGBUILDDIR>>/input/regression/midi'
Making input/regression/midi/out-www/crescendo-gap-compatible-target.midi < ly
Making input/regression/midi/out-www/crescendo-return-crescendo.midi < ly
Making input/regression/midi/out-www/crescendo-return-louder-target.midi < ly
Making input/regression/midi/out-www/crescendo-return-softer-target.midi < ly
Making input/regression/midi/out-www/crescendo-return-unspecified-target.midi < ly
Making input/regression/midi/out-www/crescendo-single-compatible-target.midi < ly
Making input/regression/midi/out-www/crescendo-single-unspecified-target.midi < ly
Making input/regression/midi/out-www/decrescendo-multiple-compatible-target.midi < ly
Making input/regression/midi/out-www/decrescendo-single-contrary-target.midi < ly
Making input/regression/midi/out-www/dynamic-initial.midi < ly
Making input/regression/midi/out-www/dynamic-voices-sequential.midi < ly
Making input/regression/midi/out-www/dynamic-voices-simultaneous.midi < ly
Making input/regression/midi/out-www/key-initial.midi < ly
Making input/regression/midi/out-www/key-option-all-staves.midi < ly
Making input/regression/midi/out-www/key-option.midi < ly
Making input/regression/midi/out-www/lyric-combine-switch-voice.midi < ly
Making input/regression/midi/out-www/lyrics-addlyrics.midi < ly
Making input/regression/midi/out-www/midi-overlapping-notes.midi < ly
Making input/regression/midi/out-www/partcombine.midi < ly
Making input/regression/midi/out-www/quantize-duration-2.midi < ly
Making input/regression/midi/out-www/quantize-duration.midi < ly
Making input/regression/midi/out-www/quantize-start.midi < ly
Making input/regression/midi/out-www/rest-dynamic.midi < ly
Making input/regression/midi/out-www/rest.midi < ly
Making input/regression/midi/out-www/sequence-name-scoping.midi < ly
Making input/regression/midi/out-www/sequence-name.midi < ly
Making input/regression/midi/out-www/spacer-no-notes.midi < ly
Making input/regression/midi/out-www/staff-map-instrument.midi < ly
Making input/regression/midi/out-www/staff-map-voice.midi < ly
Making input/regression/midi/out-www/voice-2.midi < ly

Please check the logfile

  /<<PKGBUILDDIR>>/input/regression/midi/./out-www/sequence-name.buildlog

for errors. Last 20 lines:

Command: /<<PKGBUILDDIR>>/out/bin/lilypond -H texidoc -H options -o ./out-www sequence-name.ly

Changing working directory to: `./out-www'
Processing `sequence-name.ly'
Parsing...
Interpreting music...
Preprocessing graphical objects...
Interpreting music...
Interpreting music...
Preprocessing graphical objects...
Interpreting music...
Interpreting music.../<<PKGBUILDDIR>>/out/share/lilypond/current/scm/translation-functions.scm:771:11: In procedure ly:moment-main-numerator in expression (ly:moment-main-numerator mp):
/<<PKGBUILDDIR>>/out/share/lilypond/current/scm/translation-functions.scm:771:11: Wrong type argument in position 1 (expecting Moment): #<freed cell 0x7fda74d0b520; GC missed a reference>
make[6]: *** [GNUmakefile:29: out-www/sequence-name.midi] Error 1
make[6]: *** Waiting for unfinished jobs....
make[6]: Leaving directory '/<<PKGBUILDDIR>>/input/regression/midi'
make[5]: *** [/<<PKGBUILDDIR>>/stepmake/stepmake/generic-targets.make:150: WWW] Error 2
make[5]: Leaving directory '/<<PKGBUILDDIR>>/input/regression'
make[4]: *** [/<<PKGBUILDDIR>>/stepmake/stepmake/generic-targets.make:150: WWW] Error 2
make[4]: Leaving directory '/<<PKGBUILDDIR>>/input'
make[3]: *** [/<<PKGBUILDDIR>>/stepmake/stepmake/generic-targets.make:150: WWW] Error 2
make[3]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: *** [/<<PKGBUILDDIR>>/stepmake/stepmake/generic-targets.make:155: doc] Error 2
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[1]: *** [debian/rules:111: execute_after_dh_auto_build-indep] Error 2
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
make: *** [debian/rules:98: binary] Error 2
dpkg-buildpackage: error: debian/rules binary subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T18:44:49Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 773944
Build-Time: 543
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 210
Job: lilypond_2.22.1-2
Machine Architecture: amd64
Package: lilypond
Package-Time: 776
Source-Version: 2.22.1-2
Space: 773944
Status: attempted
Version: 2.22.1-2
--------------------------------------------------------------------------------
Finished at 2021-10-26T18:44:49Z
Build needed 00:12:56, 773944k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 778.754121127s
DC-Time-Estimation: 778.754121127 versus expected 6798 (r/m: 7.729327801388772 ; m: 778.754121127)
