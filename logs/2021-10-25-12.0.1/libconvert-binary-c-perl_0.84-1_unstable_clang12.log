DC-Build-Header: libconvert-binary-c-perl 0.84-1 / 2021-10-26 23:04:35 +0000
DC-Task: type:rebuild-binarch-only source:libconvert-binary-c-perl version:0.84-1 chroot:unstable esttime:65 logfile:/tmp/libconvert-binary-c-perl_0.84-1_unstable_clang12.log modes:clang12:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang12 libconvert-binary-c-perl_0.84-1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-13-1.eu-central-1.compute.internal

+==============================================================================+
| libconvert-binary-c-perl 0.84-1 (amd64)      Tue, 26 Oct 2021 23:04:35 +0000 |
+==============================================================================+

Package: libconvert-binary-c-perl
Version: 0.84-1
Source Version: 0.84-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-b188c2d6-ede3-4bd5-b288-0b34032110d8' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang12
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=12
+ echo 'Install of clang-12'
Install of clang-12
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6586 kB]
Fetched 6981 kB in 3s (2781 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-12 libomp-12-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-12-dev
  libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1 libgcc-9-dev libicu67
  libllvm12 libmd0 libobjc-11-dev libobjc4 libomp5-12 libunwind-12 libxml2
  libz3-4 llvm-12-linker-tools
Suggested packages:
  clang-12-doc libomp-12-doc
Recommended packages:
  llvm-12-dev python3
The following NEW packages will be installed:
  clang-12 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-12-dev libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1
  libgcc-9-dev libicu67 libllvm12 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-12-dev libomp5-12 libunwind-12 libxml2 libz3-4 llvm-12-linker-tools
0 upgraded, 25 newly installed, 0 to remove and 0 not upgraded.
Need to get 67.6 MB of archives.
After this operation, 349 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm12 amd64 1:12.0.1-15 [19.4 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp12 amd64 1:12.0.1-15 [9996 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-12-dev amd64 1:12.0.1-15 [4819 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 llvm-12-linker-tools amd64 1:12.0.1-15 [1222 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang1-12 amd64 1:12.0.1-15 [5644 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-12 amd64 1:12.0.1-15 [117 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libunwind-12 amd64 1:12.0.1-15 [63.9 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libomp5-12 amd64 1:12.0.1-15 [405 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libomp-12-dev amd64 1:12.0.1-15 [104 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 67.6 MB in 0s (136 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm12:amd64.
Preparing to unpack .../06-libllvm12_1%3a12.0.1-15_amd64.deb ...
Unpacking libllvm12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libclang-cpp12.
Preparing to unpack .../07-libclang-cpp12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-cpp12 (1:12.0.1-15) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-12-dev.
Preparing to unpack .../14-libclang-common-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-common-12-dev (1:12.0.1-15) ...
Selecting previously unselected package llvm-12-linker-tools.
Preparing to unpack .../15-llvm-12-linker-tools_1%3a12.0.1-15_amd64.deb ...
Unpacking llvm-12-linker-tools (1:12.0.1-15) ...
Selecting previously unselected package libclang1-12.
Preparing to unpack .../16-libclang1-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang1-12 (1:12.0.1-15) ...
Selecting previously unselected package clang-12.
Preparing to unpack .../17-clang-12_1%3a12.0.1-15_amd64.deb ...
Unpacking clang-12 (1:12.0.1-15) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../18-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../19-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../20-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../21-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libunwind-12:amd64.
Preparing to unpack .../22-libunwind-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libunwind-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp5-12:amd64.
Preparing to unpack .../23-libomp5-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp5-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp-12-dev.
Preparing to unpack .../24-libomp-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp-12-dev (1:12.0.1-15) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libunwind-12:amd64 (1:12.0.1-15) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm12:amd64 (1:12.0.1-15) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-12-dev (1:12.0.1-15) ...
Setting up libomp5-12:amd64 (1:12.0.1-15) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up llvm-12-linker-tools (1:12.0.1-15) ...
Setting up libclang1-12 (1:12.0.1-15) ...
Setting up libclang-cpp12 (1:12.0.1-15) ...
Setting up libomp-12-dev (1:12.0.1-15) ...
Setting up clang-12 (1:12.0.1-15) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-12 g++-4.6
+ ln -s clang-12 gcc-4.6
+ ln -s clang-12 cpp-4.6
+ ln -s clang-12 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-12 g++-4.7
+ ln -s clang-12 gcc-4.7
+ ln -s clang-12 cpp-4.7
+ ln -s clang-12 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-12 g++-4.8
+ ln -s clang-12 gcc-4.8
+ ln -s clang-12 cpp-4.8
+ ln -s clang-12 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-12 g++-4.9
+ ln -s clang-12 gcc-4.9
+ ln -s clang-12 cpp-4.9
+ ln -s clang-12 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-12 g++-5
+ ln -s clang-12 gcc-5
+ ln -s clang-12 cpp-5
+ ln -s clang-12 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-12 g++-6
+ ln -s clang-12 gcc-6
+ ln -s clang-12 cpp-6
+ ln -s clang-12 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-12 g++-7
+ ln -s clang-12 gcc-7
+ ln -s clang-12 cpp-7
+ ln -s clang-12 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-12 g++-8
+ ln -s clang-12 gcc-8
+ ln -s clang-12 cpp-8
+ ln -s clang-12 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-12 g++-9
+ ln -s clang-12 gcc-9
+ ln -s clang-12 cpp-9
+ ln -s clang-12 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-12 g++-10
+ ln -s clang-12 gcc-10
+ ln -s clang-12 cpp-10
+ ln -s clang-12 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-12 g++-11
+ ln -s clang-12 gcc-11
+ ln -s clang-12 cpp-11
+ ln -s clang-12 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/libconvert-binary-c-perl-bVkzo0
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-12 clang++
+ ln -s clang-12 clang
+ clang++ --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/libconvert-binary-c-perl-bVkzo0
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (56.6 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13527 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 23:04 .
drwxr-xr-x 76 root root 4096 Oct 26 23:04 ..
-rw-r--r--  1 root root  276 Oct 26 23:04 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 23:04 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang12'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-bVkzo0/resolver-v7B1cI' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libconvert-binary-c-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 1357 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (dsc) [2645 B]
Get:2 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (tar) [1349 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (diff) [6124 B]
Fetched 1357 kB in 0s (16.4 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-bVkzo0/libconvert-binary-c-perl-0.84' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-bVkzo0' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl, libtest-pod-perl, libtie-hash-indexed-perl, libtie-ixhash-perl, perl-xs-dev, perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl, libtest-pod-perl, libtie-hash-indexed-perl, libtie-ixhash-perl, perl-xs-dev, perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [426 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [498 B]
Fetched 1881 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl
  libdevel-symdump-perl libfile-stripnondeterminism-perl libmagic-mgc
  libmagic1 libperl-dev libpipeline1 libpod-coverage-perl libpod-parser-perl
  libsigsegv2 libsub-override-perl libtest-pod-coverage-perl libtest-pod-perl
  libtie-hash-indexed-perl libtie-ixhash-perl libtool libuchardet0 m4 man-db
  po-debconf sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc dh-make gettext-doc
  libasprintf-dev libgettextpo-dev groff libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc apparmor less www-browser
  libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl
  libdevel-symdump-perl libfile-stripnondeterminism-perl libmagic-mgc
  libmagic1 libperl-dev libpipeline1 libpod-coverage-perl libpod-parser-perl
  libsigsegv2 libsub-override-perl libtest-pod-coverage-perl libtest-pod-perl
  libtie-hash-indexed-perl libtie-ixhash-perl libtool libuchardet0 m4 man-db
  po-debconf sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 37 newly installed, 0 to remove and 0 not upgraded.
Need to get 10.1 MB of archives.
After this operation, 36.5 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [920 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libdevel-symdump-perl all 2.18-4 [17.5 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 libperl-dev amd64 5.32.1-6 [1072 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 libpod-parser-perl all 1.63-2 [96.1 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 libpod-coverage-perl all 0.23-2 [22.1 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 libtest-pod-coverage-perl all 1.10-2 [14.5 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libtest-pod-perl all 1.52-1 [14.2 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libtie-hash-indexed-perl amd64 0.08+ds1-1 [21.2 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 libtie-ixhash-perl all 1.23-2.1 [11.8 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 10.1 MB in 0s (90.4 MB/s)
Selecting previously unselected package bsdextrautils.
(Reading database ... 14272 files and directories currently installed.)
Preparing to unpack .../00-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../17-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../18-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../23-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../24-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../25-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../26-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../27-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package libdevel-symdump-perl.
Preparing to unpack .../28-libdevel-symdump-perl_2.18-4_all.deb ...
Unpacking libdevel-symdump-perl (2.18-4) ...
Selecting previously unselected package libperl-dev:amd64.
Preparing to unpack .../29-libperl-dev_5.32.1-6_amd64.deb ...
Unpacking libperl-dev:amd64 (5.32.1-6) ...
Selecting previously unselected package libpod-parser-perl.
Preparing to unpack .../30-libpod-parser-perl_1.63-2_all.deb ...
Adding 'diversion of /usr/bin/podselect to /usr/bin/podselect.bundled by libpod-parser-perl'
Adding 'diversion of /usr/share/man/man1/podselect.1.gz to /usr/share/man/man1/podselect.bundled.1.gz by libpod-parser-perl'
Unpacking libpod-parser-perl (1.63-2) ...
Selecting previously unselected package libpod-coverage-perl.
Preparing to unpack .../31-libpod-coverage-perl_0.23-2_all.deb ...
Unpacking libpod-coverage-perl (0.23-2) ...
Selecting previously unselected package libtest-pod-coverage-perl.
Preparing to unpack .../32-libtest-pod-coverage-perl_1.10-2_all.deb ...
Unpacking libtest-pod-coverage-perl (1.10-2) ...
Selecting previously unselected package libtest-pod-perl.
Preparing to unpack .../33-libtest-pod-perl_1.52-1_all.deb ...
Unpacking libtest-pod-perl (1.52-1) ...
Selecting previously unselected package libtie-hash-indexed-perl:amd64.
Preparing to unpack .../34-libtie-hash-indexed-perl_0.08+ds1-1_amd64.deb ...
Unpacking libtie-hash-indexed-perl:amd64 (0.08+ds1-1) ...
Selecting previously unselected package libtie-ixhash-perl.
Preparing to unpack .../35-libtie-ixhash-perl_1.23-2.1_all.deb ...
Unpacking libtie-ixhash-perl (1.23-2.1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../36-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up libtie-ixhash-perl (1.23-2.1) ...
Setting up libtie-hash-indexed-perl:amd64 (0.08+ds1-1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libtest-pod-perl (1.52-1) ...
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up gettext-base (0.21-4) ...
Setting up libperl-dev:amd64 (5.32.1-6) ...
Setting up file (1:5.39-3) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up libpod-parser-perl (1.63-2) ...
Setting up autopoint (0.21-4) ...
Setting up dwz (0.14-1) ...
Setting up sensible-utils (0.0.17) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libdevel-symdump-perl (2.18-4) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up gettext (0.21-4) ...
Setting up libtool (2.4.6-15) ...
Setting up libpod-coverage-perl (0.23-2) ...
Setting up m4 (1.4.18-5) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up autoconf (2.71-2) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up groff-base (1.22.4-7) ...
Setting up libtest-pod-coverage-perl (1.10-2) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up po-debconf (1.0.21+nmu1) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up dh-autoreconf (20) ...
Setting up debhelper (13.5.2) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.32-4) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-12_1:12.0.1-15 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 gpgv_2.2.27-2 grep_3.7-1 groff-base_1.22.4-7 gzip_1.10-4 hostname_3.23 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libasan5_9.4.0-3 libasan6_11.2.0-10 libatomic1_11.2.0-10 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libbinutils_2.37-7 libblkid1_2.37.2-4 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-12-dev_1:12.0.1-15 libclang-cpp12_1:12.0.1-15 libclang1-12_1:12.0.1-15 libcom-err2_1.46.4-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libctf-nobfd0_2.37-7 libctf0_2.37-7 libdb5.3_5.3.28+dfsg1-0.8 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdevel-symdump-perl_2.18-4 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi8_3.4.2-3 libfile-stripnondeterminism-perl_1.12.0-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgmp10_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgssapi-krb5-2_1.18.3-7 libhogweed6_3.7.3-1 libicu67_67.1-7 libidn2-0_2.3.2-2 libisl23_0.24-2 libitm1_11.2.0-10 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 libllvm12_1:12.0.1-15 liblsan0_11.2.0-10 liblz4-1_1.9.3-2 liblzma5_5.2.5-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmd0_1.0.4-1 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpfr6_4.1.0-3 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libomp-12-dev_1:12.0.1-15 libomp5-12_1:12.0.1-15 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam0g_1.4.0-10 libpcre2-8-0_10.36-2 libpcre3_2:8.39-13 libperl-dev_5.32.1-6 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libpod-coverage-perl_0.23-2 libpod-parser-perl_1.63-2 libquadmath0_11.2.0-10 libseccomp2_2.5.2-2 libselinux1_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsigsegv2_2.13-1 libsmartcols1_2.37.2-4 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libtest-pod-coverage-perl_1.10-2 libtest-pod-perl_1.52-1 libtie-hash-indexed-perl_0.08+ds1-1 libtie-ixhash-perl_1.23-2.1 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunistring2_0.9.10-6 libunwind-12_1:12.0.1-15 libuuid1_2.37.2-4 libxml2_2.9.12+dfsg-5 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 linux-libc-dev_5.14.12-1 llvm-12-linker-tools_1:12.0.1-15 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 po-debconf_1.0.21+nmu1 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 rpcsvc-proto_1.4.2-4 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sysvinit-utils_3.00-1 tar_1.34+dfsg-1 tzdata_2021e-1 util-linux_2.37.2-4 xz-utils_5.2.5-2 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: libconvert-binary-c-perl
Binary: libconvert-binary-c-perl
Architecture: any
Version: 0.84-1
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Charles Plessy <plessy@debian.org>, gregor herrmann <gregoa@debian.org>, Dominic Hargreaves <dom@earth.li>
Homepage: https://metacpan.org/release/Convert-Binary-C
Standards-Version: 4.5.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl <!nocheck>, libtest-pod-perl <!nocheck>, libtie-hash-indexed-perl <!nocheck>, libtie-ixhash-perl <!nocheck>, perl-xs-dev, perl:native
Package-List:
 libconvert-binary-c-perl deb perl optional arch=any
Checksums-Sha1:
 e6399c06ccc953c2a34cc5b3294ad1bd8a45b270 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 42d5a8c2c82e610b13a998582b8da33ae7a80af8 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Checksums-Sha256:
 a99ce7a8e60b8c6fe1cf73f290e423bd206e8721e3588ed125eebf7c39be3fb0 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 f90ce5d22adb757aa2a7480d1480225b3267122388f5d6a5e4b466f784cf40a6 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Files:
 0b7eab3beb5195db35711f6d344c6a5f 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 39c646801c3a3cd1d5fb179e78ff0568 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Dgit: 541875f9203fa956df208c959f321c38ee53c9d7 debian archive/debian/0.84-1 https://git.dgit.debian.org/libconvert-binary-c-perl

-----BEGIN PGP SIGNATURE-----

iQKTBAEBCgB9FiEE0eExbpOnYKgQTYX6uzpoAYZJqgYFAl+9O0RfFIAAAAAALgAo
aXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldEQx
RTEzMTZFOTNBNzYwQTgxMDREODVGQUJCM0E2ODAxODY0OUFBMDYACgkQuzpoAYZJ
qgZcsxAAq5hR3gs6jvQ+Q4mdN8jliWjqLywSqItSWxOW2w8ziUfCUYGqpi8J3pYp
yY8YJV0EM/p0ym+yevwt1QmKtszwc8zT2lJR0BcjwTPnK4N9Myi8x4XgBZyDtgki
yePJaH8mr8izIQdCyjvytsOYKI8bjnZZaTYhrttfeGyWHGlvZkfy5IojMdGG3LgQ
lSaVqCJ3KdBI3uuxTMPk/HQ4wX736kO2h5QZAyk3Gb9g142t/kGV7V+XGeYqCwnC
452sZ4siVN+Jq4zXsoBrUfv2hw3F7X7NfhDgg/cuqNTXEIQC56GbY4Glq4GKRZfj
uzbQBgfCZVtTDjIRHs8GuLfVG2Hj15S4agN/rEdzdPl0awoZoOhEoosBGwygD9lu
MIoIOCgT0Q6cd7n8X58UD4dGuNoBPZhUPelV/Ejgh1lT3tah4cjguQ1dE/qUXmMr
DZc+ZMbZUDLoLAMejPHots8WyAZRtd3yC2lEaFzSHUECnKt73HqufGROtalwY8GD
qVIqvNMdBWwhestO1fOxZx4LZAWHWxQFa3GJOVXQiUfpA1poR91XpAWjkSPCmDoN
O6PK2maX9wXxIMs7NMUrz6aN+2HJ2IAuiHsvEeEC0rha7Qx5TV79fENqXFoMw0eK
MypbvmYX1gJ+moAmfYsZLYkWINROCiBNuZ4GjeLUNJ9DkUqfPNc=
=hwfo
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.1063L8Mg/trustedkeys.kbx': General error
gpgv: Signature made Tue Nov 24 16:56:36 2020 UTC
gpgv:                using RSA key D1E1316E93A760A8104D85FABB3A68018649AA06
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libconvert-binary-c-perl_0.84-1.dsc
dpkg-source: info: extracting libconvert-binary-c-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libconvert-binary-c-perl_0.84.orig.tar.gz
dpkg-source: info: unpacking libconvert-binary-c-perl_0.84-1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-b188c2d6-ede3-4bd5-b288-0b34032110d8
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libconvert-binary-c-perl
dpkg-buildpackage: info: source version 0.84-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by gregor herrmann <gregoa@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
# don't hide compiler flags
CBC_MAKEFILE_DEBUG=1 dh_auto_configure
	/usr/bin/perl Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now"
Checking if your kit is complete...
Looks good
Building with feature 'ieeefp'
Finding dependencies...
Generating a Unix-style Makefile
Writing Makefile for Convert::Binary::C
Writing MYMETA.yml and MYMETA.json
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Running Mkbootstrap for C ()
"/usr/bin/perl" "/usr/share/perl/5.32/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.32/ExtUtils/typemap' -typemap '/<<PKGBUILDDIR>>/typemap'  C.xs > C.xsc
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/fileinfo.c
chmod 644 "C.bs"
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP util/hash.c
cp lib/Convert/Binary/C.pm blib/lib/Convert/Binary/C.pm
cp lib/Convert/Binary/C/Cached.pm blib/lib/Convert/Binary/C/Cached.pm
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP util/list.c
mv fileinfo.o tmpfileinfo.o
mv tmpfileinfo.o ctlib/fileinfo.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP util/memalloc.c
mv C.xsc C.c
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- C.bs blib/arch/auto/Convert/Binary/C/C.bs 644
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" ctlib/arch.pl ctlib/arch.h 
mv memalloc.o tmpmemalloc.o
mv tmpmemalloc.o util/memalloc.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP C.c
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/basic.c
mv list.o tmplist.o
mv tmplist.o util/list.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/dimension.c
mv hash.o tmphash.o
mv tmphash.o util/hash.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/hook.c
In file included from cbc/basic.c:21:
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note:  note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5:'{' token is here note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: 
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note:     v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29note: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5:: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from  note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:8021:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
:In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:66349: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning    v ^= (v>>23);                       \: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:151:5: note: ')' token is here
#   define STMT_END     )
                        ^
In file included from     ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: 
note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663: note: ')' token is here
:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                                               ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32::152:5: note: '{' token is here
 note    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
: expanded from macro 'ZAPHOD32_MIX'#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note:     v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
'{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h                        ^
:158:5: In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:159:5#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
:124:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
 #   define STMT_END     )
                        ^
note: expanded from macro 'STMT_START'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:162#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
:5:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here

                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
3921:
In file included from #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:35:
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:158#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
:5:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5"); warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
48                        ^:
 note: expanded from macro 'ZAPHOD32_MIX'
In file included from C.xs:27#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:

In file included from                                                ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::168159::55::  warningwarning: : '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::32116:: 37note::  expanded from macro 'ZAPHOD32_MIX'note
: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h5::667 :note21: :'{' token is here 
note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \warning
:                                                ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    v ^= (v>>23);                       \:
124                                        ^:
32: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :expanded from macro 'ZAPHOD32_MIX'162
:5: note: ')' token is here
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);: 
')' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5"); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note#   define STMT_END     ): 
expanded from macro 'ZAPHOD32_MIX'                        ^

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
In file included from C.xs:27:
In file included from #   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                        ^3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);:
663    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::480:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h38::169 :note5: :expanded from macro 'ZAPHOD32_SCRAMBLE32' 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \5
:                                                ^ 
note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::663164:
:In file included from 5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 35warning:
: In file included from '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    v ^= (v>>23);                       \:
116                                        ^:
37: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :expanded from macro 'ZAPHOD32_MIX'164
:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:88:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note666: :expanded from macro 'ZAPHOD32_SCRAMBLE32'29
: note: expanded from macro 'STMT_START'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                        ^                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::4116:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h48::167 :note5: :expanded from macro 'ZAPHOD32_MIX' 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: In file included from '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cbc/basic.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");    v2 = ROTR32(v2, 7) ^ v0;   \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5116:: 37note::  ')' token is herenote
: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3666:: 29note::  expanded from macro 'ZAPHOD32_MIX'note
: expanded from macro 'STMT_START'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
#   define STMT_END     )                              ^

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");:

In file included from     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::4116:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h48::168 :note5: :expanded from macro 'ZAPHOD32_MIX' 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note171: :expanded from macro 'ZAPHOD32_MIX'5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note124: :expanded from macro 'STMT_START'32
: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
                               ^note
: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::116125::483::  notenote: : expanded from macro 'ZAPHOD32_MIX'expanded from macro 'ZAPHOD32_MIX'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \#   define STMT_END     )

                                               ^                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \1393:35: note: expanded from macro 'XORSHIFT96_set'

#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                                    ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
:666#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \:29: note: expanded from macro 'STMT_START'

                                             ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here

            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
             ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");note
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:     v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
expanded from macro 'XORSHIFT96_set'
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#   define STMT_END     )
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
In file included from cbc/basic.c:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);21
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
:
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
In file included from     ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#   define STMT_END     )
                        ^
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:In file included from 13C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:         SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
                              ^
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
:1399            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
:49#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                                                ^            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'

    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'

    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note:         SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
expanded from macro 'XORSHIFT128_set'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
} STMT_END
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
  ^~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
:663        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
:
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");In file included from 
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
                        ^
:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \:
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
80:3#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
: note            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
: expanded from macro 'STADTX_SCRAMBLE64'#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \

                                                ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
: expanded from macro 'STMT_END'    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here

            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_END     )
                        ^In file included from 
C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
In file included from     XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
cbc/basic.c:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
:55    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \:

                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
:72    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
47:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
 note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'

    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));79
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
45: In file included from noteC.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    v ^= (v >> 46);                         \
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
                                            ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'

    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )80
                        ^
:3:In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
} STMT_END
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
  ^~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
                                              ^
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
In file included from     STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
cbc/basic.c#   define STMT_END     )
                        ^
:21:
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
:3921#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:
In file included from #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
:
In file included from #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hIn file included from :C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
72:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));36
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
: #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'STADTX_SCRAMBLE64'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here

    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'STMT_START':118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )

                        ^
                              ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
120:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
5: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
note:     STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));'{' token is here
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'

#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note:     STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                              ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
120:    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
5:    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
 warning:     STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#   define STMT_END     )
                        ^

    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: noteIn file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: expanded from macro 'STMT_END'
#   define STMT_END     )    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~

                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
:    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
274:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
  ^~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;                        ^

     ^~~~~~~~In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:175#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
             ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);  SIP_ROUNDS;                               \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
  ^~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
     ^~~~~~~~    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
     ^~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  } STMT_END    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \                        ^

  ^~~~~~~~~~
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:275:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
6:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
                              ^  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:  SIP_FINAL_ROUNDS                          \156:5: note: '{' token is here

  ^~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
244    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
:3:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ) note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
                        ^

In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ^~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SIP_FINAL_ROUNDS                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:In file included from 275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/dimension.c    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
21:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from   SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
  ^~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here

    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
                                    ^~~~~~~~~~  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ,SIPROUND;SIPROUND;SIPROUND;:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here

    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from 180/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::5663::
 note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :expanded from macro 'SIPROUND'107
:5: warning:   } STMT_END'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::43244:: 3note::  expanded from macro '_PERL_HASH_SEED_STATE'note
: expanded from macro 'PERL_SIPHASH_FNC'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 275expanded from macro 'STMT_START':
24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::175107::35::  notenote: : expanded from macro 'SIPROUND''{' token is here

  STMT_START {              \
  ^~~~~~~~~~
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::2991:: 54note::  expanded from macro 'STMT_START'note
: expanded from macro '_PERL_HASH_SEED_STATE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \:
3                                                     ^:
 note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::93667:: 21note::  expanded from macro '_PERL_HASH_SEED_STATE'note
: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
  ^~~~~~~~~~~~~~~~    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
In file included from cbc/dimension.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21107:
:In file included from 5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 3921note:
: In file included from ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5:    _PERL_HASH_SEED_STATE(seed,state); 
warning    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");667
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~21
: note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_END     )
                        ^

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
275:24    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
: note#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: note    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:     v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
expanded from macro 'PERL_SIPHASH_FNC'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  ^~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:275#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h                        ^:
162:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hwarning:: 244'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
  SIP_FINAL_ROUNDS                          \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:

                                               ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
    ,SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h     ^~~~~~~~:
666:29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'STMT_START':
180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
note                              ^: 
expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ,SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:     ^~~~~~~~116
:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
                                                ^note
: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]274
:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");175
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'SIPROUND':
124:32: note: expanded from macro 'ZAPHOD32_MIX'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    v2 = ROTR32(v2, 7) ^ v0;   \666
:                               ^29
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :expanded from macro 'STMT_START'168
:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");:
3    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~  SIP_ROUNDS;                               \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h21::274 :note6: :expanded from macro 'STMT_END' 
note: '{' token is here
#   define STMT_END     )
    ,SIPROUND;                        ^

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
In file included from cbc/dimension.c:21:
  STMT_START {              \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h             ^:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h663::
238In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3::35 :
noteIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'PERL_SIPHASH_FNC':
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;274
:     ^~~~~~~~6
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note:     ,SIPROUND;expanded from macro 'SIPROUND'

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note  STMT_START {              \: 
expanded from macro 'SIPROUND'  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  } STMT_END666
:  ^29
: note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */  ^~~~~~~~~~

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h6::219 :note5: :')' token is here 
note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    SIP_ROUNDS;                             \180
:    ^~~~~~~~~~5
: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:6: note: '{' token is here  } STMT_END

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:     ,SIPROUND;SIPROUND;:
expanded from macro 'STMT_END'169
     ^~~~~~~~:
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175#   define STMT_END     ):
14:                        ^ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:219:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h5::124 :note32:   SIP_ROUNDS;                               \:expanded from macro 'PERL_SIPHASH_FNC'
 
  ^~~~~~~~~~note
: expanded from macro 'ZAPHOD32_MIX'
    SIP_ROUNDS;                             \
    v2 = ROTR32(v2, 7) ^ v0;   \    ^~~~~~~~~~

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'ZAPHOD32_MIX':
175:3: note} STMT_END: 
expanded from macro 'SIPROUND'  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666#   define STMT_END     ):
29                        ^:
 note: expanded from macro 'STMT_START'
In file included from cbc/dimension.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
21                              ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::244663::
3In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note35: :
expanded from macro 'PERL_SIPHASH_FNC'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note175: :expanded from macro 'ZAPHOD32_MIX'14
: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \ 
note                                    ^~~~~~~~~~: 
expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
6                              ^:
 warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]170
:5: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note219: :expanded from macro 'ZAPHOD32_MIX'5
: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
280                                               ^:
6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:275:6:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning666: :29'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */3
:                              ^ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5:   } STMT_ENDnote
:   ^expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::170 :note5: :expanded from macro 'PERL_SIPHASH_FNC' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");: 
    ,SIPROUND;SIPROUND;')' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note:: 14expanded from macro 'ZAPHOD32_MIX':
 note:     ,SIPROUND;SIPROUND;SIPROUND;expanded from macro 'SIPROUND'

     ^~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                               ^180
:  STMT_START {              \5
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:             ^: 
170note:: 5expanded from macro 'SIPROUND':
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 219')' token is here:
5:   } STMT_ENDnote
:     ^~~~~~~~expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");

#   define STMT_END     )    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h125::2443::3 :note : noteexpanded from macro 'ZAPHOD32_MIX': 
expanded from macro 'PERL_SIPHASH_FNC'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note  SIP_FINAL_ROUNDS                          \: 
expanded from macro 'STMT_END'  ^~~~~~~~~~~~~~~~

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921    ,SIPROUND;SIPROUND;SIPROUND;:

In file included from               ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h175::43:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note171: :expanded from macro 'SIPROUND'5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  SIP_FINAL_ROUNDS                          \666
:  ^~~~~~~~~~~~~~~~29
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :expanded from macro 'STMT_START'275
:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h175::17114::5 :note : noteexpanded from macro 'SIPROUND': 
'{' token is here
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::116:28048::15 :note : warningexpanded from macro 'ZAPHOD32_MIX':   SIP_FINAL_ROUNDS                          \
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                               ^
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hwarning:: 275'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::124 :note32: :expanded from macro 'SIPROUND' 
note: expanded from macro 'ZAPHOD32_MIX'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note:   SIP_FINAL_ROUNDS                          \')' token is here

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note    ,SIPROUND;SIPROUND;: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
expanded from macro 'ZAPHOD32_MIX':     ^~~~~~~~
180
:5: note} STMT_END: 
expanded from macro 'SIPROUND'  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h175::6673:  } STMT_END:21
 :    ^~~~~~~~note 
: noteexpanded from macro 'SIPROUND': 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
  STMT_START {              \
  ^~~~~~~~~~
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                        ^666
:29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'STMT_START':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6    ,SIPROUND;SIPROUND;SIPROUND;:
                        ^~~~~~~~note
: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note    ,SIPROUND;SIPROUND;: 
expanded from macro 'SIPROUND'     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note  STMT_START {              \: 
expanded from macro 'SIPROUND'  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
  SIP_ROUNDS;                               \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^~~~~~~~~~244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  } STMT_END

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 238expanded from macro 'SIPROUND':
3: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::15275:: 24warning::  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note
: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note180: :expanded from macro 'SIPROUND'5
: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~  STMT_START {              \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::21666:: 29note::  expanded from macro 'STMT_END'note
: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::247175::133::  warningnote: : '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'SIPROUND'

  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");29
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                               ^                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h13::244 :note3: :')' token is here 
note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");

  ^~~~~~~~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h281::12515::3 :note : note'{' token is here: 
expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
               ^~~~~~~~note
: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note#   define STMT_END     ): 
expanded from macro 'SIPROUND'                        ^

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from 281/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::154::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning:: 268'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::90 :note37: :expanded from macro 'SIPROUND' 
note: expanded from macro 'ZAPHOD32_FINALIZE'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note:   SIP_FINAL_ROUNDS                          \expanded from macro 'STMT_START'

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
268              ^~~~~~~~:
5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  } STMT_END
    ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:90:48:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note667: :expanded from macro 'ZAPHOD32_FINALIZE'21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                                               ^244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:6:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note244: :'{' token is here3
: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175  SIP_FINAL_ROUNDS                          \:
14  ^~~~~~~~~~~~~~~~:
 note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:24: note: ')' token is here
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note:     ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;expanded from macro 'PERL_SIPHASH_FNC'

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :expanded from macro 'PERL_SIPHASH_FNC'280
:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~    ,SIPROUND;SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 281expanded from macro 'PERL_SIPHASH_FNC':
33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;280
:                                ^~~~~~~~15
: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h14::244 :note3: :expanded from macro 'SIPROUND' 
note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:  SIP_FINAL_ROUNDS                          \219
:  ^~~~~~~~~~~~~~~~5
: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:33: note: ')' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^In file included from 
cbc/dimension.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from 238/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::33921::
 In file included from note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h: :expanded from macro 'PERL_SIPHASH_FNC'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'SIPROUND':
1448:9: warning:   } STMT_END'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h                        ^:
107:32: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 238expanded from macro 'SBOX32_MIX3':
3: note: expanded from macro 'PERL_SIPHASH_FNC'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:  SIP_ROUNDS;                               \9
:  ^~~~~~~~~~ 
note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:        SBOX32_MIX3(s0,s1,s2,"SEED STATE");280
:        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~15
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:108:3: note: expanded from macro 'SBOX32_MIX3'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h667::17521::3 :note : noteexpanded from macro 'STMT_END': 
expanded from macro 'SIPROUND'
#   define STMT_END     )
                        ^
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from cbc/dimension.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21280:
:In file included from 15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 3921note:
: In file included from '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13    ,SIPROUND;SIPROUND;:
               ^~~~~~~~warning
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);             ^

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::31393:: 35note::  expanded from macro 'PERL_SIPHASH_FNC'note
: expanded from macro 'XORSHIFT96_set'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/dimension.c::80:2138:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 3921expanded from macro 'ZAPHOD32_SCRAMBLE32':
In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
    ,SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:     ^~~~~~~~666
:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::666150:29::5 :note : noteexpanded from macro 'STMT_START': 
'{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                              ^80
:49: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'ZAPHOD32_SCRAMBLE32':
219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                                     ^~~~~~~~~~
274:6:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning666: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]29
: note: expanded from macro 'STMT_START'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:151:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note219: :'{' token is here5
: note: expanded from macro 'PERL_SIPHASH_FNC'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SIP_ROUNDS;                             \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~:
80:49:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note274: :expanded from macro 'ZAPHOD32_SCRAMBLE32'6
: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::274663::
6In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :warning35: :
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning    ,SIPROUND;: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80  STMT_START {              \:
38  ^~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:  SIP_ROUNDS;                               \152
:  ^~~~~~~~~~5
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'{' token is here:
274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::80175::4914::  notenote: : expanded from macro 'ZAPHOD32_SCRAMBLE32'expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \238
:                                                ^3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h274::46:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :warning156: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");  ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::3116:: 37note::  expanded from macro 'PERL_SIPHASH_FNC'note
: expanded from macro 'ZAPHOD32_MIX'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note:     ,SIPROUND;expanded from macro 'STMT_START'

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */  } STMT_END

                              ^    ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h156::6675::21 :note : note'{' token is here: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ,SIPROUND;SIPROUND;SIPROUND;:
116     ^~~~~~~~:
37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \note
:                                     ^~~~~~~~~~expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5    ,SIPROUND;SIPROUND;SIPROUND;:
      ^~~~~~~~note
: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~667
:21:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note116: :expanded from macro 'STMT_END'48
: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h275::11615::37 :warning : note'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
expanded from macro 'ZAPHOD32_MIX'
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \note: 
expanded from macro 'SIPROUND'                                    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666  } STMT_END:
29  ^:
 note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

  ^~~~~~~~~~~~~~~~                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::158275::515::  notenote: : '{' token is here')' token is here

    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");5
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48:   } STMT_ENDnote
:     ^~~~~~~~expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                                               ^:
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::116:27537::24 :note : warningexpanded from macro 'ZAPHOD32_MIX': 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \180
:                                    ^~~~~~~~~~3
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'SIPROUND'666
:29: note:   } STMT_ENDexpanded from macro 'STMT_START'

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  SIP_FINAL_ROUNDS                          \:
159  ^~~~~~~~~~~~~~~~:
5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :'{' token is here275
:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::180116::548::  notenote: : expanded from macro 'SIPROUND'expanded from macro 'ZAPHOD32_MIX'

  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
#   define STMT_END     )                                               ^

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
In file included from cbc/hook.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h280::39216:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hwarning:: 663'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ,SIPROUND;SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
  ^

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 99note:: 36expanded from macro 'PERL_SIPHASH_FNC':
 note: expanded from macro 'SBOX32_MIX3'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ,SIPROUND;SIPROUND;:
666     ^~~~~~~~:
29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
21                              ^:
 note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1448:9: note: '{' token is here
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'    SIP_ROUNDS;                             \

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: #define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \warning
:                                               ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
In file included from cbc/hook.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21180:
:In file included from 3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note3921: :
expanded from macro 'SIPROUND'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from   } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^35
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::13219:: 5warning::  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note
: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);280
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~15
: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
  } STMT_END
    ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note667: :expanded from macro 'STMT_START'21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */5
:                              ^ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
:                                                        ^280
:6:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :1453warning:: 13'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);175
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3
: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1397:3: note: expanded from macro 'XORSHIFT96_set'
  STMT_START {              \
  ^~~~~~~~~~} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h666::66729::21 :note : noteexpanded from macro 'STMT_START': 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
  SIP_ROUNDS;                               \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~:
35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h1456::2805::6 :warning : note'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
'{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
175:14: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote:: 1393expanded from macro 'SIPROUND':
35: note: expanded from macro 'XORSHIFT96_set'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'  SIP_ROUNDS;                               \

  ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h667::21:280 :note6: :expanded from macro 'STMT_END' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'In file included from 
cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h  STMT_START {              \:
663             ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h238::14823::9 :note : warningexpanded from macro 'PERL_SIPHASH_FNC': 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hwarning:: 180:'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");:
21        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note:         v2 = ROTL32(v2, 4) - v0;    \expanded from macro 'PERL_SIPHASH_FNC'

                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 281note:: 6expanded from macro 'STMT_END':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
In file included from cbc/hook.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21244:
:In file included from 3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3921 :
noteIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hexpanded from macro 'PERL_SIPHASH_FNC':
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning  SIP_FINAL_ROUNDS                          \: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h1399::17538::14 :note : noteexpanded from macro 'XORSHIFT128_set': 
expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \3
:                                     ^~~~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h6:: 1403warning:3: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
      ^~~~~~~~note
: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: #   define STMT_END     )note
:                         ^expanded from macro 'SIPROUND'

  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  SIP_FINAL_ROUNDS                          \3921
:
  ^~~~~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h281::356:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :note1490: :')' token is here5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :note1399: :expanded from macro 'SIPROUND'38
: note: expanded from macro 'XORSHIFT128_set'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#   define STMT_END     ):
666                        ^:
29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'STMT_START':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h  ^~~~~~~~~~~~~~~~:
1490:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :warning281: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]15
: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note:: 14expanded from macro 'XORSHIFT128_set':
 note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \:
244                                                        ^:
3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote:: 1490expanded from macro 'PERL_SIPHASH_FNC':
5: note: ')' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5:    CX_POP_SAVEARRAY(cx); 
warning    ^~~~~~~~~~~~~~~~~~~~: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h29::80 :note3: :expanded from macro 'STMT_START' 
note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209#   define STMT_END     ):
5                        ^:
 note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: In file included from notecbc/hook.c: :expanded from macro 'CX_POP_SAVEARRAY'21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
    STMT_START {                                                        \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h               ^:
55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:    ^117
:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h :warning2209: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));662
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'CX_POP_SAVEARRAY':
79:45: note: expanded from macro 'STADTX_SCRAMBLE64'    } STMT_END

      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117#   define STMT_END     ):
5                        ^:
 note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:                              ^2215
:9/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 118warning:: 5'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'CLEAR_ARGARRAY'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'    STMT_START {                                                        \

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3:In file included from  cbc/basic.cnote:: expanded from macro 'STADTX_SCRAMBLE64'21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h} STMT_END:
2215  ^~~~~~~~:
9: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hwarning:: 667'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
21: note: expanded from macro 'STMT_END'
        CLEAR_ARGARRAY(av);
#   define STMT_END     )        ^~~~~~~~~~~~~~~~~~

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215In file included from :cbc/hook.c9::21 :
note: In file included from ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h        CLEAR_ARGARRAY(av);:
119        ^~~~~~~~~~~~~~~~~~:
5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));21
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: #   define STMT_END     )expanded from macro 'STADTX_SCRAMBLE64'

                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/cbc.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/cbc.xs:59:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/cbc.xs:59:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/cbc.xs:59:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:546:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:546:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:546:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:546:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:546:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:546:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:546:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:546:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15cbc/dimension.c: :note: 251expanded from macro 'CHECK_VOID_CONTEXT':
3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));:
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note
: expanded from macro 'XSRETURN_EMPTY'
./cbc/cbc.h:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END225
:                                                   ^~~~~~~~~~~20
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hexpanded from macro 'WARN':
320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/clone.xs:29:5: note: ')' token is here#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END

                   ^~~~~~~~~~
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:./ppport.h119::153813:: 28note::  expanded from macro 'CHECK_VOID_CONTEXT'note
: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */              XSRETURN_EMPTY;                                                  \

                              ^              ^~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:cbc/dimension.c330::25167::3 :note : noteexpanded from macro 'XSRETURN_EMPTY': 
'{' token is here
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));

  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:20./cbc/cbc.h:: 225note:: 31expanded from macro 'STMT_END':
 note: expanded from macro 'WARN'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]                              ^

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:251:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:251:3: note: ')' token is here
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:287:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:287:5: note: '{' token is here
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:287:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:287:5: note: ')' token is here
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:36:5: note: '{' token is here
cbc/dimension.c:295:3: warning    XSRETURN(1);: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note  XCPT_TRY_START: 
expanded from macro 'XSRETURN'  ^~~~~~~~~~~~~~

./ppport.h:6658    STMT_START {                                        \:
31               ^:
 note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
./xsubs/clone.xs:36:5: warning#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]                              ^

cbc/dimension.c:295:3:     XSRETURN(1);note
:     ^~~~~~~~~~~'{' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5:   XCPT_TRY_STARTnote
:   ^~~~~~~~~~~~~~expanded from macro 'XSRETURN'

./ppport.h:6658:31:    } STMT_END 
note    ^: 
expanded from macro 'XCPT_TRY_START'
./xsubs/clone.xs:36:5: note: ')' token is here
    XSRETURN(1);
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)    ^~~~~~~~~~~

                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::114320::167::  notenote: : expanded from macro 'JMPENV_PUSH'expanded from macro 'XSRETURN'

    } STMT_END
    STMT_START {                                                        \      ^~~~~~~~

               ^
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:295:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/dimension.c:295:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:332:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:332:17: note: '{' token is here
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/clean.xs:30:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'cbc/dimension.c
:332:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

                              ^
./xsubs/clean.xs:30:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END

                                                                      ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315cbc/dimension.c::16332:: 17note::  expanded from macro 'XSRETURN'note
: ')' token is here
    STMT_START {                                        \
               ^
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'./xsubs/clean.xs
:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#  define STMT_END      )

                        ^
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/clean.xs:30:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:653:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
cbc/dimension.c:347:15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 330warning:: 52'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:315:5: note./cbc/cbc.h: :expanded from macro 'XSRETURN'225
:20: note: expanded from macro 'WARN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:653:5: note: '{' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
cbc/dimension.c:347:15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 330note:: 52'{' token is here:
 note: expanded from macro 'XSRETURN_EMPTY'
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                   ^~~~~~~~~~~
./cbc/cbc.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::225315::3116::  notenote: : expanded from macro 'WARN'expanded from macro 'XSRETURN'

    STMT_START {                                        \
               ^
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
C.c:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
cbc/dimension.c:347/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::15330:: 52warning::  '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note
: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));                                                   ^~~~~~~~~~~

              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320./cbc/cbc.h::5225:: 71note::  expanded from macro 'XSRETURN'note
: expanded from macro 'WARN'
    } STMT_END
    ^
C.c:653:5: note: ')' token is here
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~cbc/dimension.c
:347:15: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h: :')' token is here330
:52: note: expanded from macro 'XSRETURN_EMPTY'
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~./cbc/cbc.h
:225:73/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 320note:: 7expanded from macro 'WARN':
 note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END

                                                                        ^~~~~~~~
./ppport.h:3814:#  define STMT_END      )20
:                        ^ 
note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^C.c
:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:653:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:370:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:370:15: note: '{' token is here
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:370:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:370:15: note: ')' token is here
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:379:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:379:15: note: '{' token is here
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/configure.xs:29:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
cbc/dimension.c:379:15C.xs:: 112warning:: 13'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'WARN_VOID_CONTEXT'
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"            WARN((aTHX_ "Useless use of %s in void context", method))

              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./cbc/cbc.h./cbc/cbc.h::225225::2071::  notenote: : expanded from macro 'WARN'expanded from macro 'WARN'

#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END

                   ^~~~~~~~~~
cbc/dimension.c:379:./ppport.h15::3813 :note28: :')' token is here 
note: expanded from macro 'STMT_START'
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^./cbc/cbc.h
:225:73./xsubs/configure.xs:: 29note:: 7expanded from macro 'WARN':
 note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END13
:                                                                        ^~~~~~~~ 
note: expanded from macro 'WARN_VOID_CONTEXT'
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/configure.xs:29:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/configure.xs:29:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:./xsubs/configure.xs404::303::7 :warning : warning'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~      XSRETURN_EMPTY;

      ^~~~~~~~~~~~~~
./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::6659330::3124::  notenote: : expanded from macro 'XCPT_TRY_END'expanded from macro 'XSRETURN_EMPTY'

#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END 
note                       ^~~~~~~~~~: 
expanded from macro 'JMPENV_POP'
./ppport.h:3813:28: note: expanded from macro 'STMT_START'    STMT_START {                                                        \

    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:30:7: note#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */: 
'{' token is here                              ^

cbc/dimension.c:404:3: note      XSRETURN_EMPTY;: 
'{' token is here      ^~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35  XCPT_TRY_END:
   ^~~~~~~~~~~~note
: expanded from macro 'XSRETURN_EMPTY'
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:131:16: note: expanded from macro 'JMPENV_POP'
./xsubs/configure.xs:30:7:     STMT_START {                                                        \warning
:                ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
cbc/dimension.c:404:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^  XCPT_TRY_END

  ^~~~~~~~~~~~
./xsubs/configure.xs:30:7:./ppport.h :note6659: :'{' token is here31
: note: expanded from macro 'XCPT_TRY_END'
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:#    define XCPT_TRY_END      JMPENV_POP;52
:                              ^~~~~~~~~~ 
note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/dimension.c:404#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END:
3                                                   ^~~~~~~~~~~:
 note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h')' token is here:
315:16: note: expanded from macro 'XSRETURN'
  XCPT_TRY_END
  ^~~~~~~~~~~~
    STMT_START {                                        \./ppport.h
:               ^6659
:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
cbc/dimension.c:410:5: #define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_ENDwarning
:                                                    ^~~~~~~~~~~'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'    XCPT_RETHROW;

    ^~~~~~~~~~~~
    } STMT_END
./ppport.h    ^:
6661:31:./xsubs/configure.xs :note30: :expanded from macro 'XCPT_RETHROW'7
: note: ')' token is here
      XSRETURN_EMPTY;
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)      ^~~~~~~~~~~~~~

                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h143::3305::52 :note : noteexpanded from macro 'JMPENV_JUMP': 
expanded from macro 'XSRETURN_EMPTY'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */    } STMT_END

                              ^      ^~~~~~~~

cbc/dimension.c./ppport.h::4103814::520::  notenote: : '{' token is hereexpanded from macro 'STMT_END'

    XCPT_RETHROW;#  define STMT_END      )

    ^~~~~~~~~~~~                        ^

./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
./xsubs/configure.xs:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:      XSRETURN_EMPTY;143
:      ^~~~~~~~~~~~~~16
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hexpanded from macro 'JMPENV_JUMP':
330:65: note: expanded from macro 'XSRETURN_EMPTY'
    STMT_START {                                                \
               ^
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/configure.xs:30:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:410:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/dimension.c:410:5: note: ')' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:68:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:68:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/configure.xs:68:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/configure.xs:68:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
cbc/dimension.c./ppport.h::3814453::203::  notewarning: : expanded from macro 'STMT_END''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

#  define STMT_END      )
                        ^
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:453:3: note: '{' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31C.c:: note747: :expanded from macro 'XCPT_TRY_START'5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:315:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:: 114note:: 16expanded from macro 'XSRETURN':
 note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                        \
    ^~~~~~~~~~    STMT_START {                                                        \

               ^
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:747:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:747:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
cbc/dimension.c    ^
:453:C.c3::747 :warning5: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: ')' token is here
  XCPT_TRY_START    XSRETURN(1);

  ^~~~~~~~~~~~~~    ^~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h./ppport.h::3206658::731::  notenote: : expanded from macro 'XSRETURN'expanded from macro 'XCPT_TRY_START'

    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:#  define STMT_END      )128
:                        ^5
: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/dimension.c:453:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:457:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:457:3: note: '{' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/dimension.c:457:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/dimension.c:457:3: note: ')' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:467:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:467:5: note: '{' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
./xsubs/include.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
cbc/dimension.c:            WARN((aTHX_ "Useless use of %s in void context", method))467
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]./cbc/cbc.h
:225:20: note: expanded from macro 'WARN'
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28#    define XCPT_RETHROW      JMPENV_JUMP(rEtV):
                               ^~~~~~~~~~~~~~~~~note
: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/dimension.c#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
467                              ^:
5: note./xsubs/include.xs: :')' token is here54
:7: note: '{' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
      WARN_VOID_CONTEXT;
./ppport.h      ^~~~~~~~~~~~~~~~~:
6661:31: C.xsnote:: 112expanded from macro 'XCPT_RETHROW':
13: note: expanded from macro 'WARN_VOID_CONTEXT'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7:             WARN((aTHX_ "Useless use of %s in void context", method))note
:             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'JMPENV_JUMP'

./cbc/cbc.h:225:31    } STMT_END:
       ^~~~~~~~note
: expanded from macro 'WARN'
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/include.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/include.xs:54:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:55:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/include.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:55:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/include.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/include.xs:55:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/include.xs:55:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:87:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:87:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/include.xs:87:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/include.xs:87:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/parse.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/parse.xs:54:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/parse.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/parse.xs:54:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:926:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:926:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:926:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:926:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:926:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:926:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:926:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:926:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/parse.xs:81:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/parse.xs:81:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/parse.xs:81:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/parse.xs:81:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:973:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:973:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:973:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:973:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:973:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:973:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:973:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:973:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
98 warnings generated.
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
mv basic.o tmpbasic.o
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:34:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:34:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./xsubs/def.xs:34:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:34:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
mv tmpbasic.o cbc/basic.o
./xsubs/def.xs:34:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/def.xs:34:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:34:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./xsubs/def.xs:34:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1064:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1064:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
C.c:1064:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/idl.c
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1064:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
C.c:1064:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
C.c:1064:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1064:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
C.c:1064:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1066:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1066:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1066:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1066:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:38:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:38:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:38:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:38:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:39:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:39:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:39:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:39:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:53:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/pack.xs:53:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:59:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:59:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:59:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:59:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:59:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/pack.xs:59:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:70:7: note: '{' token is here
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:70:7: note: ')' token is here
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:86:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:86:9: note: '{' token is here
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:86:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:86:9: note: ')' token is here
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:93:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:93:9: note: '{' token is here
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:93:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:93:9: note: ')' token is here
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:107:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
./xsubs/pack.xs:107:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:111:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:111:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:111:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
./xsubs/pack.xs:111:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:120:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:120:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
./xsubs/pack.xs:120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
./xsubs/pack.xs:120:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:125:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:125:7: note: '{' token is here
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
./xsubs/pack.xs:125:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
./xsubs/pack.xs:125:7: note: ')' token is here
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:128:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:128:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:128:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:128:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:128:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:128:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:128:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:128:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:131:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:131:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:131:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:131:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1230:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1230:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1230:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1230:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:165:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:165:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:165:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/pack.xs:165:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:171:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:171:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:171:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:171:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:171:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:171:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:171:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/pack.xs:171:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:178:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:178:9: note: '{' token is here
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:178:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:178:9: note: ')' token is here
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:201:7: note: '{' token is here
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
./xsubs/pack.xs:201:7: note: ')' token is here
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:210:7: note: '{' token is here
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
./xsubs/pack.xs:210:7: note: ')' token is here
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:222:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:222:9: note: '{' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
./xsubs/pack.xs:222:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
./xsubs/pack.xs:222:9: note: ')' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:229:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:229:7: note: '{' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/pack.xs:229:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/pack.xs:229:7: note: ')' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:237:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:237:5: note: '{' token is here
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:237:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:237:5: note: ')' token is here
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:32:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/sizeof.xs:32:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:41:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:41:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:41:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:41:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sizeof.xs:41:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sizeof.xs:41:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:41:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/sizeof.xs:41:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1426:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1426:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1426:5: warning: In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1426:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
In file included from cbc/hook.c:21:
#  define STMT_END      )In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                        ^:
6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ENV_LOCK;

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    CHECK_VOID_CONTEXT;2924
:31    ^~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'ENV_LOCK'
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:./xsubs/typeof.xs666::3029::5 :note : noteexpanded from macro 'STMT_START': 
')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */: 
expanded from macro 'CHECK_VOID_CONTEXT'                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h              XSRETURN_EMPTY;                                                  \:
2924              ^~~~~~~~~~~~~~:
31: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h: :expanded from macro 'ENV_LOCK'330
:67: note: expanded from macro 'XSRETURN_EMPTY'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END 
note                                                                  ^~~~~~~~: 
expanded from macro 'MUTEX_LOCK'
./ppport.h:3814:20: note: expanded from macro 'STMT_END'    STMT_START {                                                \

               ^
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: noteIn file included from : cbc/hook.cexpanded from macro 'CHECK_VOID_CONTEXT':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h          } STMT_END:
2619            ^~~~~~~~:
5: warning./ppport.h: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]3814
:20: note: expanded from macro 'STMT_END'
    ENV_LOCK;
    ^~~~~~~~
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
C.c:1484:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1484:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: In file included from notecbc/hook.c: :expanded from macro 'XSRETURN'21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:    STMT_START {                                        \5
:               ^ 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
C.c:1484:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

    ^~~~~~~~~~~                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::2627320::55::  notenote: : '{' token is hereexpanded from macro 'XSRETURN'

    } STMT_END
    ENV_UNLOCK;    ^

    ^~~~~~~~~~
C.c:1484:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h5::2925 :note31: :')' token is here 
note: expanded from macro 'ENV_UNLOCK'
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:    } STMT_END222
:      ^~~~~~~~16
: note: ./ppport.hexpanded from macro 'MUTEX_UNLOCK':
3814:20: note: expanded from macro 'STMT_END'
    STMT_START {                                                \
               ^
#  define STMT_END      )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/offsetof.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:32:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/offsetof.xs:32:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:39:7: note: '{' token is here
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:39:7: note: ')' token is here
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:41:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:41:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:41:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/offsetof.xs:41:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:52:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:52:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:52:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/offsetof.xs:52:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1562:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1562:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1562:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1562:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:34:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:34:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:34:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/member.xs:34:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:37:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:37:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:37:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/member.xs:37:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:54:7: note: '{' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:54:7: note: '{' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/member.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/member.xs:54:7: note: ')' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/member.xs:54:7: note: ')' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:79:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:79:9: note: '{' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/member.xs:79:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/member.xs:79:9: note: ')' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:94:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:94:9: note: '{' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:94:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:94:9: note: ')' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:100:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:100:9: note: '{' token is here
cbc/hook.c:493:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:5: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:493:3: note: '{' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:16: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
               ^
cbc/hook.c:493:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
cbc/hook.c:493:3: note: ')' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:555:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:555:7: note: '{' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
cbc/hook.c:555:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:555:7: note: '{' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
cbc/hook.c:555:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
cbc/hook.c:555:7: note: ')' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:555:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
cbc/hook.c:555:7: note: ')' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:563:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:563:7: note: '{' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
cbc/hook.c:563:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:563:7: note: '{' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
cbc/hook.c:563:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
cbc/hook.c:563:7: note: ')' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:563:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
cbc/hook.c:563:7: note: ')' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:100:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:100:9: note: ')' token is here
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:116:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:116:9: note: '{' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/member.xs:116:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/member.xs:116:9: note: ')' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:123:9: note: '{' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:123:9: note: ')' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:126:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:126:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/member.xs:126:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:126:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:126:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:126:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:126:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/member.xs:126:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:51:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:51:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/tag.xs:51:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/tag.xs:51:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:52:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/tag.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:52:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/tag.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/tag.xs:52:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/tag.xs:52:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:55:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:55:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/tag.xs:55:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/tag.xs:55:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:97:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:97:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/tag.xs:97:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/tag.xs:97:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1832:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1832:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1832:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1832:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:31:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/enum.xs:31:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:40:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:40:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/enum.xs:40:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:40:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/enum.xs:40:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/enum.xs:40:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:40:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/enum.xs:40:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:45:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:45:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:45:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:45:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:47:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/enum.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:47:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:47:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/enum.xs:47:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:69:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:69:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:69:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/enum.xs:69:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:75:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:75:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/enum.xs:75:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:75:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:75:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:75:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:75:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/enum.xs:75:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:104:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:104:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:104:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:104:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:112:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:112:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:112:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:112:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:112:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:112:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:112:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:112:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:114:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:114:7: note: '{' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/enum.xs:114:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/enum.xs:114:7: note: ')' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:119:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h122 warnings generated.
mv dimension.o tmpdimension.o
mv tmpdimension.o cbc/dimension.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/init.c
:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:119:7: note: '{' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:119:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:119:7: note: ')' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:52:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:52:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:52:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:52:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:63:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:63:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/compound.xs:63:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:63:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/compound.xs:63:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/compound.xs:63:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:63:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/compound.xs:63:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:68:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:68:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:68:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:68:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:70:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:70:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:70:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:70:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:113:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:113:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:121:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:121:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:121:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:121:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:121:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:121:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:121:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:121:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:123:9: note: '{' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:123:9: note: '{' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:123:9: note: ')' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:123:9: note: ')' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:133:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:133:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:133:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:133:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:133:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:133:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:133:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:133:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:137:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:137:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:137:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:137:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:187:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:187:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:187:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:187:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:197:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:197:11: note: '{' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/compound.xs:197:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:197:11: note: '{' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/compound.xs:197:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/compound.xs:197:11: note: ')' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:197:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/compound.xs:197:11: note: ')' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:201:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:201:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:32:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:32:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:42:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:42:13: note: '{' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/typedef.xs:42:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:42:13: note: '{' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/typedef.xs:42:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/typedef.xs:42:13: note: ')' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:42:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/typedef.xs:42:13: note: ')' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:47:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:47:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:49:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/typedef.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:49:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:49:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/typedef.xs:49:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:71:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:71:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:71:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:71:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:77:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:77:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/typedef.xs:77:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:77:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:77:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:77:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:77:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/typedef.xs:77:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:79:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:79:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:79:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:79:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:97:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:97:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:97:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:97:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:106:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:106:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:106:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:106:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:106:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:106:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:106:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:106:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:108:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:108:7: note: '{' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/typedef.xs:108:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/typedef.xs:108:7: note: ')' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:114:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:114:7: note: '{' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:114:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:114:7: note: ')' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:28:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/sourcify.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/sourcify.xs:28:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:2468:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:2468:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:2468:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:2468:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:2536:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:2536:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:2536:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:2536:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:30:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/dependencies.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/dependencies.xs:30:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:44:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:44:11: note: '{' token is here
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:44:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:44:11: note: ')' token is here
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:45:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:45:11: note: '{' token is here
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:45:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:45:11: note: ')' token is here
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:46:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:46:11: note: '{' token is here
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:46:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:46:11: note: ')' token is here
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:55:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/dependencies.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:55:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/dependencies.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/dependencies.xs:55:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/dependencies.xs:55:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:56:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:56:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/dependencies.xs:56:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/dependencies.xs:56:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:66:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:66:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/dependencies.xs:66:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:66:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/dependencies.xs:66:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_ENDIn file included from cbc/idl.c:
                           ^
./xsubs/dependencies.xs:66:11: note: ')' token is here
21:
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
3921                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):

                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
./xsubs/dependencies.xs:66:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));150
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
:5:#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/dependencies.xs:66:11: note: ')' token is here
 warning          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));: 
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:70:7: note: '{' token is here
      XSRETURN(count);

      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: ./xsubs/dependencies.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);expanded from macro 'ZAPHOD32_SCRAMBLE32'
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/dependencies.xs:70:7: note: ')' token is here

      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
./xsubs/defined.xsIn file included from :30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
:35:
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:30:5: note: '{' token is here
4    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:          STMT_START {                                                         \
                     ^
151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]./xsubs/defined.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;

    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/defined.xs:30:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80          STMT_START {                                                         \
                     ^
:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'

                                     ^~~~~~~~~~            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:666#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
29    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: note              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
: expanded from macro 'STMT_START'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151./xsubs/defined.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;:
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
5:               WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
note: '{' token is here            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'

#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/defined.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):
                        ^
80./xsubs/defined.xs::31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
49    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: note              XSRETURN_EMPTY;                                                  \: 
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;

    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
                                                ^
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151./xsubs/defined.xs::31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;5
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: warning              XSRETURN_EMPTY;                                                  \: 
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/defined.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/defined.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
87:41              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
: note#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/defined.xs:31:5: note: ')' token is here
:     CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
expanded from macro 'ZAPHOD32_SCRAMBLE32'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
    v ^= (v>>23);                       \#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'

#  define STMT_END      )
                        ^
./xsubs/defined.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        ^    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END

          ^
./xsubs/defined.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
                        ^
:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:2684:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);:
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
88    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:3#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
                              ^
C.c:2684:5: note: '{' token is here
    XSRETURN(1); 
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
note    STMT_START {                                        \
               ^
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
C.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2684:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);:
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:2684:5: note: ')' token is here
    XSRETURN(1);667
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):
                        ^
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
./xsubs/macro.xs:27:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'

                                                ^
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:27:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/macro.xs:27:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/macro.xs:27:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
 warning:               WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:              WARN_VOID_CONTEXT;                                               \87
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
:41:            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
 note: #define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
./xsubs/macro.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
152:5              WARN_VOID_CONTEXT;                                               \:
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
 note:             WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
')' token is here
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/macro.xs:28:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END88
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):
                        ^
3./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
 note:               XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
} STMT_END
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
  ^~~~~~~~    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
:667:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
21    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: note              XSRETURN_EMPTY;                                                  \: 
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
expanded from macro 'STMT_END'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#   define STMT_END     )
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
                        ^    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
In file included from cbc/idl.c:21:
In file included from ./xsubs/macro.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
3921:
In file included from               XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:28:5: note: ')' token is here
:
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
35:
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_ENDIn file included from 
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
                        ^
:./xsubs/macro.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
4    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
156:5#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/macro.xs:28:5: note: ')' token is here
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
 warning:               XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/macro.xs:28:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:36:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
                                    ^~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:36:7: note: '{' token is here
      EXTEND(SP, count);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
:666:#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./xsubs/macro.xs:36:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
:                         } } STMT_END
                           ^
./xsubs/macro.xs:36:7: note: ')' token is here
116      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
:                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )48
                        ^
: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./xsubs/macro.xs:43:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:43:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:43:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:43:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:49:7: note: '{' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5:./xsubs/macro.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
       XSRETURN_IV((int)count);note
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
: ')' token is here
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:49:7: note: '{' token is here

      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
               ^
:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
./xsubs/macro.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ^~~~~~~~      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END:
667    ^:
21: note./xsubs/macro.xs: :expanded from macro 'STMT_END'49
:7: note: ')' token is here
#   define STMT_END     )
                        ^
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END5
:                                                   ^~~~~~~~~~~ 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 80note:: 38expanded from macro 'STMT_END':
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#  define STMT_END      )
                        ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note./xsubs/macro.xs: :expanded from macro 'STMT_START'49
:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:322/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::65163:: 5note::  expanded from macro 'XSRETURN_IV'note
: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END:
80                                                                ^:
49: ./xsubs/macro.xsnote:: 49expanded from macro 'ZAPHOD32_SCRAMBLE32':
7: note: ')' token is here
      XSRETURN_IV((int)count);#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \

      ^~~~~~~~~~~~~~~~~~~~~~~                                                ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./xsubs/macro.xs:69:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */: 
expanded from macro 'ZAPHOD32_MIX'                              ^

./xsubs/macro.xs:69:5: note: '{' token is here
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5    CHECK_PARSE_DATA;:
     ^~~~~~~~~~~~~~~~note
: ')' token is here
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:          STMT_START {                                                         \125
:                     ^3:
 note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5:./xsubs/macro.xs :warning: 69'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note
: expanded from macro 'CHECK_PARSE_DATA'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note:           } STMT_ENDexpanded from macro 'ZAPHOD32_MIX'

          ^
./xsubs/macro.xs:69:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
C.xs                                    ^~~~~~~~~~:
99:13/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666note:: 29expanded from macro 'CHECK_PARSE_DATA':
 note: expanded from macro 'STMT_START'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
#  define STMT_END      )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h                        ^:
168:5: note: '{' token is here
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116    CHECK_VOID_CONTEXT;:
48    ^~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_MIX'
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note            WARN((aTHX_ "Useless use of %s in void context", method)): 
expanded from macro 'ZAPHOD32_MIX'            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./cbc/cbc.h:225:20: note:     v2 = ROTR32(v2, 7) ^ v0;   \expanded from macro 'WARN'

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5"); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */667
:                              ^21
: note: ./xsubs/macro.xsexpanded from macro 'STMT_END':
70:5: note: '{' token is here
#   define STMT_END     )
                        ^
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'In file included from 
cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5              WARN_VOID_CONTEXT;                                               \:
               ^~~~~~~~~~~~~~~~~warning
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            WARN((aTHX_ "Useless use of %s in void context", method))
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
116:37:./cbc/cbc.h :note225: :expanded from macro 'ZAPHOD32_MIX'31
: note: expanded from macro 'WARN'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                              ^:
666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:70#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
5                                               ^:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:    v2 = ROTR32(v2, 7) ^ v0;   \20
:                               ^ 
note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:169:5: note: ')' token is here
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~./xsubs/macro.xs
:70:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :warning125: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]3
: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~    CHECK_VOID_CONTEXT;

    ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: noteC.xs: :expanded from macro 'STMT_END'119
:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#   define STMT_END     )
                        ^
              XSRETURN_EMPTY;                                                  \
In file included from               ^~~~~~~~~~~~~~cbc/idl.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3303921::
24In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note663: :
expanded from macro 'XSRETURN_EMPTY'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

    ^~~~~~~~~~~~~~~~~~                                    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:C.xs666::11929::15 :note : noteexpanded from macro 'STMT_START': 
expanded from macro 'CHECK_VOID_CONTEXT'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
              XSRETURN_EMPTY;                                                  \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h              ^~~~~~~~~~~~~~:
170:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 330note:: 35'{' token is here:
 note: expanded from macro 'XSRETURN_EMPTY'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:76:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:76:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/macro.xs:76:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:76:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:76:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:76:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:76:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/macro.xs:76:9: note: ')' token is here
170        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
:5:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ) 
                        ^
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./xsubs/macro.xs:82:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
:124:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
32: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:82:9: note: '{' token is here
note        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
: expanded from macro 'ZAPHOD32_MIX'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
./xsubs/macro.xs:82:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \

    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:82:9: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
:125:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \3
               ^
: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:./xsubs/macro.xs:82:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
667        XSRETURN_IV((int)count);:
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
21: #define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:82:9: note: ')' token is here
note        XSRETURN_IV((int)count);: 
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
expanded from macro 'STMT_END'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#   define STMT_END     )./xsubs/macro.xs:82:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
                        ^
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/macro.xs:82:9: note: ')' token is here
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
./xsubs/macro.xs:105:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                    ^~~~~~~~~~      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'

    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */666
                              ^
./xsubs/macro.xs:105:7: note: '{' token is here
:      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
29    STMT_START {                                        \
               ^
: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
./xsubs/macro.xs:105:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                              ^      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:105:7: note: ')' token is here

      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
                        ^
:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");./xsubs/macro.xs
:113:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:116:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:113:7: note: '{' token is here
48      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
: note#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./xsubs/macro.xs:113:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/macro.xs:113:7: note: ')' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]./xsubs/macro.xs:120:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);

      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:120:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
               ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: ./xsubs/macro.xsexpanded from macro 'ZAPHOD32_MIX':120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:120:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
9:               XSRETURN_EMPTY;                                                  \warning
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              XSRETURN_EMPTY;                                                  \

              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
85:39./xsubs/arg.xs::33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
     CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
note: expanded from macro 'SBOX32_MIX4'              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'

#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
                                      ^~~~~~~~~~
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \:
               ^
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
9:               XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
note: '{' token is here#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/arg.xs:33:5: note: ')' token is here

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
                        ^
:85./xsubs/arg.xs::33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
50    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: note              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
: expanded from macro 'SBOX32_MIX4'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'

                                                 ^#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^./xsubs/arg.xs:60:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:60:5: note: '{' token is here
    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h./xsubs/arg.xs:60:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/arg.xs:60:5: note: ')' token is here
    XSRETURN(items-1);3921
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):

                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
          STMT_START {                                                         \            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
1399:49          STMT_START {                                                         \
                     ^
: note: expanded from macro 'XORSHIFT128_set'
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

                                                ^
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
:1402            WARN((aTHX_ "Useless use of %s in void context", method)):
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
57: #define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/feature.xs:36:5: note: ')' token is here
note    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
: expanded from macro 'XORSHIFT128_set'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
                                                        ^#  define STMT_END      )
                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
1487:13              XSRETURN_EMPTY;                                                  \:
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
 note: #define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
')' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^

./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
:1403:3              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
: note#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
:     STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
expanded from macro 'XORSHIFT128_set'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
108 warnings generated.
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
:29:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
     STMT_START {                                        \
               ^
note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
117    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
:5:              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
 note#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END: 
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:36:5: note: ')' token is here
'{' token is here    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'

              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/feature.xs:36:5: note: ')' token is here
72    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
:47:              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
 note: #define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )expanded from macro 'STADTX_SCRAMBLE64'
                        ^
./xsubs/feature.xs
:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/feature.xs:36:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./xsubs/feature.xs:47:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:47:11: note: '{' token is here
          XSRETURN_NO;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
:79:45: note: ./xsubs/feature.xs:47:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;expanded from macro 'STADTX_SCRAMBLE64'
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'

#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    v ^= (v >> 46);                         \#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:47:11: note: '{' token is here
          XSRETURN_NO;

          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
                                            ^
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here./xsubs/feature.xs
:47:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:47:11: note: ')' token is here
          XSRETURN_NO;    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END

                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:47:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:
80          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
:3#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:47:11: note: ')' token is here
          XSRETURN_NO;:
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
 note: #define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )expanded from macro 'STADTX_SCRAMBLE64'
                        ^

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667./xsubs/feature.xs::54:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_YES;21
:          ^~~~~~~~~~~~ 
note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#   define STMT_END     )
                        ^
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
118                              ^:
5: warning./xsubs/feature.xs: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]54
:11: note: '{' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));328
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~35
: note: expanded from macro 'XSRETURN_YES'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
./xsubs/feature.xs:54:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47          XSRETURN_YES;:
           ^~~~~~~~~~~~note
: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:54:11: note: '{' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STMT_START {                                        \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:               ^79
:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:./xsubs/feature.xs3::54 :note11: :expanded from macro 'STADTX_SCRAMBLE64' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:          XSRETURN_YES;21:
           ^~~~~~~~~~~~note
: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: #   define STMT_END     )note
:                         ^expanded from macro 'XSRETURN_YES'

#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320In file included from :cbc/idl.c5::21 :
noteIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'XSRETURN':
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from     } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^55
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:./xsubs/feature.xs119::545::11 :warning : note'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
')' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));:
52    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'XSRETURN_YES'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:                                   ^~~~~~~~~~320
:7:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note666: :expanded from macro 'XSRETURN'29
: note: expanded from macro 'STMT_START'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#  define STMT_END      )

                              ^                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
./xsubs/feature.xs:54:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          XSRETURN_YES;
          ^~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:72:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h47::328 :note65: :expanded from macro 'STADTX_SCRAMBLE64' 
note: expanded from macro 'XSRETURN_YES'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:54:11: note: ')' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./xsubs/feature.xs:61:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XSRETURN_UNDEF;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:    ^~~~~~~~~~~~~~79
:45: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hnote: :expanded from macro 'STADTX_SCRAMBLE64'329
:24: note: expanded from macro 'XSRETURN_UNDEF'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^} STMT_END

  ^~~~~~~~
./xsubs/feature.xs:61:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h5::667 :note21: :'{' token is here 
note: expanded from macro 'STMT_END'
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
#   define STMT_END     )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h                        ^:
329:35: note: expanded from macro 'XSRETURN_UNDEF'
In file included from cbc/idl.c:21#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END:

In file included from                                   ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:./xsubs/feature.xs36:: 61note:: 5expanded from macro 'STADTX_SCRAMBLE64':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h329::52666:: 29note::  expanded from macro 'XSRETURN_UNDEF'note
: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END

                              ^                                                   ^~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::120315::55::  notenote: : '{' token is hereexpanded from macro 'XSRETURN'

    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));: 
expanded from macro 'STMT_START'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \./xsubs/feature.xs
:                                              ^61
:5: note: '{' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
./xsubs/feature.xs    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
61:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 79warning:: 45'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STADTX_SCRAMBLE64'
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:    v ^= (v >> 46);                         \329
:                                            ^52
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h: :expanded from macro 'XSRETURN_UNDEF'120
:5: note: ')' token is here
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:61:5: note: ')' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
mv hook.o tmphook.o
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:61:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:61:5: note: ')' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
80:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */3
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;:
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
 note:           STMT_START {                                                         \expanded from macro 'STADTX_SCRAMBLE64'
                     ^

} STMT_END
  ^~~~~~~~
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
:667:              WARN_VOID_CONTEXT;                                               \21
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT':
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
mv tmphook.o cbc/hook.o
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3037:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3037:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3037:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3037:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3095:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3095:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:3095:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3095:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3095:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3095:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3095:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:3095:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3123:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3123:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3123:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3123:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/macros.c
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  STMT_START {              \
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
             ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:281#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:150  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
:5    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
 warning  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  ^~~~~~~~~~    v ^= (v>>23);                       \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
                        ^    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

                                ^~~~~~~~
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SIP_FINAL_ROUNDS                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

  ^~~~~~~~~~~~~~~~#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                                                ^
:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
                                        ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
                        ^#   define STMT_END     )
                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ^~~~~~~~~~~~~~~~
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ):657:5: note: expanded from macro 'CX_POP_SAVEARRAY'

    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
:        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
                        ^  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'In file included from 
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
cbc/idl.c    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
21:
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                              ^~~~~~~~~~~~~~~~~~~~~~~~~    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'

    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
280:#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)6: note: ')' token is here

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'

    STMT_START {                                                \
               ^
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

  ^~~~~~~~~~#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
:280#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex):15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
                              ^~~~~~~~~~~~~~~~~~~~~~~~~  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:219  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
:    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
7  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:   SIP_ROUNDS;                               \
  ^~~~~~~~~~
note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

              ^~~~~~~~#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'

    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ^~~~~~~~~~    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  SIP_ROUNDS;                               \
  ^~~~~~~~~~
:2925:31: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: expanded from macro 'ENV_UNLOCK'
:#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:222  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
:16    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
 note  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
2627:  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
5:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
 #   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
warning:   SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

  ^~~~~~~~~~#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here

    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
666#   define STMT_END     )
                        ^
:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
98 warnings generated.
mv idl.o tmpidl.o
mv tmpidl.o cbc/idl.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/member.c
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/init.c:120:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:120:7: note: '{' token is here
      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/init.c:120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:120:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:53:9: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:123:3: note: '{' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:53:20: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:123:3: note: '{' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:123:3: note: ')' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:56:9: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
        ^
cbc/init.c:123:3: note: ')' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:56:11: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:124:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:124:3: note: '{' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:124:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:124:3: note: '{' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:124:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:124:3: note: ')' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:124:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:124:3: note: ')' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:149:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:149:9: note: '{' token is here
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:149:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:149:9: note: ')' token is here
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:162:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:162:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/init.c:162:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/init.c:162:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:163:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:163:7: note: '{' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:163:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:163:7: note: ')' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:164:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:164:7: note: '{' token is here
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:164:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:164:7: note: ')' token is here
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:167:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:167:7: note: '{' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:167:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:167:7: note: '{' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:167:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:167:7: note: ')' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:167:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:167:7: note: ')' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:176:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:176:3: note: '{' token is here
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:176:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:176:3: note: ')' token is here
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:59:9: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:177:3: note: '{' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:59:20: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:177:3: note: '{' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:177:3: note: ')' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:63:9: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
        ^
cbc/init.c:177:3: note: ')' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:63:11: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:216:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:216:9: note: '{' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/init.c:216:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:216:9: note: ')' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:220:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:53:9: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:220:5: note: '{' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:53:20: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:220:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:220:5: note: '{' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:220:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:220:5: note: ')' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:220:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:56:9: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
        ^
cbc/init.c:220:5: note: ')' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:56:11: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:221:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:221:5: note: '{' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:221:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:221:5: note: '{' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:221:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:221:5: note: ')' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:221:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:221:5: note: ')' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:231:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:231:7: note: '{' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:231:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:231:7: note: ')' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:237:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:237:5: note: '{' token is here
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:237:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:237:5: note: ')' token is here
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:238:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:59:9: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:238:5: note: '{' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:59:20: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:238:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:238:5: note: '{' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:238:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:238:5: note: ')' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:238:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:63:9: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
        ^
cbc/init.c:238:5: note: ')' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:63:11: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:253:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:253:9: note: '{' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/init.c:253:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:253:9: note: ')' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:259:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INDENT;
      ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:259:7: note: '{' token is here
      INDENT;
      ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:259:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INDENT;
      ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:259:7: note: ')' token is here
      INDENT;
      ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:263:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:263:11: note: '{' token is here
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/init.c:263:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:263:11: note: ')' token is here
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:296:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:43:9: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:296:3: note: '{' token is here
  IDLIST_INIT(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:43:20: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
                   ^
cbc/init.c:296:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:48:9: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
        ^
cbc/init.c:296:3: note: ')' token is here
  IDLIST_INIT(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:48:11: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:297:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:297:3: note: '{' token is here
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:297:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:297:3: note: '{' token is here
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:297:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:297:3: note: ')' token is here
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:297:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:297:3: note: ')' token is here
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:302:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:51:9: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:302:3: note: '{' token is here
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:51:20: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
                   ^
cbc/init.c:302:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:54:9: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
        ^
cbc/init.c:302:3: note: ')' token is here
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:54:11: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \note
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:: '{' token is here
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h158 warnings generated.
:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5:124:32: note: expanded from macro 'ZAPHOD32_MIX'
 note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    v2 = ROTR32(v2, 7) ^ v0;   \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note:                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note:5: note: ')' token is here
: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:1255: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note:3: note: expanded from macro 'ZAPHOD32_MIX'
: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
} STMT_END
  ^~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
mv init.o tmpinit.o
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
3921:
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
663:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:35:
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: expanded from macro 'ZAPHOD32_MIX'            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
663    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
35:
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:268:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
5:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'

#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \                                               ^

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
:#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:268In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:5:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
 warning: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
                                    ^~~~~~~~~~    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
In file included from     ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:162        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
:5:#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
 warning#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                              ^    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here

        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
                        ^
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hwarning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
                                     ^~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1448note:: 9expanded from macro 'STMT_START':
 note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::3163:: 5note::  expanded from macro 'SBOX32_MIX3'note
: '{' token is here
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49#   define STMT_END     )
:                        ^ 
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::1631453::513::  warningwarning: : '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1393note:: 35expanded from macro 'ZAPHOD32_SCRAMBLE32':
 note: expanded from macro 'XORSHIFT96_set'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \5
:                                  ^~~~~~~~~~ 
note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
note                              ^: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13} STMT_END:
   ^~~~~~~~note
: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);

                        ^            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h                                             ^:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);:
164            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h: :'{' token is here1396
:57: note: expanded from macro 'XORSHIFT96_set'
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \80
:                                                        ^49
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'ZAPHOD32_SCRAMBLE32':
1453:13: note: ')' token is here
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3921::
164In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h5::663 :
warningIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87    XORSHIFT96_set(*state,s0,s1,s2,t2);:
41    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: #define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \note
                                  ^~~~~~~~~~: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                              ^
88:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::1456 :note5::  expanded from macro 'ZAPHOD32_SCRAMBLE32'note
: '{' token is here
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:     XORSHIFT96_set(*state,s0,s1,s2,t2);note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'STMT_END'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46:#   define STMT_END     ) 
note                        ^: 
expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \5
:                                    ^~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note    XORSHIFT96_set(*state,s0,s1,s2,t2);: 
expanded from macro 'ZAPHOD32_MIX'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                                               ^667
:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: noteIn file included from : ')' token is herecbc/macros.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 85note:: 39expanded from macro 'STMT_END':
 note: expanded from macro 'SBOX32_MIX4'
#   define STMT_END     )
                        ^
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
168                              ^:
5: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]1482
:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::50116:: 37note::  expanded from macro 'SBOX32_MIX4'note
: expanded from macro 'ZAPHOD32_MIX'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: In file included from expanded from macro 'ZAPHOD32_MIX'
cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:    v2 = ROTR32(v2, 7) ^ v0;   \663
:
                               ^mv tmpinit.o cbc/init.o

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h168::14875:13::  warningnote: : '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]')' token is here

            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::1399125:38::3 :note : noteexpanded from macro 'XORSHIFT128_set': 
expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \21
                                     ^~~~~~~~~~:
 note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'STMT_END':666
:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
In file included from cbc/member.c            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);:
21            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h3921::
1399In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h49::663 :
noteIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'XORSHIFT128_set':
35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48:    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \ 
note                                                        ^: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490    v2 = ROTR32(v2, 7) ^ v0;   \:
5:                               ^ 
warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
169:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
} STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h  ^~~~~~~~:
1490:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 667')' token is here:
21: note: expanded from macro 'STMT_END'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);#   define STMT_END     )

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
In file included from cbc/member.c:21:
In file included from #   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                        ^3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/object.c
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663    v ^= (v >> 46);                         \:

In file included from                                             ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h115::45:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note247: :')' token is here13
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~80
:3: note: expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:37: } STMT_ENDnote
:   ^~~~~~~~expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:

In file included from                               ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::116247::513:: warning : note'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
'{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 72note:: 36expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
666                                               ^:
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:247:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h13::79 :warning45: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h5::124 :note32: :')' token is here 
note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
247:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note80: :')' token is here3
: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:             ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");note
:             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'STMT_END'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3#   define STMT_END     ):
                         ^note
: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
In file included from                                             ^cbc/member.c
:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:
:In file included from 117/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::53921::
 In file included from note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h: :')' token is here663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note:     ZAPHOD32_FINALIZE(v0,v1,v2);expanded from macro 'STADTX_SCRAMBLE64'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
} STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:  ^~~~~~~~90
:37: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 667expanded from macro 'ZAPHOD32_FINALIZE':
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h                              ^:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::26855::
5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 118note:: 5'{' token is here: 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));expanded from macro 'ZAPHOD32_FINALIZE'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from 
cbc/macros.c:21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h113::392136:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote:: 663expanded from macro 'ZAPHOD32_FINALIZE':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_FINALIZE(v0,v1,v2);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
72:36: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote:: 114expanded from macro 'STADTX_SCRAMBLE64':
3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \667
:                                   ^~~~~~~~~~21
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'STMT_END'666
:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hcbc/macros.c::7221::
47In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note3921: :
expanded from macro 'STADTX_SCRAMBLE64'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning    SIP_ROUNDS;                             \: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h175::7914::45 :note : noteexpanded from macro 'SIPROUND': 
expanded from macro 'STADTX_SCRAMBLE64'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    v ^= (v >> 46);                         \219
:                                            ^5
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h: :expanded from macro 'PERL_SIPHASH_FNC'117
:5: note: ')' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
} STMT_END
  ^~~~~~~~  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));warning
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
                                               ^note
: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h3::118 :note5: :expanded from macro 'PERL_SIPHASH_FNC' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here98
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
 warnings generated.
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
mv macros.o tmpmacros.o
mv tmpmacros.o cbc/macros.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/option.c
cbc/member.c:133:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:133:11: note: '{' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:133:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:133:11: note: ')' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:143:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:143:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:143:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:143:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:145:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:145:9: note: '{' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:145:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:145:9: note: ')' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:151:5: note: '{' token is here
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:151:5: note: ')' token is here
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:201:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:201:11: note: '{' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:201:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:201:11: note: ')' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:217:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:217:9: note: '{' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:217:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:217:9: note: ')' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:234:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:234:9: note: '{' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/member.c:234:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/member.c:234:9: note: ')' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:427:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:427:5: note: '{' token is here
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/member.c:427:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/member.c:427:5: note: ')' token is here
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:444:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:444:7: note: '{' token is here
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:444:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:444:7: note: ')' token is here
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:460:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:460:9: note: '{' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:460:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:460:9: note: ')' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:474:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:474:11: note: '{' token is here
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:20: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:474:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
        ^
cbc/member.c:474:11: note: ')' token is here
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:11: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:493:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:493:13: note: '{' token is here
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:493:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:493:13: note: ')' token is here
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:513:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:513:15: note: '{' token is here
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:20: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:513:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
        ^
cbc/member.c:513:15: note: ')' token is here
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:11: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:529:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:529:5: note: '{' token is here
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:529:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:529:5: note: ')' token is here
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:596:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:596:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:596:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:596:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:859:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:9: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:859:5: note: '{' token is here
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:20: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
                   ^
cbc/member.c:859:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:9: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
        ^
cbc/member.c:859:5: note: ')' token is here
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:11: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:900:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:900:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:900:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:900:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:900:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:900:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:900:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
        ^
cbc/member.c:900:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:902:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:902:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:902:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:902:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:902:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:902:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:902:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
        ^
cbc/member.c:902:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:906:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:9: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:906:13: note: '{' token is here
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:20: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
                   ^
cbc/member.c:906:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:9: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
        ^
cbc/member.c:906:13: note: ')' token is here
            PROPAGATE_FLAGS(pStruct->tflags);
In file included from             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: cbc/member.c:740:11: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END'{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);

          ^~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
./ppport.h:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \3814:20: note: expanded from macro 'STMT_END'

                                                ^
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cbc/member.c:909:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:         STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.hnote: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note:3813:28: note: expanded from macro 'STMT_START'
: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: 
                              ^
cbc/member.c'{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note:909:13: note: '{' token is here
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        STMT_START {                                                           \    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
                   ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: notecbc/member.c:909:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: :745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:49:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32':
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:  note: expanded from macro 'TRUNC_NAME'
note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5        STMT_START {                                                           \: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: 
        ^~~~~~~~~~
./ppport.hnote: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
:3813:28: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:909:'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note13: note: '{' token is here
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5:            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745 note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:113: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning:: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37 : note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29note: expanded from macro 'CANNOT_ACCESS_MEMBER'
: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
: note: expanded from macro 'TRUNC_NAME'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note:         STMT_START {                                                           \
                   ^
expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/member.c:909:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");: expanded from macro 'CANNOT_ACCESS_MEMBER'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
cbc/member.c:734    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:9: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
expanded from macro 'TRUNC_NAME'
        } STMT_END#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: 
'{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note:         ^expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

cbc/member.c:909:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5:cbc/member.c warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
: ')' token is here
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from 
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
cbc/object.c#  define STMT_END      )
                        ^
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from cbc/member.c:909:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:            CANNOT_ACCESS_MEMBER("non-compound");4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note        ^
cbc/member.c:909:13: note: ')' token is here
: expanded from macro 'ZAPHOD32_MIX'            CANNOT_ACCESS_MEMBER("non-compound");
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37:
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ) note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note
: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

cbc/member.c:916:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5:             TRUNC_NAME;warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:
            ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
 note: expanded from macro 'ZAPHOD32_MIX'        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: 
                              ^
cbc/member.c:916:13: note: '{' token is here
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'

        STMT_START {                                                           \    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
                   ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
cbc/member.c:916:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                     ^~~~~~~~~~            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'

        } STMT_END
        ^
cbc/member.c:916:13: note: ')' token is here
            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
:#  define STMT_END      )
                        ^
666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: notecbc/member.c:940:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:               TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
expanded from macro 'ZAPHOD32_SCRAMBLE32'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:940:15: note: '{' token is here

              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
                                                ^
        STMT_START {                                                           \
                   ^
cbc/member.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:940:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END:
        ^
cbc/member.c:940:15: note: ')' token is here
162              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END:
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
5#  define STMT_END      )
                        ^
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \cbc/member.c
:958:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        ^              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h        STMT_START {                                                           \:
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
162:5#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:958:15: note: '{' token is here
:              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
 note:         STMT_START {                                                           \')' token is here
                   ^

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: cbc/member.c:958:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'ZAPHOD32_SCRAMBLE32'              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END

        ^
cbc/member.c:958:15: note: ')' token is here
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
In file included from cbc/object.c:21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hIn file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
657    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here

    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:5        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
: #define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
warning: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
                                                 ^#   define STMT_END     )
                        ^

In file included from cbc/object.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
In file included from         v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'

    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^

                        ^
In file included from In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_ENDcbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
    ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
2215:            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
9:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
 note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'

#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'

    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    ^~~~~~~~
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \                        ^

               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ^~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

                              ^#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here

    ^~~~~~~~    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'

#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)                                              ^

                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } STMT_END    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'

    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
      ^~~~~~~~
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from     ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'

    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                                   ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here

    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    ^~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from     STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here

    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
                        ^
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
98 warnings generated.
mv object.o tmpobject.o
mv tmpobject.o cbc/object.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/pack.c
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/option.c:361:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:361:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:361:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:361:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:367:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:367:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:367:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:367:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:378:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:378:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:378:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:378:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:383:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:383:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:383:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:383:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:506:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:506:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:546:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:546:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:546:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:546:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:557:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:557:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:557:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:557:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
608 warnings generated.
cbc/option.c:895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.cmv C.o tmpC.o
:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
mv tmpC.o C.o
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:895:5: x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/sourcify.c
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:900:5: note: '{' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:900:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:900:5: note: '{' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:900:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:900:5: note: '{' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:900:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:901:5: note: '{' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:901:5: note: '{' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:901:5: note: '{' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } STMT_END
          ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
./ppport.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:3814:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
20    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
:5:    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
 warning                UPDATE_OPT(config, val);                                       \: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
                        ^    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/option.c} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:911In file included from :5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/pack.c:    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cbc/option.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:812:13: note: expanded from macro 'IVAL_OPTION'

                              ^            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:151:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
5:     IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
note: '{' token is here            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'

        STMT_START {                                                           \    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
                   ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:80:    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
49:             IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_ENDnote: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

        ^
cbc/option.c:911:5: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
                                        ^
            IMPACTS_LAYOUT(layout);                                            \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from 
                        ^
cbc/pack.ccbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
:80:        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
38: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'

            IMPACTS_PREPROC(pp);                                               \#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'

                                     ^~~~~~~~~~        STMT_START {                                                           \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                   ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5:        } STMT_END 
warning        ^: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:911:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813    v ^= (v>>23);                       \:
13                                        ^:
 note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'IVAL_OPTION':
152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88cbc/option.c::3772:: 11note::  expanded from macro 'ZAPHOD32_SCRAMBLE32'note
: expanded from macro 'IMPACTS_PREPROC'
} STMT_END
  ^~~~~~~~
        } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:          ^~~~~~~~667
:21: ./ppport.hnote:: 3814expanded from macro 'STMT_END':
20: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#  define STMT_END      )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
17                              ^:
 note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'IVAL_OPTION':
156:5: note: '{' token is here
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/option.c
:783:9/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 116note:: 48expanded from macro 'UPDATE_OPT':
 note: expanded from macro 'ZAPHOD32_MIX'
        STMT_START {                                                           \
        ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h17:: 156note:: 5expanded from macro 'IVAL_OPTION':
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");cbc/option.c
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~787
:13: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote:: 124expanded from macro 'UPDATE_OPT':
32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156            DID_CHANGE(1);                                                     \:
5            ^~~~~~~~~~~~~:
 note: ')' token is herecbc/option.c
:757:9: note: expanded from macro 'DID_CHANGE'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125        STMT_START {                                                           \:
3        ^~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_MIX'
./ppport.h:3813:28: } STMT_ENDnote
:   ^~~~~~~~expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

                              ^
cbc/option.c:911:5: note: '{' token is here
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from     IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hcbc/option.c::4820:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h17::157 :note5: :expanded from macro 'IVAL_OPTION' 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/option.c
:787:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note116: :expanded from macro 'UPDATE_OPT'37
: note: expanded from macro 'ZAPHOD32_MIX'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \cbc/option.c
:                                    ^~~~~~~~~~757
:20: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 666expanded from macro 'DID_CHANGE':
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */        STMT_START {                                                           \

                              ^                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:cbc/option.c116::91148::5 :note:  expanded from macro 'ZAPHOD32_MIX'warning
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:911:5: note: ')' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning#  define STMT_END      ): 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]                        ^

cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
cbc/option.c:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h820::15717::5 :note : noteexpanded from macro 'IVAL_OPTION': 
')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");                UPDATE_OPT(config, val);                                       \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                ^~~~~~~~~~~~~~~~~~~~~~~

cbc/option.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::789125::93::  notenote: : expanded from macro 'UPDATE_OPT'expanded from macro 'ZAPHOD32_MIX'

} STMT_END
  ^~~~~~~~
        } STMT_END
        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:cbc/option.c21::911 :note5: :expanded from macro 'STMT_END' 
note: ')' token is here
#   define STMT_END     )
                        ^
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:In file included from 820cbc/pack.c::1721::
 In file included from note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'IVAL_OPTION'3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");

          ^~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./ppport.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3814::11620::37 :note : noteexpanded from macro 'STMT_END': 
expanded from macro 'ZAPHOD32_MIX'
#  define STMT_END      )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:912:5:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4"); 
warning    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:158:5: cbc/option.cnote:: 812')' token is here:
13: note: expanded from macro 'IVAL_OPTION'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            IMPACTS_LAYOUT(layout);                                            \:
125            ^~~~~~~~~~~~~~~~~~~~~~:
3: cbc/option.cnote:: 766expanded from macro 'ZAPHOD32_MIX':
9: note: expanded from macro 'IMPACTS_LAYOUT'} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:        } STMT_END21
:        ^ 
note: expanded from macro 'STMT_END'cbc/option.c
:912:5: note: ')' token is here#   define STMT_END     )

                        ^
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/pack.c:21cbc/option.c:
:In file included from 812/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::133921::
 In file included from note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h: :expanded from macro 'IVAL_OPTION'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:        } STMT_END116
:          ^~~~~~~~37
: note: ./ppport.hexpanded from macro 'ZAPHOD32_MIX':
3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");expanded from macro 'IVAL_OPTION'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \9
:                                               ^ 
note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4"); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'IMPACTS_PREPROC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:         } STMT_ENDnote
:         ^expanded from macro 'ZAPHOD32_MIX'

cbc/option.c:912:5: note: ')' token is here
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");:
13    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note:             IMPACTS_PREPROC(pp);                                               \expanded from macro 'STMT_END'

            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11#   define STMT_END     ):
                         ^note
: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:cbc/option.c5::912 :note5: :'{' token is here 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \ 
note                                                ^: 
expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h17::87 :note41: :expanded from macro 'IVAL_OPTION' 
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5:                UPDATE_OPT(config, val);                                       \ 
note                ^~~~~~~~~~~~~~~~~~~~~~~: 
')' token is here
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END        STMT_START {                                                           \

  ^~~~~~~~                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \820
:                                     ^~~~~~~~~~17
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'IVAL_OPTION':
666:29: note: expanded from macro 'STMT_START'
                UPDATE_OPT(config, val);                                       \
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */                ^~~~~~~~~~~~~~~~~~~~~~~

                              ^
cbc/option.c:787/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::13163:: 5note::  expanded from macro 'UPDATE_OPT'note
: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49            DID_CHANGE(1);                                                     \:
             ^~~~~~~~~~~~~note
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::1387:: 41note::  expanded from macro 'UPDATE_OPT'note
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5:             DID_CHANGE(1);                                                     \note
:             ^~~~~~~~~~~~~')' token is here

cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END        STMT_START {                                                           \

  ^~~~~~~~                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/option.c:912:5: warningIn file included from : cbc/pack.c'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0): 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \:
787                                     ^~~~~~~~~~:
13: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 666expanded from macro 'UPDATE_OPT':
29: note: expanded from macro 'STMT_START'
            DID_CHANGE(1);                                                     \#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

            ^~~~~~~~~~~~~                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/option.c::164760::59::  notenote: : '{' token is hereexpanded from macro 'DID_CHANGE'

        } STMT_END
        ^
cbc/option.c    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);:
912    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote:: 80')' token is here:
49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h          ^~~~~~~~:
164:5:./ppport.h :warning3814: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]20
: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);:
17    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note                UPDATE_OPT(config, val);                                       \: 
expanded from macro 'STMT_END'                ^~~~~~~~~~~~~~~~~~~~~~~

cbc/option.c:789:9: #   define STMT_END     )note
:                         ^expanded from macro 'UPDATE_OPT'

        } STMT_END
        ^
cbc/option.c:912:5: note: ')' token is here
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from     IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~35
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:cbc/option.c167::8205::17 :warning : note'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
expanded from macro 'IVAL_OPTION'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                UPDATE_OPT(config, val);                                       \

                ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:cbc/option.c116::78937::11 :note : noteexpanded from macro 'ZAPHOD32_MIX': 
expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#  define STMT_END      ):
666                        ^:
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:     IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'ZAPHOD32_MIX'

cbc/option.c:812:13: note:     v2 = ROTR32(v2, 7) ^ v0;   \expanded from macro 'IVAL_OPTION'

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");: 
expanded from macro 'IMPACTS_LAYOUT'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125        } STMT_END:
3        ^:
 note: cbc/option.cexpanded from macro 'ZAPHOD32_MIX':
913:5: note: } STMT_END')' token is here

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:            IMPACTS_LAYOUT(layout);                                            \663
:
            ^~~~~~~~~~~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
cbc/option.cIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h766::411:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note168: :expanded from macro 'IMPACTS_LAYOUT'5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");

                        ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");expanded from macro 'IMPACTS_PREPROC'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \: 
expanded from macro 'STMT_START'                                               ^

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note
: expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
            IMPACTS_PREPROC(pp);                                               \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:            ^~~~~~~~~~~~~~~~~~~168
:5: cbc/option.cnote:: 772')' token is here:
11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'STMT_END'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3:#  define STMT_END      ) 
note                        ^: 
expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \ 
note                                    ^~~~~~~~~~: 
expanded from macro 'IVAL_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */cbc/option.c
:                              ^783
:9: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote:: 169expanded from macro 'UPDATE_OPT':
5: note: '{' token is here
        STMT_START {                                                           \
        ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3813:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h28::116 :note48: :expanded from macro 'STMT_START' 
note: expanded from macro 'ZAPHOD32_MIX'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \cbc/option.c
:                                               ^913
:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            DID_CHANGE(1);                                                     \:
            ^~~~~~~~~~~~~169
:5: cbc/option.cwarning:: 757'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
9: note: expanded from macro 'DID_CHANGE'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
        ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:124:32./ppport.h:: 3813note:: 28expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'STMT_START'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note:     IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)expanded from macro 'ZAPHOD32_MIX'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} STMT_END
  ^~~~~~~~cbc/option.c
:820:17/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 667note:: 21expanded from macro 'IVAL_OPTION':
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:            DID_CHANGE(1);                                                     \35
:
            ^~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
cbc/option.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::757170::205::  notewarning: : expanded from macro 'DID_CHANGE''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        STMT_START {                                                           \
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");                   ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \cbc/option.c
:                                    ^~~~~~~~~~913
:5: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]666
:29: note: expanded from macro 'STMT_START'
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/option.c::170820::517::  notenote: : '{' token is hereexpanded from macro 'IVAL_OPTION'

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48cbc/option.c:: 787note:: 13expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'UPDATE_OPT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5#  define STMT_END      ):
                         ^warning
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820    v2 = ROTR32(v2, 7) ^ v0;   \:
                               ^17
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'IVAL_OPTION':
170:5: note: ')' token is here
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
cbc/option.c    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
789:9: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :expanded from macro 'UPDATE_OPT'125
:3: note: expanded from macro 'ZAPHOD32_MIX'
        } STMT_END
        ^
} STMT_END
  ^~~~~~~~cbc/option.c
:914:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note667: :')' token is here21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
                UPDATE_OPT(config, val);                                       \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                ^~~~~~~~~~~~~~~~~~~~~~~171
:5cbc/option.c:: 789warning:: 11'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116#  define STMT_END      ):
37                        ^:
 note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");cbc/option.c
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~916
:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning:: 124'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5:     TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')' token is here

cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note            IMPACTS_LAYOUT(layout);                                            \: 
expanded from macro 'ZAPHOD32_MIX'            ^~~~~~~~~~~~~~~~~~~~~~

cbc/option.c:} STMT_END766
:  ^~~~~~~~9
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'IMPACTS_LAYOUT':
667:21: note: expanded from macro 'STMT_END'
        } STMT_END
        ^
cbc/option.c:916:#   define STMT_END     )5
:                        ^ 
note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:916:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:916:5: note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:916:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:916:5: note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:918:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:918:5: note: ')' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:In file included from 854cbc/pack.c::13:21 :
noteIn file included from : /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'TRISTATE_INT_OPTION':
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:20: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote:: 116expanded from macro 'STMT_END':
37: note: expanded from macro 'ZAPHOD32_MIX'
#  define STMT_END      )
                        ^
cbc/option.c:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \918
:                                    ^~~~~~~~~~5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^cbc/option.c
:855:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h13::247 :note13: :expanded from macro 'TRISTATE_INT_OPTION' 
note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48cbc/option.c:: 769note:: 9expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'IMPACTS_PREPROC'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h13::247 :note13: :expanded from macro 'TRISTATE_INT_OPTION' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");            IMPACTS_PREPROC(pp);                                               \

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/option.c::124772::329::  notenote: : expanded from macro 'ZAPHOD32_MIX'expanded from macro 'IMPACTS_PREPROC'

        } STMT_END
        ^
    v2 = ROTR32(v2, 7) ^ v0;   \cbc/option.c
:                               ^918
:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note247: :')' token is here13
: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:cbc/option.c3::855 :note13: :expanded from macro 'ZAPHOD32_MIX' 
note: expanded from macro 'TRISTATE_INT_OPTION'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
            IMPACTS_PREPROC(pp);                                               \#   define STMT_END     )

            ^~~~~~~~~~~~~~~~~~~                        ^

cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
cbc/option.c:    ZAPHOD32_FINALIZE(v0,v1,v2);918
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~5
: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]90
:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)                                               ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:    ZAPHOD32_FINALIZE(v0,v1,v2);9
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'DID_CHANGE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note:         } STMT_ENDexpanded from macro 'ZAPHOD32_FINALIZE'

        ^
cbc/option.c:918:5: note: ')' token is here
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5:    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
 notecbc/option.c: :')' token is here763
:20: note: expanded from macro 'IMPACTS_LAYOUT'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
        STMT_START {                                                           \
                   ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:921:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:921:5: note: ')' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: noteIn file included from : cbc/pack.cexpanded from macro 'STRLIST_OPTION':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]            IMPACTS_LAYOUT(layout);                                            \

            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END        SBOX32_MIX3(s0,s1,s2,"SEED STATE");

          ^~~~~~~~        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./ppport.h:3814:20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 99note:: 36expanded from macro 'STMT_END':
 note: expanded from macro 'SBOX32_MIX3'
#  define STMT_END      )
                        ^
cbc/option.c:921#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \:
5                                   ^~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
note                              ^: 
expanded from macro 'STRLIST_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
            IMPACTS_PREPROC(pp);                                               \
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");            ^~~~~~~~~~~~~~~~~~~

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::76999::947::  notenote: : expanded from macro 'IMPACTS_PREPROC'expanded from macro 'SBOX32_MIX3'

        STMT_START {                                                           \
        ^~~~~~~~~~#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \

                                              ^
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
cbc/option.c        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
772:9/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 107note:: 32expanded from macro 'IMPACTS_PREPROC':
 note: expanded from macro 'SBOX32_MIX3'
        } STMT_END
        ^
cbc/option.c:921:5    v2 = ROTR32(v2, 7) ^ v0;   \:
                                ^note
: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:
881        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
13: note: expanded from macro 'STRLIST_OPTION'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note            IMPACTS_PREPROC(pp);                                               \: 
expanded from macro 'STMT_END'            ^~~~~~~~~~~~~~~~~~~

cbc/option.c:772:11: #   define STMT_END     )note
:                         ^expanded from macro 'IMPACTS_PREPROC'

        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:921:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
In file included from cbc/pack.c        } STMT_END:
        ^21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/option.c::3921921:
:In file included from 5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:: 663note:
: In file included from ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13:             XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);note
:             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'STRLIST_OPTION'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \:
11                                  ^~~~~~~~~~:
 note: expanded from macro 'DID_CHANGE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'        } STMT_END

          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hcbc/option.c::1393:92246::5 :note : warningexpanded from macro 'XORSHIFT96_set': 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                             ^

cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:        STMT_START {                                                           \1453
:        ^~~~~~~~~~13
: warning: ./ppport.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
3813:28: note: expanded from macro 'STMT_START'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */57
:                              ^ 
note: expanded from macro 'XORSHIFT96_set'cbc/option.c
:922:5: note: '{' token is here
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1):
1453    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
13: note: cbc/option.c')' token is here:
880:13: note: expanded from macro 'STRLIST_OPTION'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3:            IMPACTS_LAYOUT(layout);                                            \ 
note            ^~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'XORSHIFT96_set'
cbc/option.c:763:20} STMT_END:
   ^~~~~~~~note
: expanded from macro 'IMPACTS_LAYOUT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
        STMT_START {                                                           \
                   ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456cbc/option.c::5922:: 5warning::  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]warning
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1393:35cbc/option.c:: 880note:: 13expanded from macro 'XORSHIFT96_set':
 note: expanded from macro 'STRLIST_OPTION'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:            IMPACTS_LAYOUT(layout);                                            \ 
note            ^~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'STMT_START'
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */922
:                              ^5
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h')' token is here:
1456:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::131393:: 46note::  expanded from macro 'STRLIST_OPTION'note
: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hcbc/option.c::1456922::55::  warningwarning: : '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    XORSHIFT96_set(*state,s0,s1,s2,t2);
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57:cbc/option.c :note881: :expanded from macro 'XORSHIFT96_set'13
: note: expanded from macro 'STRLIST_OPTION'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5:            IMPACTS_PREPROC(pp);                                               \ 
note            ^~~~~~~~~~~~~~~~~~~: 
')' token is here
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
        STMT_START {                                                           \
} STMT_END        ^~~~~~~~~~

  ^~~~~~~~
./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3813667::2821::  notenote: : expanded from macro 'STMT_START'expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:922:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:922:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:922:5: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h            IMPACTS_PREPROC(pp);                                               \:
3921            ^~~~~~~~~~~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663cbc/option.c:
:In file included from 772/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::1135::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote:: 1482expanded from macro 'IMPACTS_PREPROC':
9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:cbc/option.c1482::9922:: 5note::  '{' token is herewarning
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
85:50: note: expanded from macro 'SBOX32_MIX4'cbc/option.c
:883:13: note: expanded from macro 'STRLIST_OPTION'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:922:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
cbc/option.c        v2 = ROTL32(v2, 4) - v0;    \:
922                                    ^:
5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hwarning:: 1482'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
9: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h13::97 :note3: :expanded from macro 'STRLIST_OPTION' 
note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )
cbc/option.c                        ^:
760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:922:5: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h            DID_CHANGE(sv_val != NULL);                                        \:
35            ^~~~~~~~~~~~~~~~~~~~~~~~~~:

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487cbc/option.c::13760:: 11warning::  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note
: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#  define STMT_END      )1399
:                        ^38
: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: notecbc/option.c: :expanded from macro 'STMT_START'925
:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
763                              ^:
9: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote:: 1487expanded from macro 'IMPACTS_LAYOUT':
13: note: '{' token is here
        STMT_START {                                                           \            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);

        ^~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h./ppport.h::38131399::2849::  notenote: : expanded from macro 'STMT_START'expanded from macro 'XORSHIFT128_set'

#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

                              ^
cbc/option.c:925:7: note: '{' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:925:7            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);: 
warning            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^        } STMT_END

        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1487:cbc/option.c13::925 :note7: :')' token is here 
note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);766
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~11
: note: expanded from macro 'IMPACTS_LAYOUT'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1403:3: note: expanded from macro 'XORSHIFT128_set'        } STMT_END

          ^~~~~~~~
} STMT_END./ppport.h
:  ^~~~~~~~3814
:20:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note667: :expanded from macro 'STMT_END'21
: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/option.c
:928:7:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :warning1399: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]38
: note: expanded from macro 'XORSHIFT128_set'
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \9
:                                     ^~~~~~~~~~ 
note: expanded from macro 'DID_CHANGE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
3813                              ^:
28: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote:: 1490expanded from macro 'STMT_START':
5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:cbc/option.c1399::92849::7 : notenote: : expanded from macro 'XORSHIFT128_set''{' token is here

      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \:
757                                                ^:
20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:928:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:928:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:932:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:932:7: note: '{' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:932:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:932:7: note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]        } STMT_END

          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_END      )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::9341403::73::  warningnote: : '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'XORSHIFT128_set'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:      DID_CHANGE(sv_val != NULL);21
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STMT_END'
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'#   define STMT_END     )

                        ^
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:934:7: note: '{' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:934:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:934:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:938:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:938:7: note: '{' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:938:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:938:7: note: ')' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:942:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:942:9: note: '{' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:942:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:942:9: note: '{' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:942:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:942:9: note: ')' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:942:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:942:9: note: ')' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:cbc/option.c72::47953:: 7note::  expanded from macro 'STADTX_SCRAMBLE64'warning
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \      ^~~~~~~~~~~~~~~~~

                                              ^
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:953:7: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning      IMPACTS_LAYOUT(0);: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]      ^~~~~~~~~~~~~~~~~

cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
        STMT_START {                                                           \
                   ^
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
cbc/option.c:953:7:    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17)); 
warning    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note:       IMPACTS_LAYOUT(0);expanded from macro 'STADTX_SCRAMBLE64'

      ^~~~~~~~~~~~~~~~~
cbc/option.c} STMT_END:
766  ^~~~~~~~:
9: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'IMPACTS_LAYOUT'667
:21: note: expanded from macro 'STMT_END'
        } STMT_END
        ^
cbc/option.c#   define STMT_END     ):
953                        ^:
7: note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921        } STMT_END:

In file included from           ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from ./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::381455::
20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 114note:: 5expanded from macro 'STMT_END':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:cbc/option.c47:: 957note:: 9expanded from macro 'STADTX_SCRAMBLE64':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:957:9: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]        UPDATE_OPT(enumType, pOpt->value);

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
        STMT_START {                                                           \
                   ^
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
cbc/option.c:957:9#   define STMT_END     ):
                         ^warning
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.cIn file included from :cbc/pack.c787::2113:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 3921expanded from macro 'UPDATE_OPT':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9:    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835)); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'DID_CHANGE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
        STMT_START {                                                           \                                   ^~~~~~~~~~

        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:./ppport.h666::381329::28 :note : noteexpanded from macro 'STMT_START': 
expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:                              ^115
:5: cbc/option.cnote:: 957'{' token is here:
9: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        UPDATE_OPT(enumType, pOpt->value);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
72:47:cbc/option.c :note787: :expanded from macro 'STADTX_SCRAMBLE64'13
: note: expanded from macro 'UPDATE_OPT'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:957:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:957:9: note: ')' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:957:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:957:9: note: ')' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:967:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:967:7: note: '{' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:967:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:967:7: note: ')' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:969:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:969:7: note: '{' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:969:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:969:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:cbc/option.c:1041:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1041:3: note: '{' token is here
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1041:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1041:3: note: ')' token is here
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1043:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1043:3: note: '{' token is here
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1043:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1043:3: note: ')' token is here
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1044:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1044:3: note: '{' token is here
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1044:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
150 warnings generated.
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1044:3: note: ')' token is here
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1045:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1045:3: note: '{' token is here
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'        STMT_START {                                                           \

                   ^
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
mv member.o tmpmember.o
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^cbc/option.c
:1045:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3::238 :3warning::  note'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]: 
expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1045:3: note: ')' token is here
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
cbc/option.c:1046:3:   SIP_ROUNDS;                               \warning
:   ^~~~~~~~~~
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180cbc/option.c::51014:: 11note::  expanded from macro 'SIPROUND'note
: expanded from macro 'FLAG_OPTION'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note          HV_STORE_CONST(hv, #name, sv);: 
expanded from macro 'STMT_END'          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./cbc/cbc.h:272:9:#   define STMT_END     ) 
note                        ^: 
expanded from macro 'HV_STORE_CONST'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~        STMT_START {                                                           \

        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1046:3: note: '{' token is here    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:  STMT_START {              \1014
:  ^~~~~~~~~~11
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'FLAG_OPTION':
666:29: note: expanded from macro 'STMT_START'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
        STMT_START {                                                           \
                   ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/option.c:1046:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:          HV_STORE_CONST(hv, #name, sv);281
:          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~6
: warning: ./cbc/cbc.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;        ^

     ^~~~~~~~
cbc/option.c:1046:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 180note:: 3')' token is here:
 note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    ): 
expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
        } STMT_END
          ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5./ppport.h:: 3814note:: 20expanded from macro 'SIPROUND':
 note: expanded from macro 'STMT_END'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#  define STMT_END      ):
667:                        ^21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/option.c:1047:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c  STMT_START {              \:
1014  ^~~~~~~~~~:
11: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'FLAG_OPTION'666
:29: note: expanded from macro 'STMT_START'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
        STMT_START {                                                           \
        ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
./ppport.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3813::28128::15 :note : noteexpanded from macro 'STMT_START': 
'{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                              ^175
:14:cbc/option.c :note1047: :expanded from macro 'SIPROUND'3
: note: '{' token is here
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
cbc/option.c:1047:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
               ^~~~~~~~note
: expanded from macro 'FLAG_OPTION'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  } STMT_END
    ^~~~~~~~./cbc/cbc.h:
276:9:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note667: :expanded from macro 'HV_STORE_CONST'21
: note: expanded from macro 'STMT_END'
        } STMT_END
        ^
#   define STMT_END     )cbc/option.c
:                        ^1047
:3: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :')' token is here244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  SIP_FINAL_ROUNDS                          \  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ^~~~~~~~~~~~~~~~
cbc/option.c:1014:11: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 281expanded from macro 'FLAG_OPTION':
24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;276
:                       ^~~~~~~~11
: note: expanded from macro 'HV_STORE_CONST'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note        } STMT_END: 
expanded from macro 'SIPROUND'          ^~~~~~~~

./ppport.h:3814:20: note:   STMT_START {              \expanded from macro 'STMT_END'

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29#  define STMT_END      ): 
note                        ^: 
expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
cbc/option.c:1049:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  STMT_START {              \
             ^
cbc/option.c:1022/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::11244:: 3note::  expanded from macro 'IVAL_OPTION'note
: expanded from macro 'PERL_SIPHASH_FNC'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1049:3: note: '{' token is here
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/option.c:1049:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )

  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hcbc/option.c::1751022::311: :note : noteexpanded from macro 'SIPROUND': 
expanded from macro 'IVAL_OPTION'
  STMT_START {              \
  ^~~~~~~~~~
          HV_STORE_CONST(hv, #name, sv);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
29: note./cbc/cbc.h: :expanded from macro 'STMT_START'276
:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1049:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */3
:                              ^ 
note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  SIP_FINAL_ROUNDS                          \  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:cbc/option.c33::1022 :note11: :'{' token is here 
note: expanded from macro 'IVAL_OPTION'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~          HV_STORE_CONST(hv, #name, sv);

          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h./cbc/cbc.h::175276::1411::  notenote: : expanded from macro 'SIPROUND'expanded from macro 'HV_STORE_CONST'

        } STMT_END
          ^~~~~~~~  STMT_START {              \

             ^
./ppport.h:3814/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::20244:: 3note::  expanded from macro 'STMT_END'note
: expanded from macro 'PERL_SIPHASH_FNC'
#  define STMT_END      )
                        ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/option.c:1050:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hcbc/option.c::2811050::333::  warningnote: : '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'{' token is here

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
180:3: cbc/option.cnote:: 1022expanded from macro 'SIPROUND':
11: note: expanded from macro 'IVAL_OPTION'  } STMT_END

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
        STMT_START {                                                           \
                   ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/option.c:1050:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1050:3: note: ')' token is here
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1051:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1051:3: note: '{' token is here
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1051:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1051:3: note: ')' token is here
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1052:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1052:3: note: '{' token is here
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1052:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1052:3: note: ')' token is here
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1053:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1053:3: note: '{' token is here
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1053:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1053:3: note: ')' token is here
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1054:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1054:3: note: '{' token is here
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1054:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1054:3: note: ')' token is here
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1055:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1055:3: note: '{' token is here
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1055:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1055:3: note: ')' token is here
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1056:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1056:3: note: '{' token is here
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1056:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1056:3: note: ')' token is here
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1057:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1057:3: note: '{' token is here
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1057:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1057:3: note: ')' token is here
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1058:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1058:3: note: '{' token is here
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1058:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1058:3: note: ')' token is here
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1059:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1059:3: note: '{' token is here
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1059:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1059:3: note: ')' token is here
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1060:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1060:3: note: '{' token is here
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
mv tmpmember.o cbc/member.o
cbc/option.c:1060:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1060:3: note: ')' token is here
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1062:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1062:3: note: '{' token is here
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1062:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1062:3: note: ')' token is here
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1064:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1064:3: note: '{' token is here
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1064:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1064:3: note: ')' token is here
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1066:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1066:3: note: '{' token is here
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1066:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1066:3: note: ')' token is here
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1067:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1067:3: note: '{' token is here
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1067:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1067:3: note: ')' token is here
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1068:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1068:3: note: '{' token is here
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1068:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1068:3: note: ')' token is here
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1069:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1069:3: note: '{' token is here
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1069:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1069:3: note: ')' token is here
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1072:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1072:3: note: '{' token is here
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1072:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1072:3: note: ')' token is here
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1074:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1074:3: note: '{' token is here
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1074:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1074:3: note: ')' token is here
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1075:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1075:3: note: '{' token is here
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1075:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1075:3: note: ')' token is here
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1078:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1078:3: note: '{' token is here
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1078:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1078:3: note: ')' token is here
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/tag.c
cbc/option.c:1133:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1133:5: note: '{' token is here
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1133:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1133:5: note: ')' token is here
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1134:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1134:5: note: '{' token is here
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1134:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1134:5: note: ')' token is here
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1135:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1135:5: note: '{' token is here
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1135:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1135:5: note: ')' token is here
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1136:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1136:5: note: '{' token is here
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1136:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1136:5: note: ')' token is here
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1137:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1137:5: note: '{' token is here
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1137:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1137:5: note: ')' token is here
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1138:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1138:5: note: '{' token is here
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1138:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1138:5: note: ')' token is here
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1139:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1139:5: note: '{' token is here
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1139:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1139:5: note: ')' token is here
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1140:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1140:5: note: '{' token is here
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1140:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1140:5: note: ')' token is here
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1141:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1141:5: note: '{' token is here
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1141:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1141:5: note: ')' token is here
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1142:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1142:5: note: '{' token is here
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1142:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1142:5: note: ')' token is here
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1143:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1143:5: note: '{' token is here
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1143:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1143:5: note: ')' token is here
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1144:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1144:5: note: '{' token is here
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1144:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1144:5: note: ')' token is here
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1145:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1145:5: note: '{' token is here
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1145:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1145:5: note: ')' token is here
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1146:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1146:5: note: '{' token is here
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1146:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1146:5: note: ')' token is here
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1147:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1147:5: note: '{' token is here
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1147:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1147:5: note: ')' token is here
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1148:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1148:5: note: '{' token is here
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1148:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1148:5: note: ')' token is here
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1149:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1149:5: note: '{' token is here
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1149:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1149:5: note: ')' token is here
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'In file included from 
cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13:    CX_POP_SAVEARRAY(cx); 
note    ^~~~~~~~~~~~~~~~~~~~: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~2209
:5: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1403:3: note: expanded from macro 'XORSHIFT128_set'
    CX_POP_SAVEARRAY(cx);
} STMT_END    ^~~~~~~~~~~~~~~~~~~~

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::662667::721::  notenote: : expanded from macro 'CX_POP_SAVEARRAY'expanded from macro 'STMT_END'

    } STMT_END
      ^~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:    v ^= (v >> 46);                         \2619
:                                            ^5
: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]117
:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));note
:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'ENV_LOCK'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex):
21                              ^~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:In file included from  cbc/sourcify.cnote:: 21expanded from macro 'STMT_START':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::362924:: 31note::  expanded from macro 'STADTX_SCRAMBLE64'note
: expanded from macro 'ENV_LOCK'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:: 214note:: 16expanded from macro 'STMT_START':
 note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119    } STMT_END:
5      ^~~~~~~~:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/pack.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::2172:
:In file included from 36/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 6161note:
: expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h666::292529::31 :note : noteexpanded from macro 'STMT_START': 
expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h222::1205::5 :note : noteexpanded from macro 'MUTEX_UNLOCK': 
'{' token is here
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
In file included from     ENV_UNLOCK;cbc/sourcify.c
:    ^~~~~~~~~~21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::2925663::
31/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 274note:: 6expanded from macro 'ENV_UNLOCK':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h227::1757::3 :note : noteexpanded from macro 'MUTEX_UNLOCK': 
expanded from macro 'SIPROUND'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  STMT_START {              \667
:  ^~~~~~~~~~21
: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/pack.c:292:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:292:5: note: '{' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:292:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:292:5: note: ')' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:300:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:300:5: note: '{' token is here
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:300:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:300:5: note: ')' token is here
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:302:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:302:5: note: '{' token is here
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:302:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:302:5: note: ')' token is here
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:305:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:305:5: note: '{' token is here
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:305:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:305:5: note: ')' token is here
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:308:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:308:5: note: '{' token is here
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:308:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:308:5: note: ')' token is here
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:405:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:405:5: note: '{' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:405:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:405:5: note: ')' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:413:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:413:5: note: '{' token is here
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:413:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:413:5: note: ')' token is here
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:415:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:415:5: note: '{' token is here
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:415:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:415:5: note: ')' token is here
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:418:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:418:5: note: '{' token is here
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:418:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:418:5: note: ')' token is here
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:421:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:421:5: note: '{' token is here
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:421:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:421:5: note: ')' token is here
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:735:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:735:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:735:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:735:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:735:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:735:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:735:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:735:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:782:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:782:5: note: '{' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:782:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:782:5: note: ')' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:796:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:796:7: note: '{' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:796:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:796:7: note: '{' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:796:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:796:7: note: ')' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:796:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:796:7: note: ')' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:846:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:846:11: note: '{' token is here
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/pack.c:846:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/pack.c:846:11: note: ')' token is here
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:848:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:848:11: note: '{' token is here
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:848:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:848:11: note: ')' token is here
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:855:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:855:11: note: '{' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:855:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:855:11: note: '{' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:855:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:855:11: note: ')' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:855:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:855:11: note: ')' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:859:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:859:7: note: '{' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:859:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:859:7: note: ')' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:862:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:862:7: note: '{' token is here
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:862:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:862:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:909:5: note: '{' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:909:5: note: ')' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:914:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:914:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:914:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:914:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:914:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:914:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:914:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:914:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:936:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:936:13: note: '{' token is here
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:936:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:936:13: note: ')' token is here
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:991:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:991:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:991:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:991:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:991:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:991:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:991:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:991:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1034:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1034:5: note: '{' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1034:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1034:5: note: '{' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1034:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1034:5: note: ')' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1034:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1034:5: note: ')' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1056:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1056:7: note: '{' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1056:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1056:7: note: '{' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1056:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1056:7: note: ')' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1056:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1056:7: note: ')' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1089:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1089:7: note: '{' token is here
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1089:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1089:7: note: ')' token is here
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1166:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1166:5: note: '{' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1166:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1166:5: note: ')' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1195:9: note: '{' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1195:9: note: '{' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1195:9: note: ')' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1195:9: note: ')' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1201:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1201:9: note: '{' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1201:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1201:9: note: '{' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1201:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1201:9: note: ')' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1201:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1201:9: note: ')' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1206:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1206:7: note: '{' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1206:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1206:7: note: '{' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1206:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:1206:7: note: ')' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1206:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:1206:7: note: ')' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1226:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1226:7: note: '{' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1226:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:1226:7: note: ')' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1231:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1231:9: note: '{' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1231:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1231:9In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
 note: ')' token is here
        WARN((aTHX_ "'%s' should be an array reference",/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'

    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
./cbc/cbc.h    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
:    STMT_START {                                                        \
               ^
225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END                        ^
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/pack.c:1238:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'

    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);cbc/pack.c
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
:    STMT_START {                                                        \
               ^
75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.hIn file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END3813
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
:        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )28
                        ^
: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1238:7: note: '{' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1238:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1238:7: note: '{' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1238:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1238:7: note: ')' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1238:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1238:7: note: ')' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1246:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1246:7: note: '{' token is here
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./cbc/cbc.hcbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
225:#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)31
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
:     STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
expanded from macro 'WARN'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/pack.c:1246:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.hIn file included from :cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;225
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
:71#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex):
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
     STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'WARN'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1246:7:In file included from  cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;note
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
: ')' token is here#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1263:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1263:7: note: '{' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1263:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1263:7: note: ')' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1270:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1270:7: note: '{' token is here
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1270:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1270:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1308:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:11: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1308:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1308:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1308:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:13: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1357:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1357:5: note: '{' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1357:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1357:5: note: ')' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1367:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1367:3: note: '{' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1367:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1367:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1387:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1387:15: note: '{' token is here
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1387:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1387:15: note: cbc/sourcify.c:194:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
')' token is here      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'

        STMT_START {                     \
        ^~~~~~~~~~
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:194:7: note: '{' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:194:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:194:7: note: '{' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:194:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:194:7: note: ')' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:194:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:194:7: note: ')' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1420:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cbc/sourcify.c:207:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;

        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
                SvSETMAGIC(value);#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:207:9: note: '{' token is here

        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
                ^~~~~~~~~~~~~~~~~        STMT_START {                     \
                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'cbc/sourcify.c:207:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:207:9: note: '{' token is here

        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
                      ^~~~~~~~~~            SRC_INDENT;                  \

            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \./ppport.h
                   ^
:3813:28: notecbc/sourcify.c:207:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:         CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
expanded from macro 'STMT_START'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:207:9: note: ')' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.ccbc/sourcify.c:207:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END1420
        ^
cbc/sourcify.c:207:9: note: ')' token is here
:        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END17
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
:#  define STMT_END      )
                        ^
 note: '{' token is here
                SvSETMAGIC(value);
                ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^cbc/sourcify.c:223:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:223:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:223:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:223:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
cbc/pack.c            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
:        STMT_START {                     \1420
                   ^
:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/sourcify.c:223:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:223:9: note: ')' token is here
                SvSETMAGIC(value);        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'

            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END                ^~~~~~~~~~~~~~~~~
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: cbc/sourcify.c:223:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END: 
        ^
cbc/sourcify.c:223:9: note: ')' token is here
expanded from macro 'SvSETMAGIC'        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END

          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
cbc/pack.c:1420:17: notecbc/sourcify.c: :233:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;')' token is here
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'

        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */                SvSETMAGIC(value);
                              ^
cbc/sourcify.c:233:5: note: '{' token is here
    CHECK_SET_KEYWORD;

    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
                ^~~~~~~~~~~~~~~~~        STMT_START {                     \
                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: cbc/sourcify.c:233:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'SvSETMAGIC'    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'

            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:233:5: note: '{' token is here
    CHECK_SET_KEYWORD;#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'

            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
                                                                             ^~~~~~~~        STMT_START {                     \

                   ^
./ppport.h:3814:20:cbc/sourcify.c:233:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
     CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
note:             SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:233:5: note: ')' token is here
expanded from macro 'STMT_END'    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'

            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#  define STMT_END      )
                        ^
cbc/sourcify.c:233:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:233:5: note: ')' token is here
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:262:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:9: note: expanded from macro 'SvGROW_early'
cbc/pack.c        STMT_START {                                   \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:1432:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:262:3: note: '{' token is here
9  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:20: note: expanded from macro 'SvGROW_early'
:         STMT_START {                                   \
                   ^
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:cbc/sourcify.c:262:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
28  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:9: note: expanded from macro 'SvGROW_early'
:        } STMT_END
        ^
cbc/sourcify.c:262:3: note: ')' token is here
   SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:11: note: expanded from macro 'SvGROW_early'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )note
                        ^
: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1432:9: note: '{' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
cbc/sourcify.c:281:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
        STMT_START {                                                           \#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:281:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'

        STMT_START {                     \
                   ^
                   ^
cbc/sourcify.c:281:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:281:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:297:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:297:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/pack.ccbc/sourcify.c:297:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END:
        ^
cbc/sourcify.c:297:5: note: ')' token is here
    SRC_INDENT;1432
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END:
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
9#  define STMT_END      )
                        ^
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/pack.c:1432:9: note: ')' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);cbc/sourcify.c:306:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~        STMT_START {                     \

        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
./cbc/cbc.h#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
                              ^
cbc/sourcify.c:306:7: note: '{' token is here
      SRC_INDENT;315
      ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
:        STMT_START {                     \11
                   ^
: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
cbc/sourcify.c:306:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:306:7: note: ')' token is here
      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:321:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:321:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:321:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_ENDcbc/pack.c
        ^
cbc/sourcify.c:321:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END:
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
1441#  define STMT_END      )
                        ^
:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
cbc/sourcify.c:355:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SvGROW_early(s, SVG_STRUCT);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:9: note: expanded from macro 'SvGROW_early'
#    define XCPT_TRY_END      JMPENV_POP;        STMT_START {                                   \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'

                              ^~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:355:3: note: '{' token is here
  SvGROW_early(s, SVG_STRUCT);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:20: note: expanded from macro 'SvGROW_early'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:        STMT_START {                                   \
                   ^
131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^cbc/sourcify.c:355:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  SvGROW_early(s, SVG_STRUCT);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:9: note: expanded from macro 'SvGROW_early'
        } STMT_END
        ^
cbc/sourcify.c:355:3: note: ')' token is here
cbc/pack.c  SvGROW_early(s, SVG_STRUCT);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:11: note: expanded from macro 'SvGROW_early'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
:#  define STMT_END      )
                        ^
1441:3: note: '{' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.ccbc/sourcify.c:389:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
:        STMT_START {                     \1441
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:3:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:389:5: note: '{' token is here
    SRC_INDENT; 
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
warning        STMT_START {                     \: 
                   ^
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
cbc/sourcify.c  ^~~~~~~~~~~~:389:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;

    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:389:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.ccbc/sourcify.c::407:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;1441
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
:3        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
: note#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:407:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
: ')' token is here        STMT_START {                     \
                   ^

  XCPT_TRY_END
  ^~~~~~~~~~~~cbc/sourcify.c:407:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;

    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:407:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1453:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1453:5: note: '{' token is here
    XCPT_RETHROW;
cbc/sourcify.c:480:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'

        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
./ppport.h:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:480:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
6661:        STMT_START {                     \
                   ^
31: note: expanded from macro 'XCPT_RETHROW'
cbc/sourcify.c:480:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:480:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1453:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1453:5: note: ')' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1465:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1465:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1465:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1465:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1470:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1470:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1470:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1470:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1476:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1476:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1476:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1476:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1525:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1525:5: note: '{' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1525:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1525:5: note: ')' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1528:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:11: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1528:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1528:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1528:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:13: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1563:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1563:9: note: '{' token is here
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1563:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1563:9: note: ')' token is here
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1566:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1566:9: note: '{' token is here
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1566:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1566:9: note: ')' token is here
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1602:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1602:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1602:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1602:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1607:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1607:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1607:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1607:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1613:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1613:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1613:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1613:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1648:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:11: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1648:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1648:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1648:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:13: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1777:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1777:5: note: '{' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1777:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1777:5: note: ')' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1795:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1795:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1795:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1795:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1834:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1834:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1834:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1834:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1840:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1840:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1840:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1840:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1854:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1854:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1854:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1854:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1858:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1858:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1858:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1858:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1864:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1864:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1864:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1864:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1880:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1880:7: note: '{' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1880:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1880:7: note: ')' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1909:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1909:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1914:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1914:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1920:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1920:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1920:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1920:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2035:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:43:9: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2035:3: note: '{' token is here
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:43:20: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2035:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:48:9: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
        ^
cbc/pack.c:2035:3: note: ')' token is here
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:48:11: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2036:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2036:3: note: '{' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2036:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2036:3: note: '{' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2036:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:2036:3: note: ')' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2036:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:2036:3: note: ')' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2105:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:51:9: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2105:3: note: '{' token is here
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:51:20: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2105:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:54:9: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
        ^
cbc/pack.c:2105:3: note: ')' token is here
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:54:11: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
132 warnings generated.
mv sourcify.o tmpsourcify.o
mv tmpsourcify.o cbc/sourcify.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/type.c
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/tag.c:384:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:384:7: note: '{' token is here
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/tag.c:384:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/tag.c:384:7: note: ')' token is here
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/tag.c:386:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:386:9: note: '{' token is here
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/tag.c:386:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/tag.c:386:9: note: ')' token is here
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/tag.c:391:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:391:9: note: '{' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/tag.c:391:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/tag.c:391:9: note: ')' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
388 warnings generated.
mv option.o tmpoption.o
mv tmpoption.o cbc/option.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/typeinfo.c
104 warnings generated.
mv tag.o tmptag.o
mv tmptag.o cbc/tag.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP cbc/util.c
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:
              ^~~~~~~~
 note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note  STMT_START {              \
  ^~~~~~~~~~
: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::150:5: warning280: :15: note: '{' token is here
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41:    ,SIPROUND;SIPROUND; 
              ^~~~~~~~
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);  STMT_START {              \

             ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: } STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:expanded from macro 'PERL_SIPHASH_FNC'
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from   SIP_ROUNDS;                               \
  ^~~~~~~~~~
cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5:180:3: note: expanded from macro 'SIPROUND'
: note: ')' token is here  } STMT_END

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21  SIP_ROUNDS;                               \:
  ^~~~~~~~~~
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38:     ^~~~~~~~note
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
:667:21: note:                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29expanded from macro 'STMT_END'
: note: expanded from macro 'STMT_START'#   define STMT_END     )
                        ^

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
'{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note  SIP_ROUNDS;                               \
  ^~~~~~~~~~
: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175    v ^= (v>>23);                       \:
3: note: expanded from macro 'SIPROUND'
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
  STMT_START {              \
  ^~~~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: } STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:expanded from macro 'STMT_START'
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5  SIP_FINAL_ROUNDS                          \:
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");:
281:6: note: '{' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37
: note: expanded from macro 'ZAPHOD32_MIX'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'STMT_START':175:14: note: expanded from macro 'SIPROUND'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5:   STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
244    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116::483: note: expanded from macro 'PERL_SIPHASH_FNC'
: note: expanded from macro 'ZAPHOD32_MIX'
  SIP_FINAL_ROUNDS                          \
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND; 
     ^~~~~~~~
note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from   SIP_FINAL_ROUNDS                          \cbc/typeinfo.c
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
:281:6: In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4note: ')' token is here
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;: 
     ^~~~~~~~
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29667:21: note: expanded from macro 'STMT_END'
: note: expanded from macro 'STMT_START'#   define STMT_END     )
                        ^

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
  SIP_FINAL_ROUNDS                          \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note  ^~~~~~~~~~~~~~~~
: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:1755: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;125
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
3: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
note:   SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
expanded from macro 'ZAPHOD32_MIX'    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
} STMT_END  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:  SIP_FINAL_ROUNDS                          \3921
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
:
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )In file included from 
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
In file included from   STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */35
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
In file included from     ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
4  SIP_FINAL_ROUNDS                          \:

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
                                    ^~~~~~~~~~    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
258 warnings generated.
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);38
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
 note#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: expanded from macro 'XORSHIFT128_set'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )                              ^
                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hIn file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);1487
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:13#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: note#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
: '{' token is here    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note:     ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
expanded from macro 'XORSHIFT128_set'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from #define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                                                ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
13    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
     v ^= (v>>23);                       \warning
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:1402:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \57
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: note#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
: expanded from macro 'XORSHIFT128_set'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:667:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");21
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
 note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
expanded from macro 'STMT_END'#   define STMT_END     )
                        ^

In file included from #   define STMT_END     )cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
In file included from cbc/typeinfo.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:21:
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note: expanded from macro 'XORSHIFT128_set'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                     ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:29:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
 note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");expanded from macro 'STMT_START'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
                                                ^    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \1490
                                               ^
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");')' token is here
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:1403#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \:
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
3: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
note:     ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
expanded from macro 'XORSHIFT128_set'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'STMT_END'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
#   define STMT_END     )
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )                        ^
                        ^

In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
In file included from cbc/typeinfo.c:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
21:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
3921:
In file included from #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
                                   ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
                        ^
:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \                                              ^
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
79    v2 = ROTR32(v2, 7) ^ v0;   \:
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
45:            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
 #   define STMT_END     )
                        ^
note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
21    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
:#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \ 
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'STMT_END'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \#   define STMT_END     )
                                               ^

                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ZAPHOD32_FINALIZE(v0,v1,v2);36
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
:    v1 = ROTL32(v1, 17);           \ 
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
note    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
: #   define STMT_END     )
                        ^
expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hmv pack.o tmppack.o
:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        SBOX32_MIX3(s0,s1,s2,"SEED STATE");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
:116:#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \5
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: note#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
: '{' token is here        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'

#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
5:            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
 warning#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \: 
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note:             XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
expanded from macro 'STADTX_SCRAMBLE64'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    v ^= (v >> 46);                         \
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                            ^    XORSHIFT96_set(*state,s0,s1,s2,t2);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \:
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
116:5#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
:    XORSHIFT96_set(*state,s0,s1,s2,t2); 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
note: #define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \')' token is here
                                             ^

    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
:80    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
:3    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ):
                        ^
 note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
55:
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
:5        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
: #define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
:666        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
:29        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
 note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                              ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
117:5#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
:             XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);note
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
: '{' token is here#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^

    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);72
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~47
: note: expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1402:57: note: expanded from macro 'XORSHIFT128_set'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hcbc/util.c::11721::
5In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning3921: :
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45:    XORSHIFT128_set(*state,s0,s1,s2,s3,t2); 
note    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
} STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h  ^~~~~~~~:
1490:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote:: 667'{' token is here:
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h                                   ^~~~~~~~~~:
1490:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning666: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]29
: note: expanded from macro 'STMT_START'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
note                              ^: 
expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));: 
')' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \: 
expanded from macro 'XORSHIFT128_set'                                              ^

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
mv tmppack.o cbc/pack.o
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \    ,SIPROUND;
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here

    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
     ^~~~~~~~#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
                              ^
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
:238    SIP_ROUNDS;                             \
    ^~~~~~~~~~
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
14    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END:
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
 note    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
:     ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
expanded from macro 'SIPROUND'#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'

    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

             ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
:    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
238  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
:3    SIP_ROUNDS;                             \
    ^~~~~~~~~~
: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \In file included from 
cbc/type.c    ^~~~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::2806161::
15:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h :note2209: :5')' token is here:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    CX_POP_SAVEARRAY(cx);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~~~~~~~~~~~~~:
180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END    ,SIPROUND;
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);

    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )     ^~~~~~~~
                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \  SIP_ROUNDS;                               \

                        ^  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 219note:: 5')' token is here:
 note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5    SIP_ROUNDS;                             \:
     ^~~~~~~~~~note
: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~:
280:6/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666warning:: 29'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */175
:                              ^3
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29  SIP_FINAL_ROUNDS                          \:
   ^~~~~~~~~~~~~~~~note
: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::14238:: 3note::  expanded from macro 'SIPROUND'note
: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244  SIP_ROUNDS;                               \:
3  ^~~~~~~~~~:
 note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:6: note: '{' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/bitfields.c
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6  } STMT_END:
   ^warning
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:  SIP_FINAL_ROUNDS                          \3
:  ^~~~~~~~~~~~~~~~ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6:   } STMT_ENDnote
:   ^')' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:   SIP_ROUNDS;                               \note
:   ^~~~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6  } STMT_END:
     ^~~~~~~~note
: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note:: 3expanded from macro 'SIPROUND':
 note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note  SIP_FINAL_ROUNDS                          \: 
expanded from macro 'STMT_END'  ^~~~~~~~~~~~~~~~

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :expanded from macro 'PERL_SIPHASH_FNC'275
:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::175280::315::  notewarning: : expanded from macro 'SIPROUND''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  STMT_START {              \
    ,SIPROUND;SIPROUND;  ^~~~~~~~~~

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note175: :expanded from macro 'STMT_START'3
: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                              ^666
:29: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :expanded from macro 'STMT_START'244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h15::238 :note3: :'{' token is here 
note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  SIP_ROUNDS;                               \:
175  ^~~~~~~~~~:
14:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note280: :expanded from macro 'SIPROUND'15
: note: '{' token is here
  STMT_START {              \
             ^
    ,SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h              ^~~~~~~~:
244:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote:: 175expanded from macro 'PERL_SIPHASH_FNC':
14: note: expanded from macro 'SIPROUND'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~  STMT_START {              \

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;SIPROUND;280
:              ^~~~~~~~15
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3244:: 3note: :expanded from macro 'SIPROUND' 
note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3:   SIP_FINAL_ROUNDS                          \note
: expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15    ,SIPROUND;SIPROUND;SIPROUND;:
               ^~~~~~~~note
: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:     ,SIPROUND;SIPROUND;note
:               ^~~~~~~~expanded from macro 'SIPROUND'

  } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~:
180:5: note/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h: :expanded from macro 'SIPROUND'667
:21: note  } STMT_END: 
expanded from macro 'STMT_END'    ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21#   define STMT_END     ):
                         ^note
: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: #   define STMT_END     )note
:                         ^expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hwarning:: 175'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;  ^~~~~~~~~~

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note:: 3expanded from macro 'STMT_START':
 note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
29                              ^:
 note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3275:: 24note::  expanded from macro 'PERL_SIPHASH_FNC'note
: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
  SIP_FINAL_ROUNDS                          \                       ^~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h281::1756::14 note::  '{' token is herenote
: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note:: 14expanded from macro 'PERL_SIPHASH_FNC':
 note: expanded from macro 'SIPROUND'
  STMT_START {              \  SIP_FINAL_ROUNDS                          \

             ^  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::24281:: 6warning::  '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]warning
: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 180note:: 3expanded from macro 'SIPROUND':
 note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:244:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note:: 3expanded from macro 'PERL_SIPHASH_FNC':
 note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^~~~~~~~~~~~~~~~275
:24:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note281: :')' token is here6
: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h     ^~~~~~~~:
180:5: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:   } STMT_ENDnote
:     ^~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667  } STMT_END:
21    ^~~~~~~~:
 note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_END     )244:
3                        ^:
 note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

  ^~~~~~~~~~#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
     ^~~~~~~~
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END:
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )175
                        ^
:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
                              ^
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
  ^~~~~~~~~~~~~~~~
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/type.c:526:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:526:7: note: '{' token is here
      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:526:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:526:7: note: ')' token is here
      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/type.c:529:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:529:7: note: '{' token is here
      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:529:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
note: expanded from macro 'CHECK_ALLOWED'
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:        } STMT_END6161
:
        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:2209:5: cbc/type.cwarning:: 529'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
7: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:      CHECK_ALLOWED(POINTERS, "a pointer type");5
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'CX_POP_SAVEARRAY'
cbc/type.c:499:11:     } STMT_ENDnote
:     ^expanded from macro 'CHECK_ALLOWED'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note        } STMT_END: 
')' token is here          ^~~~~~~~

./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662#  define STMT_END      ):
7                        ^:
 note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/type.c:533:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:533:5: note: '{' token is here
    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: cbc/type.cnote:: 533expanded from macro 'STMT_START':
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:533:5: note: ')' token is here
    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/type.c:536:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:536:5: note: '{' token is here
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:536:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:536:5: note: ')' token is here
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/type.c:539:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:539:5: note: '{' token is here
    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:539:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:539:5: note: ')' token is here
    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/type.c:542:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:542:5: note: '{' token is here
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:542:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:542:5: note: ')' token is here
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cbc/util.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:223:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:5: note: expanded from macro 'PUSHMARK'
:2619:    STMT_START {                                                      \
    ^~~~~~~~~~
5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    STMT_START {                                                \#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:223:3: note: '{' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:16: note: expanded from macro 'PUSHMARK'

               ^    STMT_START {                                                      \

               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/util.c:223:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
cbc/util.c:223:3: note: ')' token is here
6161  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:cbc/util.c2619:224:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
5: #define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:224:3: note: '{' token is here

  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
    ENV_LOCK;#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
cbc/util.c
:224:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'

#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
:2924:#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
31: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:224:3: note: '{' token is here
note  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
: expanded from macro 'ENV_LOCK'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
cbc/util.c:224:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'

#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
:                         } } STMT_END
                           ^
cbc/util.c:224:3: note: ')' token is here
2924  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
:31:#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                          } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )note
                        ^
: expanded from macro 'ENV_LOCK'
cbc/util.c:224:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
cbc/util.c:224:3: note: ')' token is here
                              ^~~~~~~~~~~~~~~~~~~~~~~~~  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'

#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
:#  define STMT_END      )
                        ^
219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/util.c:288:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:288:7: note: '{' token is here
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/util.c:288:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/util.c:288:7: note: ')' token is here
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:290:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:290:7: note: '{' token is here
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/util.c:290:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/util.c:290:7: note: ')' token is here
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:634:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:634:3: note: '{' token is here
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:634:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:634:3: note: ')' token is here
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:655:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:655:13: note: '{' token is here
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:655:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:655:13: note: ')' token is here
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:670:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:670:11: note: '{' token is here
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:670:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:670:11: note: ')' token is here
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:188:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:188:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:188:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:188:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:209:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:209:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:209:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:209:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:210:7: note: '{' token is here
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:210:7: note: ')' token is here
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:211:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:211:7: note: '{' token is here
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:211:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:211:7: note: ')' token is here
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:247:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:247:5: note: '{' token is here
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:247:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:247:5: note: ')' token is here
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:250:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:250:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:250:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:250:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:300:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:300:3: note: '{' token is here
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:300:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:300:3: note: ')' token is here
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:301:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:301:3: note: '{' token is here
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:301:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:301:3: note: ')' token is here
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:328:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:328:5: note: '{' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:328:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:328:5: note: ')' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:332:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:332:5: note: '{' token is here
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:332:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:332:5: note: ')' token is here
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:333:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:333:5: note: '{' token is here
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:333:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:333:5: note: ')' token is here
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:334:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "enumerators",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:334:5: note: '{' token is here
    HV_STORE_CONST(hv, "enumerators",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:334:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "enumerators",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:334:5: note: ')' token is here
    HV_STORE_CONST(hv, "enumerators",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:338:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:338:3: note: '{' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:338:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:338:3: note: ')' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:367:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:367:5: note: '{' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:367:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:367:5: note: ')' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:374:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:374:3: note: '{' token is here
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:374:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:374:3: note: ')' token is here
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:378:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:378:5: note: '{' token is here
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:378:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:378:5: note: ')' token is here
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:379:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:379:5: note: '{' token is here
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:379:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:379:5: note: ')' token is here
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:380:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:380:5: note: '{' token is here
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:380:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:380:5: note: ')' token is here
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:382:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:382:5: note: '{' token is here
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:382:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:382:5: note: ')' token is here
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:386:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:386:3: note: '{' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:386:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:386:3: note: ')' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
mv bitfields.o tmpbitfields.o
mv tmpbitfields.o ctlib/bitfields.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/byteorder.c
110 warnings generated.
mv type.o tmptype.o
114 warnings generated.
mv tmptype.o cbc/type.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/cterror.c
mv util.o tmputil.o
mv tmputil.o cbc/util.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/ctparse.c
138 warnings generated.
mv typeinfo.o tmptypeinfo.o
mv tmptypeinfo.o cbc/typeinfo.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/cttags.c
mv cterror.o tmpcterror.o
mv tmpcterror.o ctlib/cterror.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/cttype.c
mv byteorder.o tmpbyteorder.o
mv tmpbyteorder.o ctlib/byteorder.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/layout.c
mv cttags.o tmpcttags.o
mv tmpcttags.o ctlib/cttags.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/y_parser.c
mv ctparse.o tmpctparse.o
mv tmpctparse.o ctlib/ctparse.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ctlib/y_pragma.c
mv layout.o tmplayout.o
mv tmplayout.o ctlib/layout.o
mv cttype.o tmpcttype.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/assert.c
mv tmpcttype.o ctlib/cttype.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/cpp.c
mv y_pragma.o tmpy_pragma.o
mv tmpy_pragma.o ctlib/y_pragma.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/eval.c
mv assert.o tmpassert.o
mv tmpassert.o ucpp/assert.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/lexer.c
mv eval.o tmpeval.o
mv tmpeval.o ucpp/eval.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/macro.c
mv lexer.o tmplexer.o
mv tmplexer.o ucpp/lexer.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/mem.c
mv cpp.o tmpcpp.o
mv tmpcpp.o ucpp/cpp.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DNDEBUG -DCBC_HAVE_IEEE_FP ucpp/nhash.c
mv mem.o tmpmem.o
mv tmpmem.o ucpp/mem.o
mv y_parser.o tmpy_parser.o
mv tmpy_parser.o ctlib/y_parser.o
mv nhash.o tmpnhash.o
mv tmpnhash.o ucpp/nhash.o
mv macro.o tmpmacro.o
mv tmpmacro.o ucpp/macro.o
rm -f blib/arch/auto/Convert/Binary/C/C.so
x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now  -shared -L/usr/local/lib -fstack-protector-strong  C.o cbc/basic.o cbc/dimension.o cbc/hook.o cbc/idl.o cbc/init.o cbc/macros.o cbc/member.o cbc/object.o cbc/option.o cbc/pack.o cbc/sourcify.o cbc/tag.o cbc/type.o cbc/typeinfo.o cbc/util.o ctlib/bitfields.o ctlib/byteorder.o ctlib/cterror.o ctlib/ctparse.o ctlib/cttags.o ctlib/cttype.o ctlib/fileinfo.o ctlib/layout.o ctlib/y_parser.o ctlib/y_pragma.o ucpp/assert.o ucpp/cpp.o ucpp/eval.o ucpp/lexer.o ucpp/macro.o ucpp/mem.o ucpp/nhash.o util/hash.o util/list.o util/memalloc.o  -o blib/arch/auto/Convert/Binary/C/C.so  \
      \
  
chmod 755 blib/arch/auto/Convert/Binary/C/C.so
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/convert.PL examples/convert.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/elf.PL examples/elf.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/memmap.PL examples/memmap.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/perltypes.PL examples/perltypes.pl 
cp bin/ccconfig blib/script/ccconfig
"/usr/bin/perl" -MExtUtils::MY -e 'MY->fixin(shift)' -- blib/script/ccconfig
Manifying 1 pod document
Manifying 2 pod documents
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- C.bs blib/arch/auto/Convert/Binary/C/C.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-Iblib/lib" "-Iblib/arch" test.pl
Argument "" isn't numeric in numeric ge (>=) at test.pl line 31.
tests/001_init............
#   Failed test 'require Convert::Binary::C;'
#   in tests/001_init.t at line 17.
#     Tried to require 'Convert::Binary::C'.
#     Error:  Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at (eval 3) line 2.
# Compilation failed in require at (eval 3) line 2.

#   Failed test 'require Convert::Binary::C::Cached;'
#   in tests/001_init.t at line 18.
#     Tried to require 'Convert::Binary::C::Cached'.
#     Error:  Attempt to reload Convert/Binary/C.pm aborted.
# Compilation failed in require at blib/lib/Convert/Binary/C/Cached.pm line 20.
# BEGIN failed--compilation aborted at blib/lib/Convert/Binary/C/Cached.pm line 20.
# Compilation failed in require at (eval 8) line 2.

#   Failed test 'create Convert::Binary::C object'
#   in tests/001_init.t at line 24.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 23.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C reference'
#   in tests/001_init.t at line 25.
#          got: ''
#     expected: 'Convert::Binary::C'

#   Failed test 'create Convert::Binary::C::Cached object'
#   in tests/001_init.t at line 29.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 28.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C::Cached reference'
#   in tests/001_init.t at line 30.
#          got: ''
#     expected: 'Convert::Binary::C::Cached'

#   Failed test 'create Convert::Binary::C object with arguments'
#   in tests/001_init.t at line 46.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 37.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C reference'
#   in tests/001_init.t at line 47.
#          got: ''
#     expected: 'Convert::Binary::C'

#   Failed test 'create Convert::Binary::C::Cached object with arguments'
#   in tests/001_init.t at line 63.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 53.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C::Cached reference'
#   in tests/001_init.t at line 64.
#          got: ''
#     expected: 'Convert::Binary::C::Cached'

#   Failed test in tests/001_init.t at line 85.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 83.
# '
#     doesn't match '(?^:Invalid option 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 90.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 88.
# '
#     doesn't match '(?^:Invalid option 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 98.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 96.
# '
#     doesn't match '(?^:Number of configuration arguments to new must be even at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 103.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 101.
# '
#     doesn't match '(?^:Number of configuration arguments to new must be even at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 111.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 109.
# '
#     doesn't match '(?^:ByteOrder must be.*not 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 116.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 114.
# '
#     doesn't match '(?^:ByteOrder must be.*not 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 124.
#          got: 'foobar is not an object at tests/001_init.t line 122.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 134.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 131.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 135.

#   Failed test in tests/001_init.t at line 142.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 141.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 145.
#                   ''
#     doesn't match '(?^:^Modification of a read-only value attempted)'

#   Failed test in tests/001_init.t at line 150.
#                   'Can't call method "clean" on unblessed reference at tests/001_init.t line 149.
# '
#     doesn't match '(?^:THIS is corrupt)'

#   Failed test in tests/001_init.t at line 158.
#                   'Can't locate object method "clean" via package "HASH" at tests/001_init.t line 157.
# '
#     doesn't match '(?^:THIS->hv is corrupt)'

#   Failed test in tests/001_init.t at line 142.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 141.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 145.
#                   ''
#     doesn't match '(?^:^Modification of a read-only value attempted)'

#   Failed test in tests/001_init.t at line 150.
#                   'Can't call method "clean" on unblessed reference at tests/001_init.t line 149.
# '
#     doesn't match '(?^:THIS is corrupt)'

#   Failed test in tests/001_init.t at line 158.
#                   'Can't locate object method "clean" via package "HASH" at tests/001_init.t line 157.
# '
#     doesn't match '(?^:THIS->hv is corrupt)'
# Looks like you failed 27 tests of 29.
dubious
	Test returned status 27 (wstat 6912, 0x1b00)
DIED. FAILED tests 1-10, 12-18, 20-29
	Failed 27/29 tests, 6.90% okay
tests/101_basic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/101_basic.t line 9.
Compilation failed in require at tests/101_basic.t line 9.
BEGIN failed--compilation aborted at tests/101_basic.t line 9.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/201_config..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/201_config.t line 10.
Compilation failed in require at tests/201_config.t line 10.
BEGIN failed--compilation aborted at tests/201_config.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/202_misc............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/202_misc.t line 10.
Compilation failed in require at tests/202_misc.t line 10.
BEGIN failed--compilation aborted at tests/202_misc.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/203_warnings........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/203_warnings.t line 10.
Compilation failed in require at tests/203_warnings.t line 10.
BEGIN failed--compilation aborted at tests/203_warnings.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/204_enum............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/204_enum.t line 10.
Compilation failed in require at tests/204_enum.t line 10.
BEGIN failed--compilation aborted at tests/204_enum.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/205_pack............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/205_pack.t line 10.
Compilation failed in require at tests/205_pack.t line 10.
BEGIN failed--compilation aborted at tests/205_pack.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/206_parse...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/206_parse.t line 10.
Compilation failed in require at tests/206_parse.t line 10.
BEGIN failed--compilation aborted at tests/206_parse.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/207_typedef.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/207_typedef.t line 10.
Compilation failed in require at tests/207_typedef.t line 10.
BEGIN failed--compilation aborted at tests/207_typedef.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/208_float...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/208_float.t line 10.
Compilation failed in require at tests/208_float.t line 10.
BEGIN failed--compilation aborted at tests/208_float.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/209_sourcify........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/209_sourcify.t line 10.
Compilation failed in require at tests/209_sourcify.t line 10.
BEGIN failed--compilation aborted at tests/209_sourcify.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/210_depend..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/210_depend.t line 10.
Compilation failed in require at tests/210_depend.t line 10.
BEGIN failed--compilation aborted at tests/210_depend.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/211_clone...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/211_clone.t line 10.
Compilation failed in require at tests/211_clone.t line 10.
BEGIN failed--compilation aborted at tests/211_clone.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/212_clean...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/212_clean.t line 10.
Compilation failed in require at tests/212_clean.t line 10.
BEGIN failed--compilation aborted at tests/212_clean.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/213_string..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/213_string.t line 10.
Compilation failed in require at tests/213_string.t line 10.
BEGIN failed--compilation aborted at tests/213_string.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/214_cache...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/214_cache.t line 11.
Compilation failed in require at tests/214_cache.t line 11.
BEGIN failed--compilation aborted at tests/214_cache.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/215_local...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/215_local.t line 10.
Compilation failed in require at tests/215_local.t line 10.
BEGIN failed--compilation aborted at tests/215_local.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/216_language........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/216_language.t line 10.
Compilation failed in require at tests/216_language.t line 10.
BEGIN failed--compilation aborted at tests/216_language.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/217_preproc.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/217_preproc.t line 10.
Compilation failed in require at tests/217_preproc.t line 10.
BEGIN failed--compilation aborted at tests/217_preproc.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-43
	Failed 43/43 tests, 0.00% okay
tests/218_member..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/218_member.t line 10.
Compilation failed in require at tests/218_member.t line 10.
BEGIN failed--compilation aborted at tests/218_member.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/219_def.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/219_def.t line 10.
Compilation failed in require at tests/219_def.t line 10.
BEGIN failed--compilation aborted at tests/219_def.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/220_new.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/220_new.t line 10.
Compilation failed in require at tests/220_new.t line 10.
BEGIN failed--compilation aborted at tests/220_new.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/221_asm.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/221_asm.t line 10.
Compilation failed in require at tests/221_asm.t line 10.
BEGIN failed--compilation aborted at tests/221_asm.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/222_ieee............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/222_ieee.t line 10.
Compilation failed in require at tests/222_ieee.t line 10.
BEGIN failed--compilation aborted at tests/222_ieee.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/223_initializer.....Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/223_initializer.t line 10.
Compilation failed in require at tests/223_initializer.t line 10.
BEGIN failed--compilation aborted at tests/223_initializer.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/224_typeof..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/224_typeof.t line 10.
Compilation failed in require at tests/224_typeof.t line 10.
BEGIN failed--compilation aborted at tests/224_typeof.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/225_magic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/225_magic.t line 10.
Compilation failed in require at tests/225_magic.t line 10.
BEGIN failed--compilation aborted at tests/225_magic.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/226_indexed.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/226_indexed.t line 10.
Compilation failed in require at tests/226_indexed.t line 10.
BEGIN failed--compilation aborted at tests/226_indexed.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/227_flexarray.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/227_flexarray.t line 10.
Compilation failed in require at tests/227_flexarray.t line 10.
BEGIN failed--compilation aborted at tests/227_flexarray.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/228_hooks...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/228_hooks.t line 10.
Compilation failed in require at tests/228_hooks.t line 10.
BEGIN failed--compilation aborted at tests/228_hooks.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/229_substr..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/229_substr.t line 10.
Compilation failed in require at tests/229_substr.t line 10.
BEGIN failed--compilation aborted at tests/229_substr.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/230_compiler........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/230_compiler.t line 10.
Compilation failed in require at tests/230_compiler.t line 10.
BEGIN failed--compilation aborted at tests/230_compiler.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/231_align...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/231_align.t line 10.
Compilation failed in require at tests/231_align.t line 10.
BEGIN failed--compilation aborted at tests/231_align.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/232_native..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/232_native.t line 11.
Compilation failed in require at tests/232_native.t line 11.
BEGIN failed--compilation aborted at tests/232_native.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/233_tags............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/233_tags.t line 10.
Compilation failed in require at tests/233_tags.t line 10.
BEGIN failed--compilation aborted at tests/233_tags.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/234_format..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/234_format.t line 10.
Compilation failed in require at tests/234_format.t line 10.
BEGIN failed--compilation aborted at tests/234_format.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/235_basic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/235_basic.t line 10.
Compilation failed in require at tests/235_basic.t line 10.
BEGIN failed--compilation aborted at tests/235_basic.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/236_typeinfo........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/236_typeinfo.t line 10.
Compilation failed in require at tests/236_typeinfo.t line 10.
BEGIN failed--compilation aborted at tests/236_typeinfo.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/237_parser..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/237_parser.t line 10.
Compilation failed in require at tests/237_parser.t line 10.
BEGIN failed--compilation aborted at tests/237_parser.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/238_byteorder.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/238_byteorder.t line 10.
Compilation failed in require at tests/238_byteorder.t line 10.
BEGIN failed--compilation aborted at tests/238_byteorder.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-32
	Failed 32/32 tests, 0.00% okay
tests/239_macros..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/239_macros.t line 10.
Compilation failed in require at tests/239_macros.t line 10.
BEGIN failed--compilation aborted at tests/239_macros.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-54
	Failed 54/54 tests, 0.00% okay
tests/240_offsetof........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/240_offsetof.t line 10.
Compilation failed in require at tests/240_offsetof.t line 10.
BEGIN failed--compilation aborted at tests/240_offsetof.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-377
	Failed 377/377 tests, 0.00% okay
tests/241_sizeof..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/241_sizeof.t line 10.
Compilation failed in require at tests/241_sizeof.t line 10.
BEGIN failed--compilation aborted at tests/241_sizeof.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-71
	Failed 71/71 tests, 0.00% okay
tests/242_dimension.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/242_dimension.t line 10.
Compilation failed in require at tests/242_dimension.t line 10.
BEGIN failed--compilation aborted at tests/242_dimension.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-1535
	Failed 1535/1535 tests, 0.00% okay
tests/243_parser..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/243_parser.t line 10.
Compilation failed in require at tests/243_parser.t line 10.
BEGIN failed--compilation aborted at tests/243_parser.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-2
	Failed 2/2 tests, 0.00% okay
tests/501_bfsimple........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/501_bfsimple.t line 10.
Compilation failed in require at tests/501_bfsimple.t line 10.
BEGIN failed--compilation aborted at tests/501_bfsimple.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-8990
	Failed 8990/8990 tests, 0.00% okay
tests/502_bfmicrosoft.....Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/502_bfmicrosoft.t line 10.
Compilation failed in require at tests/502_bfmicrosoft.t line 10.
BEGIN failed--compilation aborted at tests/502_bfmicrosoft.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-9031
	Failed 9031/9031 tests, 0.00% okay
tests/503_bfgeneric.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/503_bfgeneric.t line 10.
Compilation failed in require at tests/503_bfgeneric.t line 10.
BEGIN failed--compilation aborted at tests/503_bfgeneric.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-9031
	Failed 9031/9031 tests, 0.00% okay
tests/601_speed...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/601_speed.t line 10.
Compilation failed in require at tests/601_speed.t line 10.
BEGIN failed--compilation aborted at tests/601_speed.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/602_threads.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/602_threads.t line 11.
Compilation failed in require at tests/602_threads.t line 11.
BEGIN failed--compilation aborted at tests/602_threads.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/603_complex.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/603_complex.t line 16.
Compilation failed in require at tests/603_complex.t line 16.
BEGIN failed--compilation aborted at tests/603_complex.t line 16.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
tests/701_debug...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/701_debug.t line 10.
Compilation failed in require at tests/701_debug.t line 10.
BEGIN failed--compilation aborted at tests/701_debug.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/702_env.............# Test 1 got: "Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.\n\0 at tests/702_env.t line 45.\nCompilation failed in require at tests/702_env.t line 45.\n" (tests/702_env.t at line 46)
#   Expected: "" (could not require Convert::Binary::C)
#  tests/702_env.t line 46 is: ok( $@, '', "could not require Convert::Binary::C" );
# Test 3 got: "Convert::Binary::C is not an object at tests/702_env.t line 52.\n" (tests/702_env.t at line 53)
#   Expected: "" (could not create Convert::Binary::C object)
#  tests/702_env.t line 53 is: ok( $@, '', "could not create Convert::Binary::C object" );
# Test 4 got: "1" (tests/702_env.t at line 40 fail #2)
#   Expected: "0" (warnings check failed)
#  tests/702_env.t line 40 is:   ok( $fail, 0, "warnings check failed" );
Can't call method "OrderMembers" on an undefined value at tests/702_env.t line 55.
dubious
	Test returned status 2 (wstat 512, 0x200)
DIED. FAILED tests 1, 3-16
	Failed 15/16 tests, 6.25% okay
tests/703_bugs............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/703_bugs.t line 10.
Compilation failed in require at tests/703_bugs.t line 10.
BEGIN failed--compilation aborted at tests/703_bugs.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-11
	Failed 11/11 tests, 0.00% okay
tests/801_examples........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/801_examples.t line 10.
Compilation failed in require at tests/801_examples.t line 10.
BEGIN failed--compilation aborted at tests/801_examples.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/802_pod.............ok
tests/803_pod_coverage....
#   Failed test 'Pod coverage on Convert::Binary::C'
#   in tests/803_pod_coverage.t at line 21.
# Convert::Binary::C: requiring 'Convert::Binary::C' failed

#   Failed test 'Pod coverage on Convert::Binary::C::Cached'
#   in tests/803_pod_coverage.t at line 22.
# Convert::Binary::C::Cached: Couldn't compile 'Convert::Binary::C::Cached' to inspect: Attempt to reload Convert/Binary/C.pm aborted.
# Compilation failed in require at blib/lib/Convert/Binary/C/Cached.pm line 20.
# BEGIN failed--compilation aborted at blib/lib/Convert/Binary/C/Cached.pm line 20.
# Compilation failed in require at (eval 13) line 1.
# Looks like you failed 2 tests of 2.
dubious
	Test returned status 2 (wstat 512, 0x200)
DIED. FAILED tests 1-2
	Failed 2/2 tests, 0.00% okay
tests/901_memory..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/901_memory.t line 10.
Compilation failed in require at tests/901_memory.t line 10.
BEGIN failed--compilation aborted at tests/901_memory.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
Failed Test              Stat Wstat Total Fail  List of Failed
-------------------------------------------------------------------------------
tests/001_init.t           27  6912    29   27  1-10 12-18 20-29
tests/101_basic.t           2   512    ??   ??  ??
tests/201_config.t          2   512    ??   ??  ??
tests/202_misc.t            2   512    ??   ??  ??
tests/203_warnings.t        2   512    ??   ??  ??
tests/204_enum.t            2   512    ??   ??  ??
tests/205_pack.t            2   512    ??   ??  ??
tests/206_parse.t           2   512    ??   ??  ??
tests/207_typedef.t         2   512    ??   ??  ??
tests/208_float.t           2   512    ??   ??  ??
tests/209_sourcify.t        2   512    ??   ??  ??
tests/210_depend.t          2   512    ??   ??  ??
tests/211_clone.t           2   512    ??   ??  ??
tests/212_clean.t           2   512    ??   ??  ??
tests/213_string.t          2   512    ??   ??  ??
tests/214_cache.t           2   512    ??   ??  ??
tests/215_local.t           2   512    ??   ??  ??
tests/216_language.t        2   512    ??   ??  ??
tests/217_preproc.t       255 65280    43   86  1-43
tests/218_member.t          2   512    ??   ??  ??
tests/219_def.t             2   512    ??   ??  ??
tests/220_new.t             2   512    ??   ??  ??
tests/221_asm.t             2   512    ??   ??  ??
tests/222_ieee.t            2   512    ??   ??  ??
tests/223_initializer.t     2   512    ??   ??  ??
tests/224_typeof.t          2   512    ??   ??  ??
tests/225_magic.t           2   512    ??   ??  ??
tests/226_indexed.t         2   512    ??   ??  ??
tests/227_flexarray.t       2   512    ??   ??  ??
tests/228_hooks.t           2   512    ??   ??  ??
tests/229_substr.t          2   512    ??   ??  ??
tests/230_compiler.t        2   512    ??   ??  ??
tests/231_align.t           2   512    ??   ??  ??
tests/232_native.t          2   512    ??   ??  ??
tests/233_tags.t            2   512    ??   ??  ??
tests/234_format.t          2   512    ??   ??  ??
tests/235_basic.t           2   512    ??   ??  ??
tests/236_typeinfo.t        2   512    ??   ??  ??
tests/237_parser.t          2   512    ??   ??  ??
tests/238_byteorder.t     255 65280    32   64  1-32
tests/239_macros.t        255 65280    54  108  1-54
tests/240_offsetof.t      255 65280   377  754  1-377
tests/241_sizeof.t        255 65280    71  142  1-71
tests/242_dimension.t     255 65280  1535 3070  1-1535
tests/243_parser.t        255 65280     2    4  1-2
tests/501_bfsimple.t      255 65280  8990 1798  1-8990
tests/502_bfmicrosoft.t   255 65280  9031 1806  1-9031
tests/503_bfgeneric.t     255 65280  9031 1806  1-9031
tests/601_speed.t           2   512    ??   ??  ??
tests/602_threads.t         2   512    ??   ??  ??
tests/603_complex.t       255 65280    ??   ??  ??
tests/701_debug.t           2   512    ??   ??  ??
tests/702_env.t             2   512    16   27  1 3-16
tests/703_bugs.t          255 65280    11   22  1-11
tests/801_examples.t        2   512    ??   ??  ??
tests/803_pod_coverage.t    2   512     2    2  1-2
tests/901_memory.t          2   512    ??   ??  ??
Failed 57/58 test scripts. 29221/29228 subtests failed.
Files=58, Tests=29228,  1 wallclock secs ( 0.78 cusr +  0.11 csys =  0.89 CPU)
Failed 57/58 test programs. 29221/29228 subtests failed.
make[1]: *** [Makefile:1156: test_dynamic] Error 2
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
dh_auto_test: error: make -j4 test TEST_VERBOSE=1 returned exit code 2
make: *** [debian/rules:6: binary] Error 25
dpkg-buildpackage: error: debian/rules binary subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T23:05:09Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 18424
Build-Time: 8
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 4
Job: libconvert-binary-c-perl_0.84-1
Machine Architecture: amd64
Package: libconvert-binary-c-perl
Package-Time: 34
Source-Version: 0.84-1
Space: 18424
Status: attempted
Version: 0.84-1
--------------------------------------------------------------------------------
Finished at 2021-10-26T23:05:09Z
Build needed 00:00:34, 18424k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 36.210891596s
