DC-Build-Header: libgetdata 0.10.0-11 / 2021-10-26 22:29:56 +0000
DC-Task: type:rebuild-binarch-only source:libgetdata version:0.10.0-11 chroot:unstable esttime:129 logfile:/tmp/libgetdata_0.10.0-11_unstable_clang12.log modes:clang12:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang12 libgetdata_0.10.0-11'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-0-215.eu-central-1.compute.internal

+==============================================================================+
| libgetdata 0.10.0-11 (amd64)                 Tue, 26 Oct 2021 22:29:57 +0000 |
+==============================================================================+

Package: libgetdata
Version: 0.10.0-11
Source Version: 0.10.0-11
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-fafbcec3-c9eb-40dc-b251-3ce6f914a7ec' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang12
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=12
+ echo 'Install of clang-12'
Install of clang-12
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6586 kB]
Fetched 6981 kB in 3s (2772 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-12 libomp-12-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-12-dev
  libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1 libgcc-9-dev libicu67
  libllvm12 libmd0 libobjc-11-dev libobjc4 libomp5-12 libunwind-12 libxml2
  libz3-4 llvm-12-linker-tools
Suggested packages:
  clang-12-doc libomp-12-doc
Recommended packages:
  llvm-12-dev python3
The following NEW packages will be installed:
  clang-12 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-12-dev libclang-cpp12 libclang1-12 libedit2 libelf1 libgc1
  libgcc-9-dev libicu67 libllvm12 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-12-dev libomp5-12 libunwind-12 libxml2 libz3-4 llvm-12-linker-tools
0 upgraded, 25 newly installed, 0 to remove and 0 not upgraded.
Need to get 67.6 MB of archives.
After this operation, 349 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm12 amd64 1:12.0.1-15 [19.4 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp12 amd64 1:12.0.1-15 [9996 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-12-dev amd64 1:12.0.1-15 [4819 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 llvm-12-linker-tools amd64 1:12.0.1-15 [1222 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang1-12 amd64 1:12.0.1-15 [5644 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-12 amd64 1:12.0.1-15 [117 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libunwind-12 amd64 1:12.0.1-15 [63.9 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libomp5-12 amd64 1:12.0.1-15 [405 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libomp-12-dev amd64 1:12.0.1-15 [104 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 67.6 MB in 0s (152 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm12:amd64.
Preparing to unpack .../06-libllvm12_1%3a12.0.1-15_amd64.deb ...
Unpacking libllvm12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libclang-cpp12.
Preparing to unpack .../07-libclang-cpp12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-cpp12 (1:12.0.1-15) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-12-dev.
Preparing to unpack .../14-libclang-common-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang-common-12-dev (1:12.0.1-15) ...
Selecting previously unselected package llvm-12-linker-tools.
Preparing to unpack .../15-llvm-12-linker-tools_1%3a12.0.1-15_amd64.deb ...
Unpacking llvm-12-linker-tools (1:12.0.1-15) ...
Selecting previously unselected package libclang1-12.
Preparing to unpack .../16-libclang1-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libclang1-12 (1:12.0.1-15) ...
Selecting previously unselected package clang-12.
Preparing to unpack .../17-clang-12_1%3a12.0.1-15_amd64.deb ...
Unpacking clang-12 (1:12.0.1-15) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../18-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../19-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../20-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../21-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libunwind-12:amd64.
Preparing to unpack .../22-libunwind-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libunwind-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp5-12:amd64.
Preparing to unpack .../23-libomp5-12_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp5-12:amd64 (1:12.0.1-15) ...
Selecting previously unselected package libomp-12-dev.
Preparing to unpack .../24-libomp-12-dev_1%3a12.0.1-15_amd64.deb ...
Unpacking libomp-12-dev (1:12.0.1-15) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libunwind-12:amd64 (1:12.0.1-15) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm12:amd64 (1:12.0.1-15) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-12-dev (1:12.0.1-15) ...
Setting up libomp5-12:amd64 (1:12.0.1-15) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up llvm-12-linker-tools (1:12.0.1-15) ...
Setting up libclang1-12 (1:12.0.1-15) ...
Setting up libclang-cpp12 (1:12.0.1-15) ...
Setting up libomp-12-dev (1:12.0.1-15) ...
Setting up clang-12 (1:12.0.1-15) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-12 g++-4.6
+ ln -s clang-12 gcc-4.6
+ ln -s clang-12 cpp-4.6
+ ln -s clang-12 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-12 g++-4.7
+ ln -s clang-12 gcc-4.7
+ ln -s clang-12 cpp-4.7
+ ln -s clang-12 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-12 g++-4.8
+ ln -s clang-12 gcc-4.8
+ ln -s clang-12 cpp-4.8
+ ln -s clang-12 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-12 g++-4.9
+ ln -s clang-12 gcc-4.9
+ ln -s clang-12 cpp-4.9
+ ln -s clang-12 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-12 g++-5
+ ln -s clang-12 gcc-5
+ ln -s clang-12 cpp-5
+ ln -s clang-12 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-12 g++-6
+ ln -s clang-12 gcc-6
+ ln -s clang-12 cpp-6
+ ln -s clang-12 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-12 g++-7
+ ln -s clang-12 gcc-7
+ ln -s clang-12 cpp-7
+ ln -s clang-12 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-12 g++-8
+ ln -s clang-12 gcc-8
+ ln -s clang-12 cpp-8
+ ln -s clang-12 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-12 g++-9
+ ln -s clang-12 gcc-9
+ ln -s clang-12 cpp-9
+ ln -s clang-12 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-12 g++-10
+ ln -s clang-12 gcc-10
+ ln -s clang-12 cpp-10
+ ln -s clang-12 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-12 g++-11
+ ln -s clang-12 gcc-11
+ ln -s clang-12 cpp-11
+ ln -s clang-12 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/libgetdata-lRL33W
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-12 clang++
+ ln -s clang-12 clang
+ clang++ --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 12.0.1-15
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/libgetdata-lRL33W
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (58.8 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13527 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 22:30 .
drwxr-xr-x 76 root root 4096 Oct 26 22:30 ..
-rw-r--r--  1 root root  276 Oct 26 22:30 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 22:30 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang12'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libgetdata-lRL33W/resolver-WL95ai' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libgetdata' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org:/science-team/libgetdata.git
Please use:
git clone https://salsa.debian.org:/science-team/libgetdata.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 1075 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libgetdata 0.10.0-11 (dsc) [2756 B]
Get:2 http://127.0.0.1:12990/debian sid/main libgetdata 0.10.0-11 (tar) [1065 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libgetdata 0.10.0-11 (diff) [7100 B]
Fetched 1075 kB in 0s (12.5 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libgetdata-lRL33W/libgetdata-0.10.0' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libgetdata-lRL33W' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 13), dh-sequence-python3, dh-sequence-fortran-mod, python3-numpy, python3-all-dev, libltdl-dev, libflac-dev, flac, gfortran | fortran-compiler, zlib1g-dev, libbz2-dev, liblzma-dev, libzzip-dev, libmodule-build-perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 13), dh-sequence-python3, dh-sequence-fortran-mod, python3-numpy, python3-all-dev, libltdl-dev, libflac-dev, flac, gfortran, zlib1g-dev, libbz2-dev, liblzma-dev, libzzip-dev, libmodule-build-perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [464 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [539 B]
Fetched 1960 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-fortran-mod dh-python dh-strip-nondeterminism dwz file flac
  gettext gettext-base gfortran gfortran-11 groff-base intltool-debian
  libarchive-zip-perl libblas3 libbz2-dev libdebhelper-perl libexpat1
  libexpat1-dev libfile-libmagic-perl libfile-stripnondeterminism-perl
  libflac-dev libflac8 libgfortran-11-dev libgfortran5 libjs-jquery
  libjs-sphinxdoc libjs-underscore liblapack3 libltdl-dev libltdl7 liblzma-dev
  libmagic-mgc libmagic1 libmodule-build-perl libmpdec3 libncursesw6
  libogg-dev libogg0 libpipeline1 libpython3-all-dev libpython3-dev
  libpython3-stdlib libpython3.9 libpython3.9-dev libpython3.9-minimal
  libpython3.9-stdlib libreadline8 libsigsegv2 libsqlite3-0
  libsub-override-perl libtool libuchardet0 libzzip-0-13 libzzip-dev m4 man-db
  media-types po-debconf python3 python3-all python3-all-dev python3-dev
  python3-distutils python3-lib2to3 python3-minimal python3-numpy
  python3-pkg-resources python3.9 python3.9-dev python3.9-minimal
  readline-common sensible-utils zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc dh-make flit python3-toml
  gettext-doc libasprintf-dev libgettextpo-dev gfortran-multilib gfortran-doc
  gfortran-11-multilib gfortran-11-doc libcoarrays-dev groff libtool-doc
  liblzma-doc gcj-jdk m4-doc apparmor less www-browser libmail-box-perl
  python3-doc python3-tk python3-venv python-numpy-doc python3-numpy-dbg
  python3-pytest python3-setuptools python3.9-venv python3.9-doc
  binfmt-support readline-doc
Recommended packages:
  curl | wget | lynx bzip2-doc libarchive-cpio-perl javascript-common
  libmodule-signature-perl libpod-readme-perl libsoftware-license-perl libgpm2
  ca-certificates libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-fortran-mod dh-python dh-strip-nondeterminism dwz file flac
  gettext gettext-base gfortran gfortran-11 groff-base intltool-debian
  libarchive-zip-perl libblas3 libbz2-dev libdebhelper-perl libexpat1
  libexpat1-dev libfile-libmagic-perl libfile-stripnondeterminism-perl
  libflac-dev libflac8 libgfortran-11-dev libgfortran5 libjs-jquery
  libjs-sphinxdoc libjs-underscore liblapack3 libltdl-dev libltdl7 liblzma-dev
  libmagic-mgc libmagic1 libmodule-build-perl libmpdec3 libncursesw6
  libogg-dev libogg0 libpipeline1 libpython3-all-dev libpython3-dev
  libpython3-stdlib libpython3.9 libpython3.9-dev libpython3.9-minimal
  libpython3.9-stdlib libreadline8 libsigsegv2 libsqlite3-0
  libsub-override-perl libtool libuchardet0 libzzip-0-13 libzzip-dev m4 man-db
  media-types po-debconf python3 python3-all python3-all-dev python3-dev
  python3-distutils python3-lib2to3 python3-minimal python3-numpy
  python3-pkg-resources python3.9 python3.9-dev python3.9-minimal
  readline-common sbuild-build-depends-main-dummy sensible-utils zlib1g-dev
0 upgraded, 81 newly installed, 0 to remove and 0 not upgraded.
Need to get 81.6 MB of archives.
After this operation, 279 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [968 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9-minimal amd64 3.9.7-4 [804 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.4.1-3 [104 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 python3.9-minimal amd64 3.9.7-4 [1963 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.9.2-3 [38.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 media-types all 4.0.0 [30.3 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libmpdec3 amd64 2.5.1-2 [87.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libncursesw6 amd64 6.2+20210905-1 [133 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.1-2 [73.8 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.1-2 [168 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.36.0-2 [815 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9-stdlib amd64 3.9.7-4 [1688 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 python3.9 amd64 3.9.7-4 [480 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.9.2-3 [21.4 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.9.2-3 [37.9 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libfile-libmagic-perl amd64 1.23-1+b1 [33.6 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 dh-fortran-mod all 0.21 [12.2 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.9.7-1 [79.4 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.9.7-1 [146 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 5.20211022.1 [103 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 libogg0 amd64 1.3.4-0.1 [27.3 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 libflac8 amd64 1.3.3-2 [112 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 flac amd64 1.3.3-2 [132 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 libgfortran5 amd64 11.2.0-10 [710 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 libgfortran-11-dev amd64 11.2.0-10 [749 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 gfortran-11 amd64 11.2.0-10 [50.2 MB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 gfortran amd64 4:11.2.0-2 [1428 B]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 libblas3 amd64 3.10.0-1 [156 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 libbz2-dev amd64 1.0.8-4 [30.1 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.4.1-3 [156 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 libogg-dev amd64 1.3.4-0.1 [204 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libflac-dev amd64 1.3.3-2 [161 kB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libjs-jquery all 3.5.1+dfsg+~3.5.5-8 [315 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libjs-underscore all 1.9.1~dfsg-4 [100 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libjs-sphinxdoc all 4.2.0-5 [137 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 liblapack3 amd64 3.10.0-1 [2213 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libltdl7 amd64 2.4.6-15 [391 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libltdl-dev amd64 2.4.6-15 [162 kB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 liblzma-dev amd64 5.2.5-2 [229 kB]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 libmodule-build-perl all 0.423100-1 [258 kB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9 amd64 3.9.7-4 [1693 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2 [190 kB]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 libpython3.9-dev amd64 3.9.7-4 [4032 kB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dev amd64 3.9.2-3 [21.7 kB]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dev amd64 3.9.2-3 [1068 B]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 libzzip-0-13 amd64 0.13.72+dfsg.1-1.1 [58.3 kB]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 libzzip-dev amd64 0.13.72+dfsg.1-1.1 [106 kB]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 python3-all amd64 3.9.2-3 [1056 B]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 python3.9-dev amd64 3.9.7-4 [508 kB]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 python3-dev amd64 3.9.2-3 [24.8 kB]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dev amd64 3.9.2-3 [1064 B]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 python3-pkg-resources all 58.2.0-1 [192 kB]
Get:81 http://127.0.0.1:12990/debian sid/main amd64 python3-numpy amd64 1:1.19.5-1 [2693 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 81.6 MB in 1s (140 MB/s)
Selecting previously unselected package bsdextrautils.
(Reading database ... 14272 files and directories currently installed.)
Preparing to unpack .../0-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../1-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../2-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../3-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../4-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package libpython3.9-minimal:amd64.
Preparing to unpack .../5-libpython3.9-minimal_3.9.7-4_amd64.deb ...
Unpacking libpython3.9-minimal:amd64 (3.9.7-4) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../6-libexpat1_2.4.1-3_amd64.deb ...
Unpacking libexpat1:amd64 (2.4.1-3) ...
Selecting previously unselected package python3.9-minimal.
Preparing to unpack .../7-python3.9-minimal_3.9.7-4_amd64.deb ...
Unpacking python3.9-minimal (3.9.7-4) ...
Setting up libpython3.9-minimal:amd64 (3.9.7-4) ...
Setting up libexpat1:amd64 (2.4.1-3) ...
Setting up python3.9-minimal (3.9.7-4) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 15139 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.9.2-3_amd64.deb ...
Unpacking python3-minimal (3.9.2-3) ...
Selecting previously unselected package media-types.
Preparing to unpack .../1-media-types_4.0.0_all.deb ...
Unpacking media-types (4.0.0) ...
Selecting previously unselected package libmpdec3:amd64.
Preparing to unpack .../2-libmpdec3_2.5.1-2_amd64.deb ...
Unpacking libmpdec3:amd64 (2.5.1-2) ...
Selecting previously unselected package libncursesw6:amd64.
Preparing to unpack .../3-libncursesw6_6.2+20210905-1_amd64.deb ...
Unpacking libncursesw6:amd64 (6.2+20210905-1) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../4-readline-common_8.1-2_all.deb ...
Unpacking readline-common (8.1-2) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../5-libreadline8_8.1-2_amd64.deb ...
Unpacking libreadline8:amd64 (8.1-2) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../6-libsqlite3-0_3.36.0-2_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.36.0-2) ...
Selecting previously unselected package libpython3.9-stdlib:amd64.
Preparing to unpack .../7-libpython3.9-stdlib_3.9.7-4_amd64.deb ...
Unpacking libpython3.9-stdlib:amd64 (3.9.7-4) ...
Selecting previously unselected package python3.9.
Preparing to unpack .../8-python3.9_3.9.7-4_amd64.deb ...
Unpacking python3.9 (3.9.7-4) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../9-libpython3-stdlib_3.9.2-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.9.2-3) ...
Setting up python3-minimal (3.9.2-3) ...
Selecting previously unselected package python3.
(Reading database ... 15578 files and directories currently installed.)
Preparing to unpack .../00-python3_3.9.2-3_amd64.deb ...
Unpacking python3 (3.9.2-3) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../01-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../02-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../03-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../04-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../05-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../06-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../07-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../08-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../09-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../10-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../11-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../12-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../13-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../14-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../15-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../16-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../17-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../18-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../19-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../20-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../21-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../22-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../23-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package libfile-libmagic-perl.
Preparing to unpack .../24-libfile-libmagic-perl_1.23-1+b1_amd64.deb ...
Unpacking libfile-libmagic-perl (1.23-1+b1) ...
Selecting previously unselected package dh-fortran-mod.
Preparing to unpack .../25-dh-fortran-mod_0.21_all.deb ...
Unpacking dh-fortran-mod (0.21) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../26-python3-lib2to3_3.9.7-1_all.deb ...
Unpacking python3-lib2to3 (3.9.7-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../27-python3-distutils_3.9.7-1_all.deb ...
Unpacking python3-distutils (3.9.7-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../28-dh-python_5.20211022.1_all.deb ...
Unpacking dh-python (5.20211022.1) ...
Selecting previously unselected package libogg0:amd64.
Preparing to unpack .../29-libogg0_1.3.4-0.1_amd64.deb ...
Unpacking libogg0:amd64 (1.3.4-0.1) ...
Selecting previously unselected package libflac8:amd64.
Preparing to unpack .../30-libflac8_1.3.3-2_amd64.deb ...
Unpacking libflac8:amd64 (1.3.3-2) ...
Selecting previously unselected package flac.
Preparing to unpack .../31-flac_1.3.3-2_amd64.deb ...
Unpacking flac (1.3.3-2) ...
Selecting previously unselected package libgfortran5:amd64.
Preparing to unpack .../32-libgfortran5_11.2.0-10_amd64.deb ...
Unpacking libgfortran5:amd64 (11.2.0-10) ...
Selecting previously unselected package libgfortran-11-dev:amd64.
Preparing to unpack .../33-libgfortran-11-dev_11.2.0-10_amd64.deb ...
Unpacking libgfortran-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package gfortran-11.
Preparing to unpack .../34-gfortran-11_11.2.0-10_amd64.deb ...
Unpacking gfortran-11 (11.2.0-10) ...
Selecting previously unselected package gfortran.
Preparing to unpack .../35-gfortran_4%3a11.2.0-2_amd64.deb ...
Unpacking gfortran (4:11.2.0-2) ...
Selecting previously unselected package libblas3:amd64.
Preparing to unpack .../36-libblas3_3.10.0-1_amd64.deb ...
Unpacking libblas3:amd64 (3.10.0-1) ...
Selecting previously unselected package libbz2-dev:amd64.
Preparing to unpack .../37-libbz2-dev_1.0.8-4_amd64.deb ...
Unpacking libbz2-dev:amd64 (1.0.8-4) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../38-libexpat1-dev_2.4.1-3_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.4.1-3) ...
Selecting previously unselected package libogg-dev:amd64.
Preparing to unpack .../39-libogg-dev_1.3.4-0.1_amd64.deb ...
Unpacking libogg-dev:amd64 (1.3.4-0.1) ...
Selecting previously unselected package libflac-dev:amd64.
Preparing to unpack .../40-libflac-dev_1.3.3-2_amd64.deb ...
Unpacking libflac-dev:amd64 (1.3.3-2) ...
Selecting previously unselected package libjs-jquery.
Preparing to unpack .../41-libjs-jquery_3.5.1+dfsg+~3.5.5-8_all.deb ...
Unpacking libjs-jquery (3.5.1+dfsg+~3.5.5-8) ...
Selecting previously unselected package libjs-underscore.
Preparing to unpack .../42-libjs-underscore_1.9.1~dfsg-4_all.deb ...
Unpacking libjs-underscore (1.9.1~dfsg-4) ...
Selecting previously unselected package libjs-sphinxdoc.
Preparing to unpack .../43-libjs-sphinxdoc_4.2.0-5_all.deb ...
Unpacking libjs-sphinxdoc (4.2.0-5) ...
Selecting previously unselected package liblapack3:amd64.
Preparing to unpack .../44-liblapack3_3.10.0-1_amd64.deb ...
Unpacking liblapack3:amd64 (3.10.0-1) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../45-libltdl7_2.4.6-15_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-15) ...
Selecting previously unselected package libltdl-dev:amd64.
Preparing to unpack .../46-libltdl-dev_2.4.6-15_amd64.deb ...
Unpacking libltdl-dev:amd64 (2.4.6-15) ...
Selecting previously unselected package liblzma-dev:amd64.
Preparing to unpack .../47-liblzma-dev_5.2.5-2_amd64.deb ...
Unpacking liblzma-dev:amd64 (5.2.5-2) ...
Selecting previously unselected package libmodule-build-perl.
Preparing to unpack .../48-libmodule-build-perl_0.423100-1_all.deb ...
Adding 'diversion of /usr/bin/config_data to /usr/bin/config_data.diverted by libmodule-build-perl'
Adding 'diversion of /usr/share/man/man1/config_data.1.gz to /usr/share/man/man1/config_data.diverted.1.gz by libmodule-build-perl'
Unpacking libmodule-build-perl (0.423100-1) ...
Selecting previously unselected package libpython3.9:amd64.
Preparing to unpack .../49-libpython3.9_3.9.7-4_amd64.deb ...
Unpacking libpython3.9:amd64 (3.9.7-4) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../50-zlib1g-dev_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Selecting previously unselected package libpython3.9-dev:amd64.
Preparing to unpack .../51-libpython3.9-dev_3.9.7-4_amd64.deb ...
Unpacking libpython3.9-dev:amd64 (3.9.7-4) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../52-libpython3-dev_3.9.2-3_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.9.2-3) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../53-libpython3-all-dev_3.9.2-3_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.9.2-3) ...
Selecting previously unselected package libzzip-0-13:amd64.
Preparing to unpack .../54-libzzip-0-13_0.13.72+dfsg.1-1.1_amd64.deb ...
Unpacking libzzip-0-13:amd64 (0.13.72+dfsg.1-1.1) ...
Selecting previously unselected package libzzip-dev.
Preparing to unpack .../55-libzzip-dev_0.13.72+dfsg.1-1.1_amd64.deb ...
Unpacking libzzip-dev (0.13.72+dfsg.1-1.1) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../56-python3-all_3.9.2-3_amd64.deb ...
Unpacking python3-all (3.9.2-3) ...
Selecting previously unselected package python3.9-dev.
Preparing to unpack .../57-python3.9-dev_3.9.7-4_amd64.deb ...
Unpacking python3.9-dev (3.9.7-4) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../58-python3-dev_3.9.2-3_amd64.deb ...
Unpacking python3-dev (3.9.2-3) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../59-python3-all-dev_3.9.2-3_amd64.deb ...
Unpacking python3-all-dev (3.9.2-3) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../60-python3-pkg-resources_58.2.0-1_all.deb ...
Unpacking python3-pkg-resources (58.2.0-1) ...
Selecting previously unselected package python3-numpy.
Preparing to unpack .../61-python3-numpy_1%3a1.19.5-1_amd64.deb ...
Unpacking python3-numpy (1:1.19.5-1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../62-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up media-types (4.0.0) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up libogg0:amd64 (1.3.4-0.1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libsqlite3-0:amd64 (3.36.0-2) ...
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up gettext-base (0.21-4) ...
Setting up libzzip-0-13:amd64 (0.13.72+dfsg.1-1.1) ...
Setting up file (1:5.39-3) ...
Setting up libogg-dev:amd64 (1.3.4-0.1) ...
Setting up libflac8:amd64 (1.3.3-2) ...
Setting up libmodule-build-perl (0.423100-1) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libblas3:amd64 (3.10.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 to provide /usr/lib/x86_64-linux-gnu/libblas.so.3 (libblas.so.3-x86_64-linux-gnu) in auto mode
Setting up flac (1.3.3-2) ...
Setting up libexpat1-dev:amd64 (2.4.1-3) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up autopoint (0.21-4) ...
Setting up libfile-libmagic-perl (1.23-1+b1) ...
Setting up libncursesw6:amd64 (6.2+20210905-1) ...
Setting up libltdl7:amd64 (2.4.6-15) ...
Setting up libgfortran5:amd64 (11.2.0-10) ...
Setting up liblzma-dev:amd64 (5.2.5-2) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Setting up dwz (0.14-1) ...
Setting up libzzip-dev (0.13.72+dfsg.1-1.1) ...
Setting up sensible-utils (0.0.17) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libmpdec3:amd64 (2.5.1-2) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libjs-jquery (3.5.1+dfsg+~3.5.5-8) ...
Setting up readline-common (8.1-2) ...
Setting up libjs-underscore (1.9.1~dfsg-4) ...
Setting up libbz2-dev:amd64 (1.0.8-4) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up libflac-dev:amd64 (1.3.3-2) ...
Setting up liblapack3:amd64 (3.10.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 to provide /usr/lib/x86_64-linux-gnu/liblapack.so.3 (liblapack.so.3-x86_64-linux-gnu) in auto mode
Setting up gettext (0.21-4) ...
Setting up libtool (2.4.6-15) ...
Setting up libgfortran-11-dev:amd64 (11.2.0-10) ...
Setting up libreadline8:amd64 (8.1-2) ...
Setting up m4 (1.4.18-5) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libjs-sphinxdoc (4.2.0-5) ...
Setting up gfortran-11 (11.2.0-10) ...
Setting up autoconf (2.71-2) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up groff-base (1.22.4-7) ...
Setting up libpython3.9-stdlib:amd64 (3.9.7-4) ...
Setting up libpython3-stdlib:amd64 (3.9.2-3) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up po-debconf (1.0.21+nmu1) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up gfortran (4:11.2.0-2) ...
update-alternatives: using /usr/bin/gfortran to provide /usr/bin/f95 (f95) in auto mode
update-alternatives: using /usr/bin/gfortran to provide /usr/bin/f77 (f77) in auto mode
Setting up dh-autoreconf (20) ...
Setting up libltdl-dev:amd64 (2.4.6-15) ...
Setting up libpython3.9:amd64 (3.9.7-4) ...
Setting up python3.9 (3.9.7-4) ...
Setting up libpython3.9-dev:amd64 (3.9.7-4) ...
Setting up debhelper (13.5.2) ...
Setting up python3 (3.9.2-3) ...
Setting up dh-fortran-mod (0.21) ...
Setting up python3.9-dev (3.9.7-4) ...
Setting up python3-lib2to3 (3.9.7-1) ...
Setting up python3-pkg-resources (58.2.0-1) ...
Setting up python3-distutils (3.9.7-1) ...
Setting up dh-python (5.20211022.1) ...
Setting up libpython3-dev:amd64 (3.9.2-3) ...
Setting up python3-all (3.9.2-3) ...
Setting up libpython3-all-dev:amd64 (3.9.2-3) ...
Setting up python3-dev (3.9.2-3) ...
Setting up python3-numpy (1:1.19.5-1) ...
Setting up python3-all-dev (3.9.2-3) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.32-4) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-12_1:12.0.1-15 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-fortran-mod_0.21 dh-python_5.20211022.1 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 flac_1.3.3-2 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 gfortran_4:11.2.0-2 gfortran-11_11.2.0-10 gpgv_2.2.27-2 grep_3.7-1 groff-base_1.22.4-7 gzip_1.10-4 hostname_3.23 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libasan5_9.4.0-3 libasan6_11.2.0-10 libatomic1_11.2.0-10 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libbinutils_2.37-7 libblas3_3.10.0-1 libblkid1_2.37.2-4 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libbz2-dev_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-12-dev_1:12.0.1-15 libclang-cpp12_1:12.0.1-15 libclang1-12_1:12.0.1-15 libcom-err2_1.46.4-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libctf-nobfd0_2.37-7 libctf0_2.37-7 libdb5.3_5.3.28+dfsg1-0.8 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libexpat1_2.4.1-3 libexpat1-dev_2.4.1-3 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi8_3.4.2-3 libfile-libmagic-perl_1.23-1+b1 libfile-stripnondeterminism-perl_1.12.0-2 libflac-dev_1.3.3-2 libflac8_1.3.3-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgfortran-11-dev_11.2.0-10 libgfortran5_11.2.0-10 libgmp10_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgssapi-krb5-2_1.18.3-7 libhogweed6_3.7.3-1 libicu67_67.1-7 libidn2-0_2.3.2-2 libisl23_0.24-2 libitm1_11.2.0-10 libjs-jquery_3.5.1+dfsg+~3.5.5-8 libjs-sphinxdoc_4.2.0-5 libjs-underscore_1.9.1~dfsg-4 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 liblapack3_3.10.0-1 libllvm12_1:12.0.1-15 liblsan0_11.2.0-10 libltdl-dev_2.4.6-15 libltdl7_2.4.6-15 liblz4-1_1.9.3-2 liblzma-dev_5.2.5-2 liblzma5_5.2.5-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmd0_1.0.4-1 libmodule-build-perl_0.423100-1 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpdec3_2.5.1-2 libmpfr6_4.1.0-3 libncursesw6_6.2+20210905-1 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libogg-dev_1.3.4-0.1 libogg0_1.3.4-0.1 libomp-12-dev_1:12.0.1-15 libomp5-12_1:12.0.1-15 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam0g_1.4.0-10 libpcre2-8-0_10.36-2 libpcre3_2:8.39-13 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libpython3-all-dev_3.9.2-3 libpython3-dev_3.9.2-3 libpython3-stdlib_3.9.2-3 libpython3.9_3.9.7-4 libpython3.9-dev_3.9.7-4 libpython3.9-minimal_3.9.7-4 libpython3.9-stdlib_3.9.7-4 libquadmath0_11.2.0-10 libreadline8_8.1-2 libseccomp2_2.5.2-2 libselinux1_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsigsegv2_2.13-1 libsmartcols1_2.37.2-4 libsqlite3-0_3.36.0-2 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunistring2_0.9.10-6 libunwind-12_1:12.0.1-15 libuuid1_2.37.2-4 libxml2_2.9.12+dfsg-5 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 libzzip-0-13_0.13.72+dfsg.1-1.1 libzzip-dev_0.13.72+dfsg.1-1.1 linux-libc-dev_5.14.12-1 llvm-12-linker-tools_1:12.0.1-15 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 media-types_4.0.0 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 po-debconf_1.0.21+nmu1 python3_3.9.2-3 python3-all_3.9.2-3 python3-all-dev_3.9.2-3 python3-dev_3.9.2-3 python3-distutils_3.9.7-1 python3-lib2to3_3.9.7-1 python3-minimal_3.9.2-3 python3-numpy_1:1.19.5-1 python3-pkg-resources_58.2.0-1 python3.9_3.9.7-4 python3.9-dev_3.9.7-4 python3.9-minimal_3.9.7-4 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 readline-common_8.1-2 rpcsvc-proto_1.4.2-4 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sysvinit-utils_3.00-1 tar_1.34+dfsg-1 tzdata_2021e-1 util-linux_2.37.2-4 xz-utils_5.2.5-2 zlib1g_1:1.2.11.dfsg-2 zlib1g-dev_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: libgetdata
Binary: libgetdata-doc, libgetdata-dev, libgetdata8, libgetdata++7, libfgetdata6, libf95getdata7, libgetdata-tools, python3-pygetdata, libgetdata-perl
Architecture: any all
Version: 0.10.0-11
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Michael Milligan <mmilligan@astro.umn.edu>, Steven Benton <stevebenton@rogers.com>, Alastair McKinstry <mckinstry@debian.org>
Homepage: https://getdata.sourceforge.net/
Standards-Version: 4.5.0
Vcs-Browser: https://salsa.debian.org:/science-team/libgetdata.git
Vcs-Git: https://salsa.debian.org:/science-team/libgetdata.git
Build-Depends: debhelper-compat (= 13), dh-sequence-python3, dh-sequence-fortran-mod, python3-numpy, python3-all-dev, libltdl-dev, libflac-dev, flac, gfortran | fortran-compiler, zlib1g-dev, libbz2-dev, liblzma-dev, libzzip-dev, libmodule-build-perl
Package-List:
 libf95getdata7 deb libs optional arch=any
 libfgetdata6 deb libs optional arch=any
 libgetdata++7 deb libs optional arch=any
 libgetdata-dev deb libdevel optional arch=any
 libgetdata-doc deb doc optional arch=all
 libgetdata-perl deb perl optional arch=any
 libgetdata-tools deb libs optional arch=any
 libgetdata8 deb libs optional arch=any
 python3-pygetdata deb python optional arch=any
Checksums-Sha1:
 d74cd92008a0cb6938d3a6c48c2181c3de16781c 1065140 libgetdata_0.10.0.orig.tar.xz
 242ffa2aca8c07f4bed80b12e91e53c061f70921 7100 libgetdata_0.10.0-11.debian.tar.xz
Checksums-Sha256:
 b814337d0c4a83b8896d3d2033c079af6371c3ad7c7ce6f8da4ee24a31e364fd 1065140 libgetdata_0.10.0.orig.tar.xz
 4078e2c3ebf377b3f45b7024e545dc83cccfeef1c5f39d28a2c529af531b33de 7100 libgetdata_0.10.0-11.debian.tar.xz
Files:
 55f311f1fecce6f92699f6b7b815e3aa 1065140 libgetdata_0.10.0.orig.tar.xz
 89654b31a5eaa3033031ad5e76ba3206 7100 libgetdata_0.10.0-11.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEgjg86RZbNHx4cIGiy+a7Tl2a06UFAmFlZXYACgkQy+a7Tl2a
06UBGQ/+JTAgt/HCXaE9tHnpU0d83NI5n928QGdMxp+d7P+WSgaphaJtakxE0ny8
1NK1YC8reM0dxg24b3p21XwDgEPpniGoofw2XlQPFZm8Ew9Me3+WRMUKgyPQdprU
AKTk8Iiv+BS1DrjBgra73ZkaVESOm7cuQAyNpmU/LsIbsufo+ZPanoQEkaJ8Wppn
YCw2EQG8/Z0ZKAy5mHnYoPhP9s0y7L0lcK3Z2uzTV5VfQ41cz9C16HAQdpi3u/AS
qTG7sPsHoF0LL2WFc8ekZUblcgOIt2vcD0CXHclRRgaiu3u3GIJAc0/XkrQZxhX6
tJerDvKlydbADMwFedeyMLkx6ZiaBK9a8rk2guMeopQybaSa+JHB65oEk/fzp49T
MSi8x5DaqO+9hAJMqB9pGRo0jAJATq3RkFCaLgZYeAWAF2B/RYenzA6IIP/1gMgM
ZoM3HnbEw0C22HRTLK8P0NAxvrfGEank7KhVnO3Kl3EFQVfMWCYz/J/1loyhz22b
Dapcd+FcX/tvJyq7n94p0el9aeGHmhsYtIzV6eIF45mcUGWdGGtFzGNDFMQLIlUj
9nWyxjKptScxbmQTSPrk/UuAqGZ3mjlwe9K16AZQ5FiSb0MDDEI5BagJMeD2GVWf
uoTDm7LAUlRydAPNBN/gVEEHk2uqDqPMPOqagCce1DrBQLR53vs=
=jBNq
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.DOmcp_g6/trustedkeys.kbx': General error
gpgv: Signature made Tue Oct 12 10:37:42 2021 UTC
gpgv:                using RSA key 82383CE9165B347C787081A2CBE6BB4E5D9AD3A5
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libgetdata_0.10.0-11.dsc
dpkg-source: info: extracting libgetdata in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libgetdata_0.10.0.orig.tar.xz
dpkg-source: info: unpacking libgetdata_0.10.0-11.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying CVE-2021-20204.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-fafbcec3-c9eb-40dc-b251-3ce6f914a7ec
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libgetdata
dpkg-buildpackage: info: source version 0.10.0-11
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Alastair McKinstry <mckinstry@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean 
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/<<PKGBUILDDIR>>'
py3versions: no X-Python3-Version in control file, using supported versions
dh_auto_clean -Bbuild-main
	install -d /<<PKGBUILDDIR>>/debian/.debhelper/generated/_source/home
for v in 3.9; do \
  dh_auto_clean -Bbuild-py$v; \
done
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_clean
	rm -f debian/debhelper-build-stamp
	rm -rf debian/.debhelper/
	rm -f -- debian/libgetdata-doc.substvars debian/libgetdata-dev.substvars debian/libgetdata8.substvars debian/libgetdata\+\+7.substvars debian/libfgetdata6.substvars debian/libf95getdata7.substvars debian/libgetdata-tools.substvars debian/python3-pygetdata.substvars debian/libgetdata-perl.substvars debian/files
	rm -fr -- debian/libgetdata-doc/ debian/tmp/ debian/libgetdata-dev/ debian/libgetdata8/ debian/libgetdata\+\+7/ debian/libfgetdata6/ debian/libf95getdata7/ debian/libgetdata-tools/ debian/python3-pygetdata/ debian/libgetdata-perl/
	find .  \( \( \
		\( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
	        \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
		 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
		 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
		 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
		\) -exec rm -f {} + \) -o \
		\( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 debian/rules build
dh build 
   dh_update_autotools_config
	install -d debian/.debhelper/bucket/files
	cp -an --reflink=auto config.guess debian/.debhelper/bucket/files/b7eab9b8a73dc6e0421366bca6921cd2621dab6c3909d6e3bebf863011442d15.tmp
	mv debian/.debhelper/bucket/files/b7eab9b8a73dc6e0421366bca6921cd2621dab6c3909d6e3bebf863011442d15.tmp debian/.debhelper/bucket/files/b7eab9b8a73dc6e0421366bca6921cd2621dab6c3909d6e3bebf863011442d15
	cp -f /usr/share/misc/config.guess ./config.guess
	cp -an --reflink=auto config.sub debian/.debhelper/bucket/files/82745ce935695e7984a053c155a64b9ad16ece3a07d931cc90ab3fb28b7221af.tmp
	mv debian/.debhelper/bucket/files/82745ce935695e7984a053c155a64b9ad16ece3a07d931cc90ab3fb28b7221af.tmp debian/.debhelper/bucket/files/82745ce935695e7984a053c155a64b9ad16ece3a07d931cc90ab3fb28b7221af
	cp -f /usr/share/misc/config.sub ./config.sub
   dh_autoreconf
	find ! -ipath "./debian/*" -a ! \( -path '*/.git/*' -o -path '*/.hg/*' -o -path '*/.bzr/*' -o -path '*/.svn/*' -o -path '*/CVS/*' \) -a  -type f -exec md5sum {} + -o -type l -printf "symlink  %p
" > debian/autoreconf.before
	grep -q ^XDT_ configure.ac
	autoreconf -f -i
libtoolize: putting auxiliary files in '.'.
libtoolize: copying file './ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
configure.ac:67: warning: The macro `AC_CONFIG_HEADER' is obsolete.
configure.ac:67: You should run autoupdate.
./lib/autoconf/status.m4:719: AC_CONFIG_HEADER is expanded from...
configure.ac:67: the top level
configure.ac:480: warning: The macro `AC_PROG_CC_C99' is obsolete.
configure.ac:480: You should run autoupdate.
./lib/autoconf/c.m4:1659: AC_PROG_CC_C99 is expanded from...
configure.ac:480: the top level
configure.ac:492: warning: The macro `AC_HEADER_STDC' is obsolete.
configure.ac:492: You should run autoupdate.
./lib/autoconf/headers.m4:704: AC_HEADER_STDC is expanded from...
configure.ac:492: the top level
configure.ac:475: installing './compile'
configure.ac:351: installing './missing'
bindings/Makefile.am: installing './depcomp'
	find ! -ipath "./debian/*" -a ! \( -path '*/.git/*' -o -path '*/.hg/*' -o -path '*/.bzr/*' -o -path '*/.svn/*' -o -path '*/CVS/*' \) -a  -type f -exec md5sum {} + -o -type l -printf "symlink  %p
" > debian/autoreconf.after
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
py3versions: no X-Python3-Version in control file, using supported versions
dh_auto_configure -Bbuild-main -- --disable-python --with-perl-dir=vendor
	install -d /<<PKGBUILDDIR>>/debian/.debhelper/generated/_source/home
	install -d build-main
	cd build-main && ../configure --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-option-checking --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --runstatedir=/run --disable-maintainer-mode --disable-dependency-tracking --disable-python --with-perl-dir=vendor
*** Checking GetData configuration

checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking whether to build the utilities... yes
checking whether to include the legacy API... no
checking whether to enable debugging messages... no
checking whether to build in ANSI C compliance mode... no
checking whether to run large tests... yes
checking whether to include the C++ bindings... yes
checking whether to include the Fortran 95 bindings... yes
checking whether to include the Fortran 77 bindings... yes
checking whether to include the IDL bindings... yes
checking whether to include the MATLAB bindings... yes
checking whether to include the Perl bindings... yes
checking whether to include the Python bindings... no
checking whether to include the PHP bindings... yes
checking whether to enable getdata modules... yes

*** Initialising build system

checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether ln -s works... yes
checking for gawk... (cached) mawk
checking for a sed that does not truncate output... /bin/sed
checking for date... date
checking for diff... diff
checking for jot... no
checking for printf... printf
checking for seq... seq
checking whether we're running under Msys... no

*** Checking host environment

checking whether x86_64-pc-linux-gnu supports fast unaligned memory access... yes
checking the directory separator... /
checking for extra LDFLAGS needed on x86_64-pc-linux-gnu... none needed
checking whether the test suite can dynamically load objects... yes

*** Checking C compiler characteristics

checking whether make supports the include directive... yes (GNU style)
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... none
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking for vfork.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking for gcc... (cached) gcc
checking whether the compiler supports GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to enable C11 features... (cached) none needed
checking whether gcc understands -c and -o together... (cached) yes
checking dependency style of gcc... (cached) none
checking whether gcc and cc understand -c and -o together... yes
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking dependency style of gcc... none

*** Checking C++ compiler characteristics

checking for g++... g++
checking whether the compiler supports GNU C++... yes
checking whether g++ accepts -g... yes
checking for g++ option to enable C++11 features... none needed
checking dependency style of g++... none
checking whether g++ understands -c and -o together... yes

*** Checking Fortran 77 compiler characteristics

checking whether the compiler supports GNU Fortran 77... yes
checking whether f77 accepts -g... yes
checking whether f77 understands -c and -o together... yes

*** Checking Fortran 90 compiler characteristics

checking whether the compiler supports GNU Fortran... yes
checking whether f95 accepts -g... yes
checking whether f95 understands -c and -o together... yes
checking whether the Fortran 90 compiler works... yes

*** Building libtool

checking how to print strings... printf
checking for a sed that does not truncate output... (cached) /bin/sed
checking for fgrep... /bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for shl_load... no
checking for shl_load in -ldld... no
checking for dlopen... no
checking for dlopen in -ldl... yes
checking whether a program can dlopen itself... yes
checking whether a statically linked program can dlopen itself... no
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for f77 option to produce PIC... -fPIC
checking if f77 PIC flag -fPIC works... yes
checking if f77 static flag -static works... yes
checking if f77 supports -c -o file.o... yes
checking if f77 supports -c -o file.o... (cached) yes
checking whether the f77 linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for f95 option to produce PIC... -fPIC
checking if f95 PIC flag -fPIC works... yes
checking if f95 static flag -static works... yes
checking if f95 supports -c -o file.o... yes
checking if f95 supports -c -o file.o... (cached) yes
checking whether the f95 linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
configure: creating ./config.lt
config.lt: creating libtool

*** Configuring the dynamic loader

checking for lt_dlinit in -lltdl... yes
checking for ltdl.h... yes
checking for library containing pthread_mutex_lock... none required
checking for pthread.h... yes

*** Checking additional compiler characteristics

checking for inline... inline
checking for C/C++ restrict keyword... __restrict__
checking whether restrict can be applied to pointer array arguments... yes
checking whether gcc accepts -Wall... yes
checking whether gcc accepts -Wextra... yes
checking whether g++ accepts -Wall... yes
checking whether g++ accepts -Wextra... yes
checking whether f77 accepts -Wall... yes
checking whether f77 accepts -Wextra... yes
checking whether we are using the Intel Fortran-77 compiler... no
checking how to get verbose linking output from f77... -v
checking for Fortran 77 libraries of f77...  -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lgfortran -lm -lquadmath
checking for dummy main to link with Fortran 77 libraries... none
checking for Fortran 77 name-mangling scheme... lower case, underscore, no extra underscore
checking whether f95 accepts -Wall... yes
checking whether f95 accepts -Wextra... yes
checking whether we are using the Intel Fortran compiler... no
checking if we're linking against the Microsoft C Run-Time... no

*** Looking for additional libraries

checking for library containing ceil... -lm
checking for library containing regcomp... none required
checking for library containing pcre_compile... no

*** Looking for additional header files

checking for asm/unaligned.h... no
checking for Availability.h... no
checking for byteswap.h... yes
checking for crtdefs.h... no
checking for direct.h... no
checking for features.h... yes
checking for fcntl.h... yes
checking for float.h... yes
checking for inttypes.h... (cached) yes
checking for io.h... no
checking for libgen.h... yes
checking for libkern/OSByteOrder.h... no
checking for math.h... yes
checking for pcre.h... no
checking for regex.h... yes
checking for signal.h... yes
checking for stddef.h... yes
checking for stdint.h... (cached) yes
checking for sys/endian.h... no
checking for sys/file.h... yes
checking for sys/param.h... yes
checking for sys/resource.h... yes
checking for sys/stat.h... (cached) yes
checking for sys/time.h... yes
checking for sys/types.h... (cached) yes
checking for sys/wait.h... yes
checking for unistd.h... (cached) yes
checking for complex.h... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required

*** Checking data types

checking for an ANSI C-conforming const... yes
checking whether byte ordering is bigendian... no
checking floating point endianness... little
checking for _Complex float... yes
checking for _Complex double... yes
checking for int8_t... yes
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for mode_t... yes
checking for off_t... yes
checking for off64_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking for struct stat64... yes
checking for struct _stat64... no
checking for struct __stat64... no
checking for uint8_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for unsigned long long int... yes
checking for long long int... yes
checking size of off_t... 8
checking size of size_t... 8
checking size of short int... 2
checking size of int... 4
checking size of long int... 8
checking size of long long int... 8
checking size of unsigned short int... 2
checking size of unsigned int... 4
checking size of unsigned long int... 8
checking size of unsigned long long int... 8
checking size of void *... 8

*** Looking for additional library functions

checking for basename... yes
checking for _chsize... no
checking for _chsize_s... no
checking for _commit... no
checking for dup2... yes
checking for fchmod... yes
checking for _fdopen... no
checking for fdopendir... yes
checking for _finite... no
checking for fpathconf... yes
checking for fseeko... yes
checking for fseeko64... yes
checking for _fstat... no
checking for fstat64... yes
checking for _fstat64... no
checking for fstatat... yes
checking for fstatat64... yes
checking for fsync... yes
checking for ftello... yes
checking for ftello64... yes
checking for ftruncate... yes
checking for ftruncate64... yes
checking for getcwd... yes
checking for _getcwd... no
checking for getdelim... yes
checking for gmtime_r... yes
checking for kill... yes
checking for isnan... yes
checking for _isnan... no
checking for lseek64... yes
checking for _lseeki64... no
checking for lstat... yes
checking for lstat64... yes
checking for _mkdir... no
checking for nan... yes
checking for _open... no
checking for openat... yes
checking for pathconf... yes
checking for pcre_compile... no
checking for pipe... yes
checking for _read... no
checking for readdir_r... yes
checking for readlink... yes
checking for regcomp... yes
checking for renameat... yes
checking for _rmdir... no
checking for setrlimit... yes
checking for snprintf... yes
checking for _snprintf... no
checking for stat64... yes
checking for _stat64... no
checking for _strtoi64... no
checking for strtoll... yes
checking for strtoq... yes
checking for _strtoui64... no
checking for strtoull... yes
checking for strtouq... yes
checking for symlink... yes
checking for _unlink... no
checking for unlinkat... yes
checking for _write... no
checking for cabs... yes
checking for gcc options needed to detect all undeclared functions... -fno-builtin
checking whether strerror_r is declared... yes
checking whether strerror_r returns char *... yes
checking for pid_t... yes
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking whether mkdir accepts two arguments... yes
checking whether isfinite is declared... yes
checking whether _strtoi64 is declared... no
checking whether _strtoui64 is declared... no
checking whether bswap16 is declared... no
checking whether bswap_16 is declared... yes
checking whether OSSwapInt16 is declared... no
checking whether get_unaligned is declared... no
checking whether put_unaligned is declared... no

*** Configuring Fortran bindings

checking for a sed that does not truncate output... (cached) /bin/sed

*** Configuring interactive data language (IDL) bindings

checking whether C99 is supported... yes
checking for an IDL interpreter version >= 5.5... not found

*** Configuring MATLAB bindings

checking for mex... not found

*** Configuring Perl bindings

checking for a sed that does not truncate output... (cached) /bin/sed
checking for Perl interpreter version >= 5.8.0... /usr/bin//perl
checking /usr/bin//perl version... 5.32.1
checking for ExtUtils::MakeMaker... yes
checking for Math::Complex... yes
checking for Test::Harness... yes
checking Perl module directory... ${exec_prefix}/lib/x86_64-linux-gnu/perl5/5.32
checking Perl man directory... ${prefix}/share/man/man3
checking for the section 3 manual page extension... .3pm

*** Configuring PHP bindings

checking whether C99 is supported... yes
checking for php5-config... no
checking for php-config... no

*** Configuring bzip2 support

checking for BZ2_bzReadOpen in -lbz2... yes
checking for bzlib.h... yes
checking for bzip2... /bin/bzip2
checking for bunzip2... /bin/bunzip2

*** Configuring flac support

checking for FLAC__stream_decoder_init_FILE in -lFLAC... yes
checking for FLAC/all.h... yes
checking for flac... /usr/bin/flac

*** Configuring gzip support

checking for gzopen in -lz... yes
checking for gzseek64... yes
checking for gztell64... yes
checking for zlib.h... yes
checking for gzip... /bin/gzip
checking for gunzip... /bin/gunzip

*** Configuring lzma support

checking for lzma_auto_decoder in -llzma... yes
checking for lzma.h... yes
checking for xz... /usr/bin/xz

*** Configuring slim support

checking for slimopen in -lslim... no
checking for slimdopen... no
checking for slimdrawsize... no
checking for slimlib.h... no
checking for slimdata... no
checking for slim... no
checking for unslim... no

*** Configuring zzip support

checking for zzip_open in -lzzip... yes
checking for zzip/lib.h... yes
checking for zip... no
checking for unzip... no

*** Configuring zzslim support 

checking for slim support... no
checking for zzip support... yes

*** Writing configure output

checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating bindings/Makefile
config.status: creating bindings/cxx/Makefile
config.status: creating bindings/cxx/test/Makefile
config.status: creating bindings/f77/Makefile
config.status: creating bindings/f77/test/Makefile
config.status: creating bindings/f77/test/test_getdata.f
config.status: creating bindings/idl/Makefile
config.status: creating bindings/idl/makedlm.sh
config.status: creating bindings/idl/test/Makefile
config.status: creating bindings/matlab/Makefile
config.status: creating bindings/matlab/make_contents.sh
config.status: creating bindings/matlab/test/Makefile
config.status: creating bindings/perl/Makefile
config.status: creating bindings/perl/src/Makefile.PL
config.status: creating bindings/php/Makefile
config.status: creating bindings/php/test/Makefile
config.status: creating bindings/python/Makefile
config.status: creating bindings/python/setup.py
config.status: creating bindings/python/test/Makefile
config.status: creating doc/Makefile
config.status: creating man/Makefile
config.status: creating man/gd_alter_encoding.3in
config.status: creating man/gd_alter_endianness.3in
config.status: creating man/gd_alter_frameoffset.3in
config.status: creating src/Makefile
config.status: creating src/getdata.h.in2
config.status: creating src/getdata.pc
config.status: creating test/Makefile
config.status: creating util/Makefile
config.status: creating src/gd_config.h
config.status: creating src/getdata.h
config.status: executing depfiles commands
config.status: executing libtool commands

Configuration summary: 
  Build platform:                x86_64-pc-linux-gnu
  ANSI C compatibility mode:     no
  Legacy API:                    no
  Verbose debugging:             no
  Fast unaligned memory access:  yes
  Regular expression support:    posix
  Use modules:                   yes
  Thread-safe dynamic loading:   yes

  Supported internal encodings:  raw ascii sie
  Supported external encodings:  bzip2 flac gzip lzma zzip
  Unsupported encodings:         slim zzslim

  Bindings built:                C++ Fortran-77 Fortran-95 Perl
  Bindings not built:            IDL MATLAB PHP Python

cp src/*.h build-main/src/
for v in 3.9; do \
  dh_auto_configure -Bbuild-py$v -- --disable-bindings --enable-python --with-python=/usr/bin/python$v; \
  cp src/*.h build-py$v/src/; \
done
	install -d build-py3.9
	cd build-py3.9 && ../configure --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-option-checking --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --runstatedir=/run --disable-maintainer-mode --disable-dependency-tracking --disable-bindings --enable-python --with-python=/usr/bin/python3.9
*** Checking GetData configuration

checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking whether to build the utilities... yes
checking whether to include the legacy API... no
checking whether to enable debugging messages... no
checking whether to build in ANSI C compliance mode... no
checking whether to run large tests... yes
checking whether to include the C++ bindings... no
checking whether to include the Fortran 95 bindings... no
checking whether to include the Fortran 77 bindings... no
checking whether to include the IDL bindings... no
checking whether to include the MATLAB bindings... no
checking whether to include the Perl bindings... no
checking whether to include the Python bindings... yes
checking whether to include the PHP bindings... no
checking whether to enable getdata modules... yes

*** Initialising build system

checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether ln -s works... yes
checking for gawk... (cached) mawk
checking for a sed that does not truncate output... /bin/sed
checking for date... date
checking for diff... diff
checking for jot... no
checking for printf... printf
checking for seq... seq
checking whether we're running under Msys... no

*** Checking host environment

checking whether x86_64-pc-linux-gnu supports fast unaligned memory access... yes
checking the directory separator... /
checking for extra LDFLAGS needed on x86_64-pc-linux-gnu... none needed
checking whether the test suite can dynamically load objects... yes

*** Checking C compiler characteristics

checking whether make supports the include directive... yes (GNU style)
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... none
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking for vfork.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking for gcc... (cached) gcc
checking whether the compiler supports GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to enable C11 features... (cached) none needed
checking whether gcc understands -c and -o together... (cached) yes
checking dependency style of gcc... (cached) none
checking whether gcc and cc understand -c and -o together... yes
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking dependency style of gcc... none

*** Checking C++ compiler characteristics

checking for g++... g++
checking whether the compiler supports GNU C++... yes
checking whether g++ accepts -g... yes
checking for g++ option to enable C++11 features... none needed
checking dependency style of g++... none
checking whether g++ understands -c and -o together... yes

*** Building libtool

checking how to print strings... printf
checking for a sed that does not truncate output... (cached) /bin/sed
checking for fgrep... /bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for shl_load... no
checking for shl_load in -ldld... no
checking for dlopen... no
checking for dlopen in -ldl... yes
checking whether a program can dlopen itself... yes
checking whether a statically linked program can dlopen itself... no
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for f77 option to produce PIC... 
checking if f77 static flag  works... yes
checking if f77 supports -c -o file.o... yes
checking if f77 supports -c -o file.o... (cached) yes
checking whether the f77 linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for f95 option to produce PIC... -fPIC
checking if f95 PIC flag -fPIC works... yes
checking if f95 static flag -static works... yes
checking if f95 supports -c -o file.o... yes
checking if f95 supports -c -o file.o... (cached) yes
checking whether the f95 linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
configure: creating ./config.lt
config.lt: creating libtool

*** Configuring the dynamic loader

checking for lt_dlinit in -lltdl... yes
checking for ltdl.h... yes
checking for library containing pthread_mutex_lock... none required
checking for pthread.h... yes

*** Checking additional compiler characteristics

checking for inline... inline
checking for C/C++ restrict keyword... __restrict__
checking whether restrict can be applied to pointer array arguments... yes
checking whether gcc accepts -Wall... yes
checking whether gcc accepts -Wextra... yes
checking if we're linking against the Microsoft C Run-Time... no

*** Looking for additional libraries

checking for library containing ceil... -lm
checking for library containing regcomp... none required
checking for library containing pcre_compile... no

*** Looking for additional header files

checking for asm/unaligned.h... no
checking for Availability.h... no
checking for byteswap.h... yes
checking for crtdefs.h... no
checking for direct.h... no
checking for features.h... yes
checking for fcntl.h... yes
checking for float.h... yes
checking for inttypes.h... (cached) yes
checking for io.h... no
checking for libgen.h... yes
checking for libkern/OSByteOrder.h... no
checking for math.h... yes
checking for pcre.h... no
checking for regex.h... yes
checking for signal.h... yes
checking for stddef.h... yes
checking for stdint.h... (cached) yes
checking for sys/endian.h... no
checking for sys/file.h... yes
checking for sys/param.h... yes
checking for sys/resource.h... yes
checking for sys/stat.h... (cached) yes
checking for sys/time.h... yes
checking for sys/types.h... (cached) yes
checking for sys/wait.h... yes
checking for unistd.h... (cached) yes
checking for complex.h... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required

*** Checking data types

checking for an ANSI C-conforming const... yes
checking whether byte ordering is bigendian... no
checking floating point endianness... little
checking for _Complex float... yes
checking for _Complex double... yes
checking for int8_t... yes
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for mode_t... yes
checking for off_t... yes
checking for off64_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking for struct stat64... yes
checking for struct _stat64... no
checking for struct __stat64... no
checking for uint8_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for unsigned long long int... yes
checking for long long int... yes
checking size of off_t... 8
checking size of size_t... 8
checking size of short int... 2
checking size of int... 4
checking size of long int... 8
checking size of long long int... 8
checking size of unsigned short int... 2
checking size of unsigned int... 4
checking size of unsigned long int... 8
checking size of unsigned long long int... 8
checking size of void *... 8

*** Looking for additional library functions

checking for basename... yes
checking for _chsize... no
checking for _chsize_s... no
checking for _commit... no
checking for dup2... yes
checking for fchmod... yes
checking for _fdopen... no
checking for fdopendir... yes
checking for _finite... no
checking for fpathconf... yes
checking for fseeko... yes
checking for fseeko64... yes
checking for _fstat... no
checking for fstat64... yes
checking for _fstat64... no
checking for fstatat... yes
checking for fstatat64... yes
checking for fsync... yes
checking for ftello... yes
checking for ftello64... yes
checking for ftruncate... yes
checking for ftruncate64... yes
checking for getcwd... yes
checking for _getcwd... no
checking for getdelim... yes
checking for gmtime_r... yes
checking for kill... yes
checking for isnan... yes
checking for _isnan... no
checking for lseek64... yes
checking for _lseeki64... no
checking for lstat... yes
checking for lstat64... yes
checking for _mkdir... no
checking for nan... yes
checking for _open... no
checking for openat... yes
checking for pathconf... yes
checking for pcre_compile... no
checking for pipe... yes
checking for _read... no
checking for readdir_r... yes
checking for readlink... yes
checking for regcomp... yes
checking for renameat... yes
checking for _rmdir... no
checking for setrlimit... yes
checking for snprintf... yes
checking for _snprintf... no
checking for stat64... yes
checking for _stat64... no
checking for _strtoi64... no
checking for strtoll... yes
checking for strtoq... yes
checking for _strtoui64... no
checking for strtoull... yes
checking for strtouq... yes
checking for symlink... yes
checking for _unlink... no
checking for unlinkat... yes
checking for _write... no
checking for cabs... yes
checking for gcc options needed to detect all undeclared functions... -fno-builtin
checking whether strerror_r is declared... yes
checking whether strerror_r returns char *... yes
checking for pid_t... yes
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking whether mkdir accepts two arguments... yes
checking whether isfinite is declared... yes
checking whether _strtoi64 is declared... no
checking whether _strtoui64 is declared... no
checking whether bswap16 is declared... no
checking whether bswap_16 is declared... yes
checking whether OSSwapInt16 is declared... no
checking whether get_unaligned is declared... no
checking whether put_unaligned is declared... no

*** Configuring Python bindings

checking whether /usr/bin/python3.9 is new enough... yes
checking if we're using a Python3 interpreter... yes
checking /usr/bin/python3.9 version... 3.9
checking Python ABI version... 3.9
checking Python CPPFLAGS... -I/usr/include/python3.9
checking Python LDFLAGS... -L/usr/lib/x86_64-linux-gnu -lpython3.9
checking Python platform name... linux-x86_64
checking Python extension module directory... ${exec_prefix}/lib/python3.9/site-packages
checking Python object suffix... .cpython-39-x86_64-linux-gnu.so
checking for Unicode support in Python... yes
checking for PyCapsule_New... yes
checking for PyErr_NewExceptionWithDoc... yes
checking for NumPy... yes
checking NumPy CPPFLAGS... -I/usr/lib/python3/dist-packages/numpy/core/include
checking for numpy/arrayobject.h... yes

*** Configuring bzip2 support

checking for BZ2_bzReadOpen in -lbz2... yes
checking for bzlib.h... yes
checking for bzip2... /bin/bzip2
checking for bunzip2... /bin/bunzip2

*** Configuring flac support

checking for FLAC__stream_decoder_init_FILE in -lFLAC... yes
checking for FLAC/all.h... yes
checking for flac... /usr/bin/flac

*** Configuring gzip support

checking for gzopen in -lz... yes
checking for gzseek64... yes
checking for gztell64... yes
checking for zlib.h... yes
checking for gzip... /bin/gzip
checking for gunzip... /bin/gunzip

*** Configuring lzma support

checking for lzma_auto_decoder in -llzma... yes
checking for lzma.h... yes
checking for xz... /usr/bin/xz

*** Configuring slim support

checking for slimopen in -lslim... no
checking for slimdopen... no
checking for slimdrawsize... no
checking for slimlib.h... no
checking for slimdata... no
checking for slim... no
checking for unslim... no

*** Configuring zzip support

checking for zzip_open in -lzzip... yes
checking for zzip/lib.h... yes
checking for zip... no
checking for unzip... no

*** Configuring zzslim support 

checking for slim support... no
checking for zzip support... yes

*** Writing configure output

checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating bindings/Makefile
config.status: creating bindings/cxx/Makefile
config.status: creating bindings/cxx/test/Makefile
config.status: creating bindings/f77/Makefile
config.status: creating bindings/f77/test/Makefile
config.status: creating bindings/f77/test/test_getdata.f
config.status: creating bindings/idl/Makefile
config.status: creating bindings/idl/makedlm.sh
config.status: creating bindings/idl/test/Makefile
config.status: creating bindings/matlab/Makefile
config.status: creating bindings/matlab/make_contents.sh
config.status: creating bindings/matlab/test/Makefile
config.status: creating bindings/perl/Makefile
config.status: creating bindings/perl/src/Makefile.PL
config.status: creating bindings/php/Makefile
config.status: creating bindings/php/test/Makefile
config.status: creating bindings/python/Makefile
config.status: creating bindings/python/setup.py
config.status: creating bindings/python/test/Makefile
config.status: creating doc/Makefile
config.status: creating man/Makefile
config.status: creating man/gd_alter_encoding.3in
config.status: creating man/gd_alter_endianness.3in
config.status: creating man/gd_alter_frameoffset.3in
config.status: creating src/Makefile
config.status: creating src/getdata.h.in2
config.status: creating src/getdata.pc
config.status: creating test/Makefile
config.status: creating util/Makefile
config.status: creating src/gd_config.h
config.status: creating src/getdata.h
config.status: executing depfiles commands
config.status: executing libtool commands

Configuration summary: 
  Build platform:                x86_64-pc-linux-gnu
  ANSI C compatibility mode:     no
  Legacy API:                    no
  Verbose debugging:             no
  Fast unaligned memory access:  yes
  Regular expression support:    posix
  Use modules:                   yes
  Thread-safe dynamic loading:   yes

  Supported internal encodings:  raw ascii sie
  Supported external encodings:  bzip2 flac gzip lzma zzip
  Unsupported encodings:         slim zzslim

  Bindings built:                Python
  Bindings not built:            C++ Fortran-77 Fortran-95 IDL MATLAB PHP Perl

make[1]: Leaving directory '/<<PKGBUILDDIR>>'
	rm -f debian/libf95getdata7.debhelper.log debian/libfgetdata6.debhelper.log debian/libgetdata\+\+7.debhelper.log debian/libgetdata-dev.debhelper.log debian/libgetdata-doc.debhelper.log debian/libgetdata-perl.debhelper.log debian/libgetdata-tools.debhelper.log debian/libgetdata8.debhelper.log debian/python3-pygetdata.debhelper.log
   debian/rules override_dh_auto_build
make[1]: Entering directory '/<<PKGBUILDDIR>>'
py3versions: no X-Python3-Version in control file, using supported versions
dh_auto_build -Bbuild-main
	cd build-main && make -j4
make[2]: Entering directory '/<<PKGBUILDDIR>>/build-main'
Making all in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
make  all-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o add.lo ../../src/add.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o ascii.lo ../../src/ascii.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o close.lo ../../src/close.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o common.lo ../../src/common.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/ascii.c  -fPIC -DPIC -o .libs/ascii.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/common.c  -fPIC -DPIC -o .libs/common.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/close.c  -fPIC -DPIC -o .libs/close.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/add.c  -fPIC -DPIC -o .libs/add.o
In file included from ../../src/common.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)In file included from 
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: noteIn file included from : ../../src/ascii.cprevious definition is here:
21:
../../src/internal.h:445:9: #   define dprintf(fd, ...) \
warning           ^: 
'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
../../src/close.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/add.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/close.c -o close.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/ascii.c -o ascii.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o compat.lo ../../src/compat.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/compat.c  -fPIC -DPIC -o .libs/compat.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o constant.lo ../../src/constant.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/constant.c  -fPIC -DPIC -o .libs/constant.o
In file included from ../../src/compat.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/compat.c -o compat.o >/dev/null 2>&1
In file included from ../../src/constant.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/constant.c -o constant.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o del.lo ../../src/del.c
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/add.c -o add.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/del.c  -fPIC -DPIC -o .libs/del.o
In file included from ../../src/del.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o encoding.lo ../../src/encoding.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/encoding.c  -fPIC -DPIC -o .libs/encoding.o
In file included from ../../src/encoding.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/del.c -o del.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/common.c -o common.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/encoding.c -o encoding.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o endian.lo ../../src/endian.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o entry.lo ../../src/entry.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/endian.c  -fPIC -DPIC -o .libs/endian.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/entry.c  -fPIC -DPIC -o .libs/entry.o
In file included from ../../src/endian.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/entry.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o errors.lo ../../src/errors.c
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/endian.c -o endian.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/errors.c  -fPIC -DPIC -o .libs/errors.o
In file included from ../../src/errors.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/entry.c -o entry.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/errors.c -o errors.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o field_list.lo ../../src/field_list.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/field_list.c  -fPIC -DPIC -o .libs/field_list.o
In file included from ../../src/field_list.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o flimits.lo ../../src/flimits.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flimits.c  -fPIC -DPIC -o .libs/flimits.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o flush.lo ../../src/flush.c
In file included from ../../src/flimits.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flush.c  -fPIC -DPIC -o .libs/flush.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/field_list.c -o field_list.o >/dev/null 2>&1
1 warning generated.
In file included from ../../src/flush.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flimits.c -o flimits.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o fragment.lo ../../src/fragment.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/fragment.c  -fPIC -DPIC -o .libs/fragment.o
In file included from ../../src/fragment.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o getdata.lo ../../src/getdata.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o globals.lo ../../src/globals.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/getdata.c  -fPIC -DPIC -o .libs/getdata.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/globals.c  -fPIC -DPIC -o .libs/globals.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/fragment.c -o fragment.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flush.c -o flush.o >/dev/null 2>&1
In file included from ../../src/getdata.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/globals.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/globals.c -o globals.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o index.lo ../../src/index.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o include.lo ../../src/include.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/index.c  -fPIC -DPIC -o .libs/index.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/include.c  -fPIC -DPIC -o .libs/include.o
In file included from ../../src/index.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/include.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/index.c -o index.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o iopos.lo ../../src/iopos.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/iopos.c  -fPIC -DPIC -o .libs/iopos.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/include.c -o include.o >/dev/null 2>&1
In file included from ../../src/iopos.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o mod.lo ../../src/mod.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/mod.c  -fPIC -DPIC -o .libs/mod.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/iopos.c -o iopos.o >/dev/null 2>&1
In file included from ../../src/mod.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o move.lo ../../src/move.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o name.lo ../../src/name.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/move.c  -fPIC -DPIC -o .libs/move.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/name.c  -fPIC -DPIC -o .libs/name.o
In file included from ../../src/name.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/move.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/move.c -o move.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/name.c -o name.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/mod.c -o mod.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o native.lo ../../src/native.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/native.c  -fPIC -DPIC -o .libs/native.o
In file included from ../../src/native.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/native.c -o native.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o nfields.lo ../../src/nfields.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o nframes.lo ../../src/nframes.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nfields.c  -fPIC -DPIC -o .libs/nfields.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nframes.c  -fPIC -DPIC -o .libs/nframes.o
In file included from ../../src/nfields.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/nframes.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nframes.c -o nframes.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nfields.c -o nfields.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o open.lo ../../src/open.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o parse.lo ../../src/parse.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/open.c  -fPIC -DPIC -o .libs/open.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o protect.lo ../../src/protect.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/parse.c  -fPIC -DPIC -o .libs/parse.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/protect.c  -fPIC -DPIC -o .libs/protect.o
In file included from ../../src/open.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/parse.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/protect.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/protect.c -o protect.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/open.c -o open.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o putdata.lo ../../src/putdata.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/putdata.c  -fPIC -DPIC -o .libs/putdata.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o raw.lo ../../src/raw.c
In file included from ../../src/putdata.c:23:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/raw.c  -fPIC -DPIC -o .libs/raw.o
In file included from ../../src/raw.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/raw.c -o raw.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/putdata.c -o putdata.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/parse.c -o parse.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o sie.lo ../../src/sie.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/sie.c  -fPIC -DPIC -o .libs/sie.o
In file included from ../../src/sie.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o spf.lo ../../src/spf.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/sie.c -o sie.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/spf.c  -fPIC -DPIC -o .libs/spf.o
In file included from ../../src/spf.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/spf.c -o spf.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o string.lo ../../src/string.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o types.lo ../../src/types.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/string.c  -fPIC -DPIC -o .libs/string.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/types.c  -fPIC -DPIC -o .libs/types.o
In file included from ../../src/string.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatabzip2_la-bzip.lo `test -f 'bzip.c' || echo '../../src/'`bzip.c
In file included from ../../src/types.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/bzip.c  -fPIC -DPIC -o .libs/libgetdatabzip2_la-bzip.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/string.c -o string.o >/dev/null 2>&1
In file included from ../../src/bzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdataflac_la-flac.lo `test -f 'flac.c' || echo '../../src/'`flac.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/bzip.c -o libgetdatabzip2_la-bzip.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flac.c  -fPIC -DPIC -o .libs/libgetdataflac_la-flac.o
In file included from ../../src/flac.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatagzip_la-gzip.lo `test -f 'gzip.c' || echo '../../src/'`gzip.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/gzip.c  -fPIC -DPIC -o .libs/libgetdatagzip_la-gzip.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flac.c -o libgetdataflac_la-flac.o >/dev/null 2>&1
In file included from ../../src/gzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/gzip.c -o libgetdatagzip_la-gzip.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatalzma_la-lzma.lo `test -f 'lzma.c' || echo '../../src/'`lzma.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatazzip_la-zzip.lo `test -f 'zzip.c' || echo '../../src/'`zzip.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/lzma.c  -fPIC -DPIC -o .libs/libgetdatalzma_la-lzma.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/zzip.c  -fPIC -DPIC -o .libs/libgetdatazzip_la-zzip.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/types.c -o types.o >/dev/null 2>&1
In file included from ../../src/lzma.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/zzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/zzip.c -o libgetdatazzip_la-zzip.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/lzma.c -o libgetdatalzma_la-lzma.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lbz2 -Wl,-z,relro -o libgetdatabzip2.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatabzip2_la-bzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatabzip2_la-bzip.o   -lbz2 -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatabzip2-0.10.0.so -o .libs/libgetdatabzip2-0.10.0.so
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lFLAC -Wl,-z,relro -o libgetdataflac.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdataflac_la-flac.lo  -lm 
libtool: link: (cd ".libs" && rm -f "libgetdatabzip2.so" && ln -s "libgetdatabzip2-0.10.0.so" "libgetdatabzip2.so")
libtool: link: ar cr .libs/libgetdatabzip2.a  libgetdatabzip2_la-bzip.o
libtool: link: ranlib .libs/libgetdatabzip2.a
libtool: link: ( cd ".libs" && rm -f "libgetdatabzip2.la" && ln -s "../libgetdatabzip2.la" "libgetdatabzip2.la" )
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lz -Wl,-z,relro -o libgetdatagzip.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatagzip_la-gzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdataflac_la-flac.o   -lFLAC -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdataflac-0.10.0.so -o .libs/libgetdataflac-0.10.0.so
libtool: link: (cd ".libs" && rm -f "libgetdataflac.so" && ln -s "libgetdataflac-0.10.0.so" "libgetdataflac.so")
libtool: link: ar cr .libs/libgetdataflac.a  libgetdataflac_la-flac.o
libtool: link: ranlib .libs/libgetdataflac.a
libtool: link: ( cd ".libs" && rm -f "libgetdataflac.la" && ln -s "../libgetdataflac.la" "libgetdataflac.la" )
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatagzip_la-gzip.o   -lz -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatagzip-0.10.0.so -o .libs/libgetdatagzip-0.10.0.so
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -llzma -Wl,-z,relro -o libgetdatalzma.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatalzma_la-lzma.lo  -lm 
libtool: link: (cd ".libs" && rm -f "libgetdatagzip.so" && ln -s "libgetdatagzip-0.10.0.so" "libgetdatagzip.so")
libtool: link: ar cr .libs/libgetdatagzip.a  libgetdatagzip_la-gzip.o
libtool: link: ranlib .libs/libgetdatagzip.a
libtool: link: ( cd ".libs" && rm -f "libgetdatagzip.la" && ln -s "../libgetdatagzip.la" "libgetdatagzip.la" )
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lzzip -Wl,-z,relro -o libgetdatazzip.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatazzip_la-zzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatalzma_la-lzma.o   -llzma -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatalzma-0.10.0.so -o .libs/libgetdatalzma-0.10.0.so
libtool: link: (cd ".libs" && rm -f "libgetdatalzma.so" && ln -s "libgetdatalzma-0.10.0.so" "libgetdatalzma.so")
libtool: link: ar cr .libs/libgetdatalzma.a  libgetdatalzma_la-lzma.o
libtool: link: ranlib .libs/libgetdatalzma.a
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatazzip_la-zzip.o   -lzzip -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatazzip-0.10.0.so -o .libs/libgetdatazzip-0.10.0.so
libtool: link: ( cd ".libs" && rm -f "libgetdatalzma.la" && ln -s "../libgetdatalzma.la" "libgetdatalzma.la" )
libtool: link: (cd ".libs" && rm -f "libgetdatazzip.so" && ln -s "libgetdatazzip-0.10.0.so" "libgetdatazzip.so")
libtool: link: ar cr .libs/libgetdatazzip.a  libgetdatazzip_la-zzip.o
libtool: link: ranlib .libs/libgetdatazzip.a
libtool: link: ( cd ".libs" && rm -f "libgetdatazzip.la" && ln -s "../libgetdatazzip.la" "libgetdatazzip.la" )
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/getdata.c -o getdata.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -export-dynamic -export-symbols-regex '^[^_]' -version-info 8:0:0   -Wl,-z,relro -o libgetdata.la -rpath /usr/lib/x86_64-linux-gnu add.lo ascii.lo  close.lo common.lo compat.lo constant.lo  del.lo encoding.lo endian.lo entry.lo errors.lo field_list.lo  flimits.lo flush.lo fragment.lo getdata.lo globals.lo  index.lo include.lo iopos.lo   mod.lo move.lo name.lo native.lo nfields.lo nframes.lo open.lo parse.lo protect.lo putdata.lo raw.lo sie.lo  spf.lo string.lo types.lo    -lltdl -dlopen libgetdatabzip2.la -dlopen libgetdataflac.la -dlopen libgetdatagzip.la -dlopen libgetdatalzma.la  -dlopen libgetdatazzip.la  -lm 
libtool: link: rm -f .libs/libgetdata.nm .libs/libgetdata.nmS .libs/libgetdata.nmT
libtool: link: rm -f ".libs/libgetdata.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions  -fPIC -DPIC "libgetdataS.c")
libtool: link: rm -f ".libs/libgetdataS.c" ".libs/libgetdata.nm" ".libs/libgetdata.nmS" ".libs/libgetdata.nmT" ".libs/libgetdata.nmI"
libtool: link: /usr/bin/nm -B  .libs/add.o .libs/ascii.o .libs/close.o .libs/common.o .libs/compat.o .libs/constant.o .libs/del.o .libs/encoding.o .libs/endian.o .libs/entry.o .libs/errors.o .libs/field_list.o .libs/flimits.o .libs/flush.o .libs/fragment.o .libs/getdata.o .libs/globals.o .libs/index.o .libs/include.o .libs/iopos.o .libs/mod.o .libs/move.o .libs/name.o .libs/native.o .libs/nfields.o .libs/nframes.o .libs/open.o .libs/parse.o .libs/protect.o .libs/putdata.o .libs/raw.o .libs/sie.o .libs/spf.o .libs/string.o .libs/types.o .libs/libgetdataS.o  | sed -n -e 's/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' | /bin/sed 's/.* //' | sort | uniq > .libs/libgetdata.exp
libtool: link: /bin/grep -E -e "^[^_]" ".libs/libgetdata.exp" > ".libs/libgetdata.expT"
libtool: link: mv -f ".libs/libgetdata.expT" ".libs/libgetdata.exp"
libtool: link: echo "{ global:" > .libs/libgetdata.ver
libtool: link:  cat .libs/libgetdata.exp | sed -e "s/\(.*\)/\1;/" >> .libs/libgetdata.ver
libtool: link:  echo "local: *; };" >> .libs/libgetdata.ver
libtool: link:  gcc -shared  -fPIC -DPIC  .libs/add.o .libs/ascii.o .libs/close.o .libs/common.o .libs/compat.o .libs/constant.o .libs/del.o .libs/encoding.o .libs/endian.o .libs/entry.o .libs/errors.o .libs/field_list.o .libs/flimits.o .libs/flush.o .libs/fragment.o .libs/getdata.o .libs/globals.o .libs/index.o .libs/include.o .libs/iopos.o .libs/mod.o .libs/move.o .libs/name.o .libs/native.o .libs/nfields.o .libs/nframes.o .libs/open.o .libs/parse.o .libs/protect.o .libs/putdata.o .libs/raw.o .libs/sie.o .libs/spf.o .libs/string.o .libs/types.o .libs/libgetdataS.o  -lltdl -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdata.so.8 -Wl,-version-script -Wl,.libs/libgetdata.ver -o .libs/libgetdata.so.8.0.0
/usr/bin/ld: .libs/encoding.o: in function `gd_MakeTempFile':
./build-main/src/../../src/encoding.c:1036: warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
libtool: link: (cd ".libs" && rm -f "libgetdata.so.8" && ln -s "libgetdata.so.8.0.0" "libgetdata.so.8")
libtool: link: (cd ".libs" && rm -f "libgetdata.so" && ln -s "libgetdata.so.8.0.0" "libgetdata.so")
libtool: link: ar cr .libs/libgetdata.a  add.o ascii.o close.o common.o compat.o constant.o del.o encoding.o endian.o entry.o errors.o field_list.o flimits.o flush.o fragment.o getdata.o globals.o index.o include.o iopos.o mod.o move.o name.o native.o nfields.o nframes.o open.o parse.o protect.o putdata.o raw.o sie.o spf.o string.o types.o .libs/libgetdataS.o
libtool: link: ranlib .libs/libgetdata.a
libtool: link: ( cd ".libs" && rm -f "libgetdata.la" && ln -s "../libgetdata.la" "libgetdata.la" )
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
Making all in .
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main'
Making all in test
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/test'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/test'
Making all in bindings
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making all in .
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings'
gcc -DHAVE_CONFIG_H -I../../src -I../src -o make_parameters \
	../../bindings/make_parameters.c
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making all in cxx
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
Making all in test
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o dirfile.lo ../../../bindings/cxx/dirfile.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o bitentry.lo ../../../bindings/cxx/bitentry.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o carrayentry.lo ../../../bindings/cxx/carrayentry.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o constentry.lo ../../../bindings/cxx/constentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/bitentry.cpp  -fPIC -DPIC -o .libs/bitentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/dirfile.cpp  -fPIC -DPIC -o .libs/dirfile.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/constentry.cpp  -fPIC -DPIC -o .libs/constentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/carrayentry.cpp  -fPIC -DPIC -o .libs/carrayentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/constentry.cpp -o constentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/carrayentry.cpp -o carrayentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/bitentry.cpp -o bitentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/dirfile.cpp -o dirfile.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o divideentry.lo ../../../bindings/cxx/divideentry.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o entry.lo ../../../bindings/cxx/entry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/divideentry.cpp  -fPIC -DPIC -o .libs/divideentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o fragment.lo ../../../bindings/cxx/fragment.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/entry.cpp  -fPIC -DPIC -o .libs/entry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/fragment.cpp  -fPIC -DPIC -o .libs/fragment.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o indirentry.lo ../../../bindings/cxx/indirentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/indirentry.cpp  -fPIC -DPIC -o .libs/indirentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/divideentry.cpp -o divideentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/fragment.cpp -o fragment.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/entry.cpp -o entry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/indirentry.cpp -o indirentry.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o lincomentry.lo ../../../bindings/cxx/lincomentry.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o linterpentry.lo ../../../bindings/cxx/linterpentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/lincomentry.cpp  -fPIC -DPIC -o .libs/lincomentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/linterpentry.cpp  -fPIC -DPIC -o .libs/linterpentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o mplexentry.lo ../../../bindings/cxx/mplexentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/mplexentry.cpp  -fPIC -DPIC -o .libs/mplexentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o multiplyentry.lo ../../../bindings/cxx/multiplyentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/multiplyentry.cpp  -fPIC -DPIC -o .libs/multiplyentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/linterpentry.cpp -o linterpentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/lincomentry.cpp -o lincomentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/mplexentry.cpp -o mplexentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/multiplyentry.cpp -o multiplyentry.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o phaseentry.lo ../../../bindings/cxx/phaseentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/phaseentry.cpp  -fPIC -DPIC -o .libs/phaseentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o polynomentry.lo ../../../bindings/cxx/polynomentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/polynomentry.cpp  -fPIC -DPIC -o .libs/polynomentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o rawentry.lo ../../../bindings/cxx/rawentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/rawentry.cpp  -fPIC -DPIC -o .libs/rawentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o recipentry.lo ../../../bindings/cxx/recipentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/recipentry.cpp  -fPIC -DPIC -o .libs/recipentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/phaseentry.cpp -o phaseentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/polynomentry.cpp -o polynomentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/rawentry.cpp -o rawentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/recipentry.cpp -o recipentry.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o sarrayentry.lo ../../../bindings/cxx/sarrayentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sarrayentry.cpp  -fPIC -DPIC -o .libs/sarrayentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o sbitentry.lo ../../../bindings/cxx/sbitentry.cpp
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o sindirentry.lo ../../../bindings/cxx/sindirentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sbitentry.cpp  -fPIC -DPIC -o .libs/sbitentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sindirentry.cpp  -fPIC -DPIC -o .libs/sindirentry.o
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o stringentry.lo ../../../bindings/cxx/stringentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/stringentry.cpp  -fPIC -DPIC -o .libs/stringentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sarrayentry.cpp -o sarrayentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sindirentry.cpp -o sindirentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/sbitentry.cpp -o sbitentry.o >/dev/null 2>&1
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/stringentry.cpp -o stringentry.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o windowentry.lo ../../../bindings/cxx/windowentry.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/windowentry.cpp  -fPIC -DPIC -o .libs/windowentry.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I../../../bindings/cxx -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/cxx/windowentry.cpp -o windowentry.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CXX   --mode=link g++  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -version-info 7:0:0 -Wl,-z,relro -o libgetdata++.la -rpath /usr/lib/x86_64-linux-gnu dirfile.lo bitentry.lo carrayentry.lo constentry.lo divideentry.lo entry.lo fragment.lo indirentry.lo lincomentry.lo linterpentry.lo mplexentry.lo multiplyentry.lo phaseentry.lo polynomentry.lo rawentry.lo recipentry.lo sarrayentry.lo sbitentry.lo sindirentry.lo stringentry.lo windowentry.lo  ../../src/libgetdata.la 
libtool: link: rm -f .libs/libgetdata++.nm .libs/libgetdata++.nmS .libs/libgetdata++.nmT
libtool: link: rm -f ".libs/libgetdata++.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin  -fPIC -DPIC "libgetdata++S.c")
libtool: link: rm -f ".libs/libgetdata++S.c" ".libs/libgetdata++.nm" ".libs/libgetdata++.nmS" ".libs/libgetdata++.nmT" ".libs/libgetdata++.nmI"
libtool: link: g++  -fPIC -DPIC -shared -nostdlib /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/11/crtbeginS.o  .libs/dirfile.o .libs/bitentry.o .libs/carrayentry.o .libs/constentry.o .libs/divideentry.o .libs/entry.o .libs/fragment.o .libs/indirentry.o .libs/lincomentry.o .libs/linterpentry.o .libs/mplexentry.o .libs/multiplyentry.o .libs/phaseentry.o .libs/polynomentry.o .libs/rawentry.o .libs/recipentry.o .libs/sarrayentry.o .libs/sbitentry.o .libs/sindirentry.o .libs/stringentry.o .libs/windowentry.o .libs/libgetdata++S.o  -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/build-main/src/.libs ../../src/.libs/libgetdata.so -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../.. -L/usr/lib/llvm-12/bin/../lib -L/lib -L/usr/lib -lstdc++ -lm -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/11/crtendS.o /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crtn.o  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdata++.so.7 -o .libs/libgetdata++.so.7.0.0
libtool: link: (cd ".libs" && rm -f "libgetdata++.so.7" && ln -s "libgetdata++.so.7.0.0" "libgetdata++.so.7")
libtool: link: (cd ".libs" && rm -f "libgetdata++.so" && ln -s "libgetdata++.so.7.0.0" "libgetdata++.so")
libtool: link: ar cr .libs/libgetdata++.a  dirfile.o bitentry.o carrayentry.o constentry.o divideentry.o entry.o fragment.o indirentry.o lincomentry.o linterpentry.o mplexentry.o multiplyentry.o phaseentry.o polynomentry.o rawentry.o recipentry.o sarrayentry.o sbitentry.o sindirentry.o stringentry.o windowentry.o
libtool: link: ranlib .libs/libgetdata++.a
libtool: link: ( cd ".libs" && rm -f "libgetdata++.la" && ln -s "../libgetdata++.la" "libgetdata++.la" )
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
Making all in f77
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
../make_parameters f > make_parameters.sed.in
rm -f getdata.f
rm -f getdata.f90
/bin/sed -f make_parameters.sed ../../../bindings/f77/getdata.f.in > getdata.f
/bin/sed -f make_parameters.sed ../../../bindings/f77/getdata.f90.in > getdata.f90
chmod a-w getdata.f
chmod a-w getdata.f90
f95  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong  -fallow-invalid-boz -fallow-argument-mismatch  -Wall -Wextra -c -o getdata.o getdata.f90
getdata.f90:3092:35:

 3088 |     LEN_TRIM(check_field), windop, threshold)
      |                                   2
......
 3092 |     LEN_TRIM(check_field), windop, INT(threshold))
      |                                   1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:3000:54:

 2996 |     TRIM(check_field), LEN_TRIM(check_field), windop, threshold)
      |                                                      2
......
 3000 |     TRIM(check_field), LEN_TRIM(check_field), windop, INT(threshold))
      |                                                      1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:2944:35:

 2944 |     LEN_TRIM(check_field), windop, threshold, fragment_index)
      |                                   1
......
 2959 |     LEN_TRIM(check_field), windop, threshold, fragment_index)
      |                                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:2843:16:

 2843 |     call gdmcos(constants(i), dirfile, TRIM(parent), LEN_TRIM(parent), &
      |                1
......
 2858 |     call gdmcos(constants(i), dirfile, TRIM(parent), LEN_TRIM(parent), &
      |                2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2726:16:

 2726 |     call gdcons(constants(i), dirfile, GD_COMPLEX64, i)
      |                1
......
 2739 |     call gdcons(constants(i), dirfile, GD_COMPLEX128, i)
      |                2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2551:4:

 2551 |     data_in)
      |    1
......
 2567 |     GD_COMPLEX128, data_in)
      |                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2554:29:

 2554 |     array_len, GD_COMPLEX64, data_in)
      |                             1
......
 2570 |     array_len, GD_COMPLEX128, data_in)
      |                              2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2423:4:

 2423 |     data_out)
      |    1
......
 2439 |     GD_COMPLEX128, data_out)
      |                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2426:29:

 2426 |     array_len, GD_COMPLEX64, data_out)
      |                             1
......
 2442 |     array_len, GD_COMPLEX128, data_out)
      |                              2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2062:18:

 2057 |       ent%windop, ent%ithreshold, TRIM(ent%scalar(1)), scalar_len(1), &
      |                  2
......
 2062 |       ent%windop, ent%rthreshold, TRIM(ent%scalar(1)), scalar_len(1), &
      |                  1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (REAL(8)/INTEGER(4)).
getdata.f90:1556:25:

 1556 |       ent%fragment_index)
      |                         1
Warning: More actual than formal arguments in procedure call at (1)
getdata.f90:1297:42:

 1291 |       LEN_TRIM(ent%field(2)), ent%windop, ent%ithreshold, &
      |                                          2
......
 1297 |       LEN_TRIM(ent%field(2)), ent%windop, ent%rthreshold, &
      |                                          1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (REAL(8)/INTEGER(4)).
getdata.f90:959:2:

  959 |   data_in)
      |  1
......
  970 |   data_in)
      |  2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:868:68:

  868 |   first_frame, first_sample, num_frames, num_samples, GD_COMPLEX64, data_in)
      |                                                                    1
......
  883 |   GD_COMPLEX128, data_in)
      |                 2                                                   
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:521:2:

  521 |   data_out)
      |  1
......
  532 |   data_out)
      |  2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:420:68:

  420 |   first_frame, first_sample, num_frames, num_samples, GD_COMPLEX64, data_out)
      |                                                                    1
......
  435 |   GD_COMPLEX128, data_out)
      |                 2                                                   
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:3563:12:

 3563 | end function
      |            ^
Warning: ‘__result_fgd_match_entries’ may be used uninitialized [-Wmaybe-uninitialized]
getdata.f90:3536:0:

 3536 | function fgd_match_entries (entry_list, dirfile, regex, fragment, entype, &
      | 
note: ‘__result_fgd_match_entries’ declared here
make  all-recursive
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
Making all in test
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[6]: Nothing to be done for 'all'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
/bin/bash ../../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../../bindings/f77 -I../../src  -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libfgetdata_la-fgetdata.lo `test -f 'fgetdata.c' || echo '../../../bindings/f77/'`fgetdata.c
/bin/bash ../../libtool  --tag=FC   --mode=compile f95  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong  -fallow-invalid-boz -fallow-argument-mismatch  -Wall -Wextra -c -o getdata.lo getdata.f90
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../../bindings/f77 -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/f77/fgetdata.c  -fPIC -DPIC -o .libs/libfgetdata_la-fgetdata.o
libtool: compile:  f95 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -fallow-invalid-boz -fallow-argument-mismatch -Wall -Wextra -c getdata.f90  -fPIC -o .libs/getdata.o
getdata.f90:3092:35:

 3088 |     LEN_TRIM(check_field), windop, threshold)
      |                                   2
......
 3092 |     LEN_TRIM(check_field), windop, INT(threshold))
      |                                   1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:3000:54:

 2996 |     TRIM(check_field), LEN_TRIM(check_field), windop, threshold)
      |                                                      2
......
 3000 |     TRIM(check_field), LEN_TRIM(check_field), windop, INT(threshold))
      |                                                      1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:2944:35:

 2944 |     LEN_TRIM(check_field), windop, threshold, fragment_index)
      |                                   1
......
 2959 |     LEN_TRIM(check_field), windop, threshold, fragment_index)
      |                                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/REAL(8)).
getdata.f90:2843:16:

 2843 |     call gdmcos(constants(i), dirfile, TRIM(parent), LEN_TRIM(parent), &
      |                1
......
 2858 |     call gdmcos(constants(i), dirfile, TRIM(parent), LEN_TRIM(parent), &
      |                2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2726:16:

 2726 |     call gdcons(constants(i), dirfile, GD_COMPLEX64, i)
      |                1
......
 2739 |     call gdcons(constants(i), dirfile, GD_COMPLEX128, i)
      |                2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2551:4:

 2551 |     data_in)
      |    1
......
 2567 |     GD_COMPLEX128, data_in)
      |                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2554:29:

 2554 |     array_len, GD_COMPLEX64, data_in)
      |                             1
......
 2570 |     array_len, GD_COMPLEX128, data_in)
      |                              2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2423:4:

 2423 |     data_out)
      |    1
......
 2439 |     GD_COMPLEX128, data_out)
      |                   2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2426:29:

 2426 |     array_len, GD_COMPLEX64, data_out)
      |                             1
......
 2442 |     array_len, GD_COMPLEX128, data_out)
      |                              2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:2062:18:

 2057 |       ent%windop, ent%ithreshold, TRIM(ent%scalar(1)), scalar_len(1), &
      |                  2
......
 2062 |       ent%windop, ent%rthreshold, TRIM(ent%scalar(1)), scalar_len(1), &
      |                  1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (REAL(8)/INTEGER(4)).
getdata.f90:1556:25:

 1556 |       ent%fragment_index)
      |                         1
Warning: More actual than formal arguments in procedure call at (1)
getdata.f90:1297:42:

 1291 |       LEN_TRIM(ent%field(2)), ent%windop, ent%ithreshold, &
      |                                          2
......
 1297 |       LEN_TRIM(ent%field(2)), ent%windop, ent%rthreshold, &
      |                                          1
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (REAL(8)/INTEGER(4)).
getdata.f90:959:2:

  959 |   data_in)
      |  1
......
  970 |   data_in)
      |  2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:868:68:

  868 |   first_frame, first_sample, num_frames, num_samples, GD_COMPLEX64, data_in)
      |                                                                    1
......
  883 |   GD_COMPLEX128, data_in)
      |                 2                                                   
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:521:2:

  521 |   data_out)
      |  1
......
  532 |   data_out)
      |  2
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
getdata.f90:420:68:

  420 |   first_frame, first_sample, num_frames, num_samples, GD_COMPLEX64, data_out)
      |                                                                    1
......
  435 |   GD_COMPLEX128, data_out)
      |                 2                                                   
Warning: Type mismatch between actual argument at (1) and actual argument at (2) (COMPLEX(4)/COMPLEX(8)).
In file included from ../../../bindings/f77/fgetdata.c:22:
In file included from ../../../bindings/f77/fgetdata.h:24:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
getdata.f90:3563:12:

 3563 | end function
      |            ^
Warning: ‘__result_fgd_match_entries’ may be used uninitialized [-Wmaybe-uninitialized]
getdata.f90:3536:0:

 3536 | function fgd_match_entries (entry_list, dirfile, regex, fragment, entype, &
      | 
note: ‘__result_fgd_match_entries’ declared here
libtool: compile:  f95 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -fallow-invalid-boz -fallow-argument-mismatch -Wall -Wextra -c getdata.f90 -o getdata.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../../bindings/f77 -I../../src -Wall -Wextra -I../../../src -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../../bindings/f77/fgetdata.c -o libfgetdata_la-fgetdata.o >/dev/null 2>&1
/bin/bash ../../libtool  --tag=CC   --mode=link gcc  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -version-info 6:0:0 -Wl,-z,relro -o libfgetdata.la -rpath /usr/lib/x86_64-linux-gnu libfgetdata_la-fgetdata.lo ../../src/libgetdata.la 
libtool: link: rm -f .libs/libfgetdata.nm .libs/libfgetdata.nmS .libs/libfgetdata.nmT
libtool: link: rm -f ".libs/libfgetdata.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions  -fPIC -DPIC "libfgetdataS.c")
libtool: link: rm -f ".libs/libfgetdataS.c" ".libs/libfgetdata.nm" ".libs/libfgetdata.nmS" ".libs/libfgetdata.nmT" ".libs/libfgetdata.nmI"
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libfgetdata_la-fgetdata.o .libs/libfgetdataS.o  -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/build-main/src/.libs ../../src/.libs/libgetdata.so  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libfgetdata.so.6 -o .libs/libfgetdata.so.6.0.0
libtool: link: (cd ".libs" && rm -f "libfgetdata.so.6" && ln -s "libfgetdata.so.6.0.0" "libfgetdata.so.6")
libtool: link: (cd ".libs" && rm -f "libfgetdata.so" && ln -s "libfgetdata.so.6.0.0" "libfgetdata.so")
libtool: link: ar cr .libs/libfgetdata.a  libfgetdata_la-fgetdata.o
libtool: link: ranlib .libs/libfgetdata.a
libtool: link: ( cd ".libs" && rm -f "libfgetdata.la" && ln -s "../libfgetdata.la" "libfgetdata.la" )
/bin/bash ../../libtool  --tag=FC   --mode=link f95  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong  -fallow-invalid-boz -fallow-argument-mismatch  -Wall -Wextra -version-info 7:0:0 -Wl,-z,relro -o libf95getdata.la -rpath /usr/lib/x86_64-linux-gnu getdata.lo libfgetdata.la 
libtool: link: rm -f .libs/libf95getdata.nm .libs/libf95getdata.nmS .libs/libf95getdata.nmT
libtool: link: rm -f ".libs/libf95getdata.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c  -fPIC "libf95getdataS.c")
libtool: link: rm -f ".libs/libf95getdataS.c" ".libs/libf95getdata.nm" ".libs/libf95getdata.nmS" ".libs/libf95getdata.nmT" ".libs/libf95getdata.nmI"
libtool: link: f95 -shared  -fPIC  .libs/getdata.o .libs/libf95getdataS.o  -Wl,-rpath -Wl,/<<PKGBUILDDIR>>/build-main/bindings/f77/.libs ./.libs/libfgetdata.so -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lgfortran -lquadmath -lm -lc -lgcc_s  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libf95getdata.so.7 -o .libs/libf95getdata.so.7.0.0
libtool: link: (cd ".libs" && rm -f "libf95getdata.so.7" && ln -s "libf95getdata.so.7.0.0" "libf95getdata.so.7")
libtool: link: (cd ".libs" && rm -f "libf95getdata.so" && ln -s "libf95getdata.so.7.0.0" "libf95getdata.so")
libtool: link: ar cr .libs/libf95getdata.a  getdata.o
libtool: link: ranlib .libs/libf95getdata.a
libtool: link: ( cd ".libs" && rm -f "libf95getdata.la" && ln -s "../libf95getdata.la" "libf95getdata.la" )
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
Making all in perl
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
rm -rf build
../make_parameters P > make_parameters.sed
mkdir build
cp -r ../../../bindings/perl/src/* build
[ -e build/Makefile.PL ] || cp src/Makefile.PL build
mkdir build/lib
touch build/build.stamp
[ -e build/t ] || mkdir build/t
/usr/bin//perl ../../../bindings/perl/simple_funcs.pl ../../../bindings/perl/simple_funcs.xsin > build/simple_funcs.xs
cp -r ../../../bindings/perl/t/* build/t
touch build/test.stamp
rm -f build/lib/GetData.pm
/bin/sed -f make_parameters.sed ../../../bindings/perl/GetData.pm.in | \
	/usr/bin//perl ../../../bindings/perl/funclist.pl ../../../bindings/perl/src/GetData.xs \
	build/simple_funcs.xs > build/lib/GetData.pm
chmod a-w build/lib/GetData.pm
cd build && /usr/bin//perl Makefile.PL
Warning: -L../../../src/.libs/ changed to -L/<<PKGBUILDDIR>>/build-main/bindings/perl/build/../../../src/.libs/
Generating a Unix-style Makefile
Writing Makefile for GetData
Writing MYMETA.yml and MYMETA.json
mv build/Makefile build/Makefile.tmp
/bin/sed 's|^LD_RUN_PATH|#LD_RUN_PATH|g;s|LD_RUN_PATH="$(LD_RUN_PATH)" ||g' \
	build/Makefile.tmp > build/Makefile
cd build && make
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/perl/build'
Running Mkbootstrap for GetData ()
"/usr/bin/perl" "/usr/share/perl/5.32/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.32/ExtUtils/typemap' -typemap '/<<PKGBUILDDIR>>/build-main/bindings/perl/build/typemap'  GetData.xs > GetData.xsc
chmod 644 "GetData.bs"
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- GetData.bs blib/arch/auto/GetData/GetData.bs 644
cp lib/GetData.pm blib/lib/GetData.pm
mv GetData.xsc GetData.c
x86_64-linux-gnu-gcc -c  -I../../../../src -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g   -DVERSION=\"0.1\" -DXS_VERSION=\"0.1\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DHAVE_CONFIG_H -I../../../src GetData.c
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from GetData.xs:23:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:946:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  EXTEND(sp, 4);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:946:3: note: '{' token is here
  EXTEND(sp, 4);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:946:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  EXTEND(sp, 4);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:946:3: note: ')' token is here
  EXTEND(sp, 4);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:983:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:5: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:983:3: note: '{' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:16: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
               ^
GetData.xs:983:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
GetData.xs:983:3: note: ')' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:984:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  EXTEND(SP, 2);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:984:3: note: '{' token is here
  EXTEND(SP, 2);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:984:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  EXTEND(SP, 2);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:984:3: note: ')' token is here
  EXTEND(SP, 2);
  ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1132:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint8_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1132:7: note: '{' token is here
      GDP_UNPACKU(uint8_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1132:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint8_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1132:7: note: ')' token is here
      GDP_UNPACKU(uint8_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1135:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int8_t);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1135:7: note: '{' token is here
      GDP_UNPACKI(int8_t);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1135:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int8_t);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1135:7: note: ')' token is here
      GDP_UNPACKI(int8_t);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1138:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint16_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1138:7: note: '{' token is here
      GDP_UNPACKU(uint16_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1138:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint16_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1138:7: note: ')' token is here
      GDP_UNPACKU(uint16_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1141:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int16_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1141:7: note: '{' token is here
      GDP_UNPACKI(int16_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1141:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int16_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1141:7: note: ')' token is here
      GDP_UNPACKI(int16_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1144:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint32_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1144:7: note: '{' token is here
      GDP_UNPACKU(uint32_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1144:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint32_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1144:7: note: ')' token is here
      GDP_UNPACKU(uint32_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1147:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int32_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1147:7: note: '{' token is here
      GDP_UNPACKI(int32_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1147:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int32_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1147:7: note: ')' token is here
      GDP_UNPACKI(int32_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1150:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint64_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1150:7: note: '{' token is here
      GDP_UNPACKU(uint64_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1150:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKU(uint64_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1150:7: note: ')' token is here
      GDP_UNPACKU(uint64_t);
      ^~~~~~~~~~~~~~~~~~~~~
GetData.xs:1087:5: note: expanded from macro 'GDP_UNPACKU'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1153:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int64_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1153:7: note: '{' token is here
      GDP_UNPACKI(int64_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1153:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKI(int64_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1153:7: note: ')' token is here
      GDP_UNPACKI(int64_t);
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:1093:5: note: expanded from macro 'GDP_UNPACKI'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1156:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKN(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1156:7: note: '{' token is here
      GDP_UNPACKN(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1156:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKN(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1156:7: note: ')' token is here
      GDP_UNPACKN(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1159:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKN(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1159:7: note: '{' token is here
      GDP_UNPACKN(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1159:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKN(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1159:7: note: ')' token is here
      GDP_UNPACKN(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1099:5: note: expanded from macro 'GDP_UNPACKN'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1162:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKC(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1162:7: note: '{' token is here
      GDP_UNPACKC(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1162:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKC(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1162:7: note: ')' token is here
      GDP_UNPACKC(float);
      ^~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1165:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKC(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1165:7: note: '{' token is here
      GDP_UNPACKC(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1165:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNPACKC(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1165:7: note: ')' token is here
      GDP_UNPACKC(double);
      ^~~~~~~~~~~~~~~~~~~
GetData.xs:1105:5: note: expanded from macro 'GDP_UNPACKC'
    EXTEND(sp, n); \
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1361:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1361:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
GetData.c:1361:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1361:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:1361:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:1361:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1361:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
GetData.c:1361:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1396:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1396:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:1396:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1396:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:1396:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:1396:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1396:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:1396:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1401:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1401:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:1401:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:1401:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1459:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1459:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:1459:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:1459:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1489:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1489:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:1489:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:1489:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1274:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1274:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1274:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1274:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1274:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1274:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1274:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1274:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1278:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1278:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1278:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1278:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1278:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1278:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1278:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1278:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1285:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1285:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1285:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1285:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1285:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1285:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1285:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1285:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1290:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1290:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1290:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1290:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1290:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1290:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1290:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1290:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1316:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1316:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1316:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1316:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1316:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1316:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1316:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1316:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1320:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1320:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1320:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1320:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1320:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1320:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1320:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1320:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1327:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1327:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1327:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1327:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1327:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1327:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1327:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1327:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1332:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1332:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1332:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1332:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1332:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1332:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1332:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1332:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1365:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1365:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1365:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1365:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1365:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1365:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1365:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1365:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1369:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1369:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1369:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1369:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1369:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1369:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1369:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1369:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:1697:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:1697:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:1697:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:1697:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1397:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1397:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1397:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1397:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1397:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1397:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1397:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1397:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1402:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1402:7: note: '{' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1402:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1402:7: note: '{' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1402:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1402:7: note: ')' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1402:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1402:7: note: ')' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1420:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1420:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1420:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1420:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1420:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1420:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1420:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1420:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1425:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1425:7: note: '{' token is here
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1425:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1425:7: note: ')' token is here
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1434:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1434:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1434:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1434:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1434:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1434:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1434:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1434:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1454:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1454:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1454:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1454:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1454:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1454:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1454:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1454:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1457:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 6);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1457:7: note: '{' token is here
      EXTEND(sp, 6);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1457:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 6);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1457:7: note: ')' token is here
      EXTEND(sp, 6);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1467:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1467:11: note: '{' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1467:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1467:11: note: ')' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1477:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1477:11: note: '{' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1477:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1477:11: note: ')' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1482:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1482:11: note: '{' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1482:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1482:11: note: ')' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1487:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1487:11: note: '{' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1487:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1487:11: note: ')' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1492:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 8);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1492:11: note: '{' token is here
          EXTEND(sp, 8);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1492:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 8);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1492:11: note: ')' token is here
          EXTEND(sp, 8);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1505:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1505:11: note: '{' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1505:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1505:11: note: ')' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1515:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1515:11: note: '{' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1515:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1515:11: note: ')' token is here
          EXTEND(sp, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1520:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1520:11: note: '{' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1520:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1520:11: note: ')' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1528:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1528:11: note: '{' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1528:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1528:11: note: ')' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1539:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1539:11: note: '{' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1539:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1539:11: note: ')' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1548:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1548:11: note: '{' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1548:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1548:11: note: ')' token is here
          EXTEND(sp, 4);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1556:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1556:11: note: '{' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1556:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1556:11: note: ')' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1578:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1578:11: note: '{' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1578:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1578:11: note: ')' token is here
          EXTEND(sp, 6);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1598:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1598:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1598:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1598:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1598:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1598:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1598:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1598:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1600:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1600:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1600:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1600:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2039:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2039:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:2039:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:2039:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1638:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1638:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1638:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1638:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1638:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1638:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1638:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1638:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1643:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1643:7: note: '{' token is here
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1643:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1643:7: note: ')' token is here
      EXTEND(sp, len);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1652:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1652:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1652:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1652:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1652:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1652:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1652:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1652:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1672:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1672:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1672:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1672:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1672:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1672:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1672:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1672:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1677:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1677:7: note: '{' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1677:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1677:7: note: '{' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1677:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1677:7: note: ')' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1677:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1677:7: note: ')' token is here
      XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2205:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2205:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
GetData.c:2205:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2205:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:2205:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:2205:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2205:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
GetData.c:2205:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2247:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2247:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:2247:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2247:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:2247:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:2247:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2247:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:2247:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2253:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2253:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:2253:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:2253:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2288:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2288:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:2288:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2288:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:2288:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:2288:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2288:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:2288:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2293:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2293:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:2293:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:2293:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2328:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2328:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:2328:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2328:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:2328:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:2328:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2328:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:2328:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:2333:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:2333:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:2333:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:2333:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1801:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1801:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1801:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1801:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1801:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1801:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1801:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1801:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1808:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1808:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1808:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1808:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1808:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1808:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1808:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1808:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1818:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1818:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1818:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1818:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1818:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1818:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1818:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1818:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1826:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1826:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1826:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1826:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1826:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1826:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1826:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1826:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1835:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1835:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1835:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1835:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1835:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1835:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1835:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1835:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1842:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1842:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1842:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1842:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1851:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1851:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1851:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1851:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1851:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1851:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1851:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1851:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR(safefree(data_out));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1858:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1858:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:1858:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1858:9: note: '{' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1858:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1858:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1858:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:1858:9: note: ')' token is here
        XPUSHs(sv_2mortal(newSVpvn(data_out, len * GD_SIZE(return_type))));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1880:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1880:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1880:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1880:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1880:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1880:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1880:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1880:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1883:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1883:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1883:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1883:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1889:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1889:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1889:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1889:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1889:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1889:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1889:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1889:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1891:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1891:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1891:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1891:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1913:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1913:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1913:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1913:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1913:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1913:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1913:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1913:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1916:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1916:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1916:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1916:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1922:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1922:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1922:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1922:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1922:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1922:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1922:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1922:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1924:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1924:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1924:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1924:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1949:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1949:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1949:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1949:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1949:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1949:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1949:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1949:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1952:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1952:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1952:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1952:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1958:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1958:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1958:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1958:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1958:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1958:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1958:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1958:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1960:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1960:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1960:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1960:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1985:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1985:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:1985:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1985:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:1985:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:1985:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1985:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:1985:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1992:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1992:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1992:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1992:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:1996:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:1996:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:1996:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:1996:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2017:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2017:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2017:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2017:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2017:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2017:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2017:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2017:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2020:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2020:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2020:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2020:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2026:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2026:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2026:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2026:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2026:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2026:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2026:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2026:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2028:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2028:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2028:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2028:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2049:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2049:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2049:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2049:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2049:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2049:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2049:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2049:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2052:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2052:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2052:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2052:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2058:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2058:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2058:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2058:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2058:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2058:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2058:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2058:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2060:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2060:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2060:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2060:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2082:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2082:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2082:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2082:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2082:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2082:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2082:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2082:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2085:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2085:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2085:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2085:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2091:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2091:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2091:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2091:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2091:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2091:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2091:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2091:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2093:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2093:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2093:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2093:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2116:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2116:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2116:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2116:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2116:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2116:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2116:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2116:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2119:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2119:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2119:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2119:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2125:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2125:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2125:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2125:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2125:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2125:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2125:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2125:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2127:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2127:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2127:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2127:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2149:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2149:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2149:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2149:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2149:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2149:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2149:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2149:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2152:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2152:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2152:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2152:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2158:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2158:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2158:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2158:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2158:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2158:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2158:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2158:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2160:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2160:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2160:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2160:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2182:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2182:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2182:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2182:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2182:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2182:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2182:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2182:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2185:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2185:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2185:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2185:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2192:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2192:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2192:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2192:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2192:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2192:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2192:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2192:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2194:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2194:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2194:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2194:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2217:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2217:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2217:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2217:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2217:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2217:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2217:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2217:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3148:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3148:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3148:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3148:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3148:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3148:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3148:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3148:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3155:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3155:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3155:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3155:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2246:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2246:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2246:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2246:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2246:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2246:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2246:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2246:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3204:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3204:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3204:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3204:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3204:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3204:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3204:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3204:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3211:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3211:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3211:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3211:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2276:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2276:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2276:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2276:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2276:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2276:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2276:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2276:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3262:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3262:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3262:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3262:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3262:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3262:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3262:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3262:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3269:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3269:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3269:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3269:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2306:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2306:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2306:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2306:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2306:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2306:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2306:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2306:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3320:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3320:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3320:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3320:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3320:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3320:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3320:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3320:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3327:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3327:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3327:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3327:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2337:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2337:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2337:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2337:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2337:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2337:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2337:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2337:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(if (din.arg_type != GDP_DATA_IN_PACK)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3379:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3379:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3379:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3379:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:3379:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:3379:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3379:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3379:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3386:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3386:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3386:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3386:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2369:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2369:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2369:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2369:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2369:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2369:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2369:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2369:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3450:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3450:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3450:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3450:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3450:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3450:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3450:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3450:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3455:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3455:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3455:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3455:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2398:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2398:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2398:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2398:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2398:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2398:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2398:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2398:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3513:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3513:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3513:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3513:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3513:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3513:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3513:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3513:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3518:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3518:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3518:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3518:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2423:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2423:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2423:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2423:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2423:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2423:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2423:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2423:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3564:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3564:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3564:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3564:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3564:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3564:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3564:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3564:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3569:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3569:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3569:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3569:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2444:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2444:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2444:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2444:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2444:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2444:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2444:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2444:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2446:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, nf);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2446:7: note: '{' token is here
      EXTEND(sp, nf);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2446:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, nf);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2446:7: note: ')' token is here
      EXTEND(sp, nf);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2450:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2450:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2450:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2450:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2472:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2472:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2472:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2472:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2472:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2472:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2472:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2472:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2475:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2475:9: note: '{' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2475:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2475:9: note: ')' token is here
        EXTEND(sp, 1);
        ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2481:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2481:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2481:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2481:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2481:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2481:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2481:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2481:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2483:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2483:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2483:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2483:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2504:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2504:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2504:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2504:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2504:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2504:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2504:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2504:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2506:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    EXTEND(sp, 2);
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2506:5: note: '{' token is here
    EXTEND(sp, 2);
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2506:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    EXTEND(sp, 2);
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2506:5: note: ')' token is here
    EXTEND(sp, 2);
    ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2528:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2528:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2528:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2528:7: note: '{' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2528:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2528:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2528:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2528:7: note: ')' token is here
      GDP_UNDEF_ON_ERROR();
      ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2530:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2530:7: note: '{' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2530:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2530:7: note: ')' token is here
      EXTEND(sp, 1);
      ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2553:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2553:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2553:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2553:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2553:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2553:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2553:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2553:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3840:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3840:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3840:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3840:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:3840:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:3840:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3840:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3840:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3845:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3845:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3845:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3845:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2571:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2571:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2571:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2571:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2571:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2571:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2571:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2571:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3883:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3883:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:3883:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3883:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:3883:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:3883:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3883:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:3883:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:3888:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:3888:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:3888:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:3888:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2593:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2593:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2593:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2593:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2593:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2593:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2593:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2593:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2601:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2601:7: note: '{' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2601:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2601:7: note: '{' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2601:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2601:7: note: ')' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2601:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2601:7: note: ')' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2624:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2624:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2624:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2624:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2624:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2624:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2624:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2624:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_out));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2630:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2630:7: note: '{' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2630:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2630:7: note: '{' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2630:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2630:7: note: ')' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2630:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2630:7: note: ')' token is here
      XPUSHs(sv_2mortal(gdp_newRVavpv(data_out, len)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2648:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2648:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2648:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2648:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2648:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2648:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2648:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2648:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2654:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2654:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2654:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2654:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2654:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2654:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2654:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2654:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2659:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2659:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2659:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2659:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2659:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2659:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2659:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2659:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2682:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2682:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2682:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2682:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2682:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2682:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2682:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2682:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4099:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4099:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4099:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4099:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4099:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4099:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4099:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4099:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4105:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4105:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4105:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4105:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2710:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2710:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2710:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2710:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2710:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2710:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2710:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2710:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4154:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4154:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4154:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4154:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4154:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4154:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4154:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4154:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4160:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4160:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4160:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4160:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2737:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2737:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2737:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2737:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2737:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2737:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2737:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2737:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4208:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4208:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4208:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4208:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4208:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4208:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4208:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4208:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4214:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4214:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4214:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4214:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2765:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2765:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2765:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2765:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2765:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2765:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2765:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2765:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR(safefree(data_in));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4263:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4263:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4263:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4263:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4263:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4263:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4263:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4263:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4269:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4269:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4269:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4269:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2786:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2786:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.xs:2786:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2786:5: note: '{' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.xs:2786:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.xs:2786:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2786:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.xs:2786:5: note: ')' token is here
    GDP_UNDEF_ON_ERROR();
    ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2792:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2792:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2792:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2792:9: note: '{' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2792:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2792:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2792:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2792:9: note: ')' token is here
        XPUSHs(sv_2mortal(gdp_newRVavpv0(data_out[i])));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2797:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2797:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
GetData.xs:2797:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.xs:2797:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
GetData.xs:2797:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
GetData.xs:2797:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.xs:2797:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
GetData.xs:2797:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV*)av)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:16:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:16:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:16:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:16:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:16:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:16:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:16:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:16:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4379:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4379:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4379:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4379:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4379:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4379:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4379:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4379:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4384:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4384:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4384:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4384:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:38:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:38:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:38:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:38:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:38:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:38:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:38:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:38:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4479:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4479:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4479:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4479:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4479:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4479:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4479:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4479:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4487:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4487:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4487:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4487:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:62:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:62:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:62:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:62:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:62:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:62:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:62:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:62:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4558:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4558:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4558:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4558:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4558:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4558:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4558:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4558:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4564:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4564:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4564:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4564:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:83:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:83:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:83:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:83:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:83:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:83:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:83:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:83:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4618:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4618:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4618:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4618:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4618:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4618:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4618:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4618:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4623:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4623:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4623:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4623:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:103:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:103:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:103:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:103:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:103:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:103:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:103:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:103:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4672:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4672:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4672:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4672:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4672:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4672:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4672:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4672:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4677:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4677:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4677:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4677:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:123:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:123:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:123:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:123:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4726:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4726:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4726:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4726:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4726:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4726:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4726:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4726:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4731:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4731:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4731:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4731:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:143:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:143:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:143:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:143:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:143:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:143:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:143:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:143:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4780:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4780:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4780:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4780:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4780:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4780:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4780:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4780:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4785:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4785:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4785:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4785:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:163:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:163:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:163:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:163:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:163:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:163:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:163:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:163:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4834:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4834:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4834:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4834:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4834:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4834:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4834:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4834:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4839:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4839:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4839:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4839:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:184:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:184:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:184:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:184:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:184:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:184:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:184:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:184:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4890:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4890:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4890:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4890:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4890:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4890:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4890:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4890:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4895:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4895:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:203:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:203:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:203:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:203:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:203:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:203:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:203:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:203:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4942:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4942:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:4942:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4942:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:4942:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:4942:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4942:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:4942:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:4947:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:4947:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:4947:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:4947:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:223:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:223:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:223:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:223:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:223:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:223:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:223:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:223:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5017:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5017:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5017:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5017:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5017:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5017:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5017:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5017:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5022:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5022:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5022:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5022:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:242:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:242:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:242:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:242:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:242:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:242:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:242:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:242:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5063:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5063:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5063:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5063:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5063:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5063:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5063:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5063:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5068:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5068:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5068:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5068:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:263:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:263:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:263:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:263:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:263:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:263:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:263:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:263:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5180:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5180:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5180:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5180:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5180:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5180:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5180:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5180:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5188:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5188:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5188:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5188:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:286:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:286:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:286:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:286:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:286:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:286:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:286:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:286:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5275:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5275:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5275:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5275:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5275:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5275:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5275:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5275:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5281:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5281:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5281:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5281:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:306:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:306:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:306:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:306:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:306:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:306:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:306:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:306:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5336:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5336:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5336:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5336:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5336:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5336:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5336:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5336:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5341:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5341:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5341:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5341:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:325:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:325:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:325:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:325:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:325:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:325:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:325:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:325:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5400:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5400:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5400:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5400:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5400:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5400:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5400:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5400:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5405:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5405:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5405:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5405:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:344:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:344:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:344:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:344:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:344:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:344:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:344:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:344:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5464:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5464:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5464:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5464:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5464:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5464:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5464:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5464:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5469:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5469:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5469:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5469:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:363:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:363:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:363:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:363:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:363:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:363:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:363:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:363:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5520:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5520:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5520:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5520:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5520:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5520:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5520:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5520:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5525:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5525:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5525:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5525:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:383:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:383:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:383:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:383:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:383:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:383:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:383:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:383:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5595:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5595:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5595:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5595:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5595:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5595:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5595:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5595:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5600:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5600:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5600:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5600:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:400:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:400:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:400:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:400:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:400:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:400:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:400:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:400:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5637:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5637:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5637:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5637:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:5637:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:5637:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5637:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5637:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5642:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5642:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5642:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5642:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:417:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:417:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:417:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:417:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:417:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:417:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:417:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:417:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5679:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5679:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5679:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5679:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:5679:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:5679:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5679:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5679:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5684:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5684:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5684:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5684:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:434:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:434:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:434:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:434:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:434:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:434:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:434:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:434:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5721:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5721:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5721:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5721:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:5721:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:5721:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5721:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5721:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5726:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5726:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5726:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5726:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:451:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:451:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:451:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:451:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:451:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:451:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:451:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:451:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5763:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5763:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5763:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5763:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5763:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5763:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5763:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5763:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5768:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5768:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5768:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5768:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:468:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:468:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:468:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:468:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:468:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:468:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:468:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:468:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5805:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5805:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5805:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5805:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:5805:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:5805:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5805:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:5805:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5810:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5810:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5810:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5810:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:486:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:486:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:486:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:486:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:486:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:486:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:486:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:486:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5851:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5851:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5851:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5851:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5851:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5851:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5851:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5851:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5856:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5856:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5856:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5856:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:507:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:507:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:507:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:507:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:507:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:507:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:507:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:507:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5901:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5901:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5901:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5901:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5901:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5901:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5901:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5901:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5906:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:5906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:5906:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:529:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:529:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:529:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:529:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:529:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:529:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:529:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:529:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5995:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5995:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:5995:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:5995:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:5995:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:5995:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:5995:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:5995:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6003:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6003:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6003:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6003:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:553:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:553:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:553:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:553:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:553:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:553:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:553:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:553:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6068:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6068:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6068:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6068:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6068:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6068:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6068:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6068:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6074:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6074:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6074:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6074:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:574:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:574:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:574:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:574:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:574:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:574:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:574:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:574:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6122:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6122:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6122:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6122:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6122:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6122:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6122:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6122:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6127:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6127:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6127:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6127:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:594:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:594:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:594:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:594:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:594:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:594:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:594:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:594:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6170:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6170:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6170:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6170:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6170:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6170:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6170:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6170:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6175:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6175:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6175:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6175:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:614:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:614:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:614:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:614:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:614:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:614:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:614:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:614:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6218:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6218:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6218:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6218:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6218:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6218:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6218:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6218:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6223:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6223:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6223:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6223:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:634:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:634:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:634:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:634:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:634:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:634:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:634:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:634:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6266:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6266:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6266:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6266:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6266:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6266:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6266:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6266:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6271:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6271:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6271:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6271:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:654:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:654:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:654:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:654:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:654:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:654:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:654:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:654:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6314:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6314:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6314:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6314:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6314:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6314:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6314:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6314:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6319:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6319:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6319:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6319:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:675:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:675:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:675:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:675:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:675:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:675:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:675:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:675:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6364:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6364:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6364:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6364:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6364:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6364:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6364:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6364:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6369:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6369:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6369:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6369:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:693:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:693:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:693:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:693:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:693:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:693:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:693:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:693:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6408:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6408:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6408:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6408:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6408:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6408:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6408:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6408:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6413:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6413:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6413:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6413:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:712:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:712:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:712:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:712:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:712:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:712:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:712:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:712:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6454:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6454:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6454:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6454:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6454:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6454:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6454:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6454:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6459:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6459:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6459:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6459:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:729:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:729:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:729:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:729:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:729:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:729:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:729:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:729:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6502:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6502:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6502:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6502:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6502:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6502:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6502:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6502:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6507:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6507:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6507:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6507:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:745:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:745:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:745:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:745:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:745:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:745:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:745:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:745:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6542:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6542:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6542:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6542:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:6542:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:6542:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6542:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:6542:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6547:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6547:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6547:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6547:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:762:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:762:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:762:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:762:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:762:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:762:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:762:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:762:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6584:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6584:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6584:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6584:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6584:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6584:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6584:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6584:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6589:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6589:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6589:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6589:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:779:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:779:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:779:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:779:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:779:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:779:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:779:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:779:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6626:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6626:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6626:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6626:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6626:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6626:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6626:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6626:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6631:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6631:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6631:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6631:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:797:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:797:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:797:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:797:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:797:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:797:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:797:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:797:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6670:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6670:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6670:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6670:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6670:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6670:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6670:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6670:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6675:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6675:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6675:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6675:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:814:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:814:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:814:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:814:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:814:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:814:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:814:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:814:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6712:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6712:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6712:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6712:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6712:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6712:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6712:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6712:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6717:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6717:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6717:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6717:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:831:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:831:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:831:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:831:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:831:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:831:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:831:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:831:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6754:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6754:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6754:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6754:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:6754:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:6754:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6754:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:6754:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6759:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6759:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6759:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6759:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:848:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:848:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:848:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:848:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:848:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:848:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:848:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:848:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6805:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6805:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6805:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6805:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:6805:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:6805:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6805:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:6805:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6810:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6810:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6810:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6810:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:865:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:865:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:865:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:865:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:865:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:865:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:865:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:865:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6847:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6847:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6847:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6847:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:6847:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:6847:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6847:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6847:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6852:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6852:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6852:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6852:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:883:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:883:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:883:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:883:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:883:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:883:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:883:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:883:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6891:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6891:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6891:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6891:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6891:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6891:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6891:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6891:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6896:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6896:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6896:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6896:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:900:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:900:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:900:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:900:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:900:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:900:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:900:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:900:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6933:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6933:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6933:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6933:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6933:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6933:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6933:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6933:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6938:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6938:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6938:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6938:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:917:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:917:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:917:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:917:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:917:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:917:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:917:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:917:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6977:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6977:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:6977:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6977:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:6977:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:6977:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6977:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:6977:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:6982:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:6982:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:6982:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:6982:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:937:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:937:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:937:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:937:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:937:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:937:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:937:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:937:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7031:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7031:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7031:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7031:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7031:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7031:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7031:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7031:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7036:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7036:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7036:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7036:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:955:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:955:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:955:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:955:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:955:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:955:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:955:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:955:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7081:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7081:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7081:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7081:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7081:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7081:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7081:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7081:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7086:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7086:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7086:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7086:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:973:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:973:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:973:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:973:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:973:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:973:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:973:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:973:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7134:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7134:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7134:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7134:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7134:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7134:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7134:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7134:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7139:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7139:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7139:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7139:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:992:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:992:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:992:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:992:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:992:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:992:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:992:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:992:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7192:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7192:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7192:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7192:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7192:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7192:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7192:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7192:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7197:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7197:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7197:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7197:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1011:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1011:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1011:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1011:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1011:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1011:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1011:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1011:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7250:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7250:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7250:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7250:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7250:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7250:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7250:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7250:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7255:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7255:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7255:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7255:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7294:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7294:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
GetData.c:7294:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7294:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7294:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7294:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7294:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
GetData.c:7294:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1030:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1030:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1030:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1030:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1030:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1030:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1030:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1030:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7312:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7312:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7312:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7312:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7312:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7312:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7312:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7312:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7317:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7317:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7317:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7317:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1050:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1050:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1050:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1050:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1050:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1050:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1050:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1050:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7384:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7384:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7384:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7384:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7384:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7384:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7384:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7384:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7389:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7389:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7389:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7389:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1070:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1070:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1070:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1070:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1070:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1070:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1070:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1070:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7456:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7456:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7456:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7456:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7456:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7456:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7456:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7456:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7461:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7461:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7461:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7461:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1088:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1088:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1088:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1088:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1088:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1088:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1088:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1088:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7506:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7506:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7506:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7506:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7511:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7511:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7511:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7511:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1106:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1106:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1106:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1106:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7556:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7556:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7556:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7556:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7556:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7556:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7556:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7556:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7561:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7561:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7561:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7561:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1123:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1123:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1123:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1123:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7598:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7598:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7598:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7598:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7598:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7598:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7598:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7598:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7603:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7603:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7603:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7603:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1142:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1142:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1142:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1142:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1142:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1142:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1142:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1142:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7650:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7650:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7650:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7650:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7650:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7650:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7650:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7650:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7655:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7655:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7655:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7655:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1158:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1158:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1158:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1158:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1158:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1158:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1158:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1158:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7690:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7690:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7690:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7690:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7690:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7690:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7690:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7690:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7695:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7695:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7695:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7695:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1177:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1177:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1177:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1177:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7742:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7742:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7742:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7742:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7742:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7742:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7742:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7742:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7747:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7747:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7747:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7747:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1196:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1196:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1196:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1196:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1196:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1196:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1196:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1196:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7794:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7794:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7794:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7794:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7794:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7794:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7794:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7794:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7799:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7799:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7799:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7799:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1213:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1213:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1213:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1213:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1213:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1213:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1213:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1213:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7836:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7836:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7836:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7836:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7836:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7836:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7836:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7836:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7841:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7841:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7841:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7841:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1231:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1231:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1231:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1231:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1231:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1231:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1231:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1231:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7886:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7886:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7886:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7886:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7886:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7886:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7886:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7886:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7891:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7891:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7891:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7891:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1250:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1250:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1250:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1250:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1250:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1250:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1250:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1250:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7944:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7944:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7944:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7944:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7944:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7944:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7944:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7944:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7949:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7949:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7949:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7949:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1267:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1267:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1267:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1267:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1267:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1267:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1267:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1267:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7986:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7986:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:7986:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7986:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:7986:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:7986:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7986:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:7986:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:7991:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:7991:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:7991:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:7991:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1287:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1287:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1287:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1287:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1287:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1287:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1287:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1287:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8046:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:18: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8046:13: note: '{' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:29: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8046:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:437:5: note: expanded from macro 'TARGn'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8046:13: note: '{' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:437:16: note: expanded from macro 'TARGn'
    STMT_START {                                                        \
               ^
GetData.c:8046:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:449:13: note: expanded from macro 'TARGn'
            SvNV_set(TARG, TARGn_nv);                                   \
            ^~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1308:2: note: expanded from macro 'SvNV_set'
        STMT_START { \
        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8046:13: note: '{' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:449:13: note: expanded from macro 'TARGn'
            SvNV_set(TARG, TARGn_nv);                                   \
            ^~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1308:13: note: expanded from macro 'SvNV_set'
        STMT_START { \
                   ^
GetData.c:8046:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:449:13: note: expanded from macro 'TARGn'
            SvNV_set(TARG, TARGn_nv);                                   \
            ^~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1311:48: note: expanded from macro 'SvNV_set'
                (((XPVNV*)SvANY(sv))->xnv_u.xnv_nv = (val)); } STMT_END
                                                             ^
GetData.c:8046:13: note: ')' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:449:13: note: expanded from macro 'TARGn'
            SvNV_set(TARG, TARGn_nv);                                   \
            ^~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1311:50: note: expanded from macro 'SvNV_set'
                (((XPVNV*)SvANY(sv))->xnv_u.xnv_nv = (val)); } STMT_END
                                                               ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8046:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:453:5: note: expanded from macro 'TARGn'
    } STMT_END
    ^
GetData.c:8046:13: note: ')' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:31: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:453:7: note: expanded from macro 'TARGn'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8046:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:56: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8046:13: note: ')' token is here
        XSprePUSH; PUSHn((double)RETVAL);
                   ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:458:58: note: expanded from macro 'PUSHn'
#define PUSHn(n)        STMT_START { TARGn(n,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8051:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8051:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8051:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8051:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1303:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1303:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1303:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1303:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1303:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1303:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1303:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1303:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8086:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8086:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8086:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8086:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8086:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8086:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8086:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8086:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8091:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8091:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8091:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8091:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1320:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1320:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1320:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1320:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1320:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1320:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1320:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1320:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8128:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8128:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8128:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8128:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8128:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8128:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8128:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8128:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8133:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8133:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8133:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8133:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1337:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1337:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1337:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1337:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1337:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1337:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1337:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1337:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8170:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8170:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8170:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8170:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8170:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8170:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8170:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8170:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8175:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8175:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8175:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8175:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1353:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1353:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1353:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1353:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1353:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1353:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1353:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1353:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8210:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8210:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8210:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8210:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8210:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8210:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8210:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8210:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8215:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8215:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8215:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8215:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1373:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1373:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1373:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1373:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1373:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1373:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1373:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1373:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8264:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8264:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8264:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8264:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8264:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8264:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8264:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8264:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8269:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8269:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8269:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8269:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1390:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1390:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1390:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1390:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1390:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1390:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1390:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1390:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8306:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8306:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8306:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8306:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8306:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8306:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8306:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8306:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8311:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8311:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8311:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8311:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1407:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1407:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1407:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1407:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1407:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1407:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1407:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1407:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8348:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8348:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8348:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8348:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8348:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8348:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8348:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8348:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8353:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8353:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8353:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8353:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1424:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1424:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1424:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1424:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1424:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1424:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1424:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1424:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8390:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8390:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8390:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8390:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8390:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8390:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8390:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8390:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8395:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8395:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8395:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8395:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1441:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1441:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1441:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1441:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1441:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1441:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1441:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1441:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8432:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8432:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8432:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8432:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8432:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8432:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8432:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8432:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8437:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8437:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8437:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8437:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1458:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1458:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1458:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1458:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1458:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1458:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1458:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1458:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8474:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8474:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8474:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8474:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8474:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8474:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8474:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8474:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8479:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8479:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8479:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8479:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1475:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1475:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1475:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1475:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1475:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1475:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1475:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1475:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8516:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8516:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8516:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8516:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:8516:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:8516:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8516:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:8516:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8521:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8521:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8521:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8521:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1494:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1494:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1494:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1494:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1494:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1494:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1494:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1494:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8568:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8568:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8568:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8568:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8568:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8568:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8568:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8568:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8573:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8573:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8573:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8573:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1513:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1513:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1513:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1513:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1513:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1513:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1513:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1513:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8614:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8614:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8614:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8614:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8614:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8614:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8614:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8614:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8619:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8619:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1535:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1535:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1535:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1535:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1535:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1535:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1535:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1535:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8686:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8686:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8686:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8686:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8686:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8686:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8686:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8686:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8691:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8691:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8691:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8691:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1557:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1557:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1557:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1557:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1557:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1557:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1557:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1557:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8752:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8752:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8752:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8752:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8752:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8752:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8752:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8752:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8757:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8757:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8757:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8757:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1578:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1578:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1578:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1578:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1578:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1578:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1578:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1578:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8826:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8826:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8826:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8826:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8826:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8826:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8826:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8826:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8831:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8831:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8831:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8831:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1597:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1597:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1597:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1597:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1597:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1597:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1597:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1597:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8886:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8886:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8886:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8886:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8886:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8886:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8886:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8886:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8891:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8891:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8891:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8891:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1619:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1619:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1619:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1619:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1619:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1619:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1619:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1619:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8944:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8944:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:8944:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8944:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:8944:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:8944:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8944:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:8944:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:8949:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:8949:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:8949:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:8949:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1640:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1640:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1640:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1640:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1640:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1640:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1640:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1640:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9024:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9024:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9024:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9024:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9024:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9024:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9024:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9024:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9029:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9029:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9029:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9029:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1662:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1662:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1662:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1662:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1662:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1662:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1662:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1662:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9076:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9076:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9076:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9076:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9076:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9076:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9076:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9076:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9081:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9081:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9081:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9081:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1679:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1679:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1679:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1679:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1679:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1679:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1679:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1679:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9118:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9118:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9118:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9118:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9118:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9118:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9118:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9118:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9123:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9123:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9123:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9123:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1696:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1696:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1696:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1696:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1696:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1696:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1696:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1696:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9166:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9166:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9166:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9166:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9166:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9166:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9166:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9166:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9171:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9171:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1714:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1714:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1714:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1714:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1714:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1714:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1714:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1714:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9222:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9222:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9222:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9222:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
GetData.c:9222:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
GetData.c:9222:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9222:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9222:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9227:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9227:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9227:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9227:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1731:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1731:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1731:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1731:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1731:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1731:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1731:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1731:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9273:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9273:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9273:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9273:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9273:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9273:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9273:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9273:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9278:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9278:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9278:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9278:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9316:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9316:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
GetData.c:9316:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9316:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9316:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9316:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9316:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
GetData.c:9316:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1762:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1762:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1762:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1762:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1762:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1762:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1762:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1762:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9353:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9353:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9353:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9353:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:9353:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:9353:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9353:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:9353:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9359:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9359:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9359:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9359:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1781:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1781:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1781:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1781:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1781:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1781:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1781:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1781:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9398:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9398:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9398:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9398:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9398:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9398:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9398:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9398:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9403:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9403:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9403:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9403:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1801:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1801:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1801:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1801:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1801:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1801:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1801:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1801:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9452:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9452:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9452:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9452:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9452:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9452:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9452:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9452:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9457:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9457:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9457:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9457:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1821:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1821:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1821:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1821:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1821:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1821:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1821:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1821:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9506:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9506:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9506:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9506:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9511:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9511:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9511:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9511:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1840:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1840:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1840:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1840:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1840:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1840:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1840:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1840:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9570:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9570:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9570:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9570:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9570:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9570:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9570:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9570:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9575:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9575:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9575:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9575:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1859:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1859:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1859:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1859:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1859:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1859:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1859:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1859:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9634:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9634:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9634:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9634:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9634:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9634:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9634:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9634:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9639:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9639:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9639:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9639:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1879:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1879:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1879:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1879:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1879:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1879:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1879:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1879:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9682:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9682:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9682:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9682:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9682:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9682:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9682:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9682:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9687:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9687:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9687:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9687:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1899:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1899:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1899:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1899:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1899:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1899:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1899:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1899:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9730:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9730:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9730:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9730:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9730:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9730:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9730:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9730:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9735:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9735:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9735:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9735:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1920:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1920:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1920:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1920:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1920:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1920:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1920:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1920:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9804:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9804:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9804:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9804:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
GetData.c:9804:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
GetData.c:9804:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9804:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
GetData.c:9804:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9809:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9809:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9809:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9809:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1938:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1938:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./simple_funcs.xs:1938:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./simple_funcs.xs:1938:3: note: '{' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./simple_funcs.xs:1938:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./simple_funcs.xs:1938:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./simple_funcs.xs:1938:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./simple_funcs.xs:1938:3: note: ')' token is here
                GDP_UNDEF_ON_ERROR();
                ^~~~~~~~~~~~~~~~~~~~
GetData.xs:61:50: note: expanded from macro 'GDP_UNDEF_ON_ERROR'
      if (gd_error(dirfile)) { x; dreturnvoid(); XSRETURN_UNDEF; }
                                                 ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9857:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9857:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
GetData.c:9857:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9857:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
GetData.c:9857:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
GetData.c:9857:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9857:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
GetData.c:9857:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
GetData.c:9862:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
GetData.c:9862:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
GetData.c:9862:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
GetData.c:9862:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
1670 warnings generated.
rm -f blib/arch/auto/GetData/GetData.so
x86_64-linux-gnu-gcc  -shared -L/usr/local/lib -fstack-protector-strong  GetData.o  -o blib/arch/auto/GetData/GetData.so  \
   -L/<<PKGBUILDDIR>>/build-main/bindings/perl/build/../../../src/.libs -lgetdata   \
  
chmod 755 blib/arch/auto/GetData/GetData.so
Manifying 1 pod document
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/perl/build'
touch build/make.stamp
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making all in util
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/util'
gcc -DHAVE_CONFIG_H -I. -I../../util -I../src  -Wall -Wextra -I../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o checkdirfile.o ../../util/checkdirfile.c
gcc -DHAVE_CONFIG_H -I. -I../../util -I../src  -Wall -Wextra -I../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o dirfile2ascii.o ../../util/dirfile2ascii.c
In file included from ../../util/dirfile2ascii.c:20:
../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=link gcc  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -o checkdirfile checkdirfile.o ../src/libgetdata.la -lm 
libtool: link: rm -f .libs/checkdirfile.nm .libs/checkdirfile.nmS .libs/checkdirfile.nmT
libtool: link: rm -f ".libs/checkdirfile.nmI"
1 warning generated.
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions "checkdirfileS.c")
/bin/bash ../libtool  --tag=CC   --mode=link gcc  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -o dirfile2ascii dirfile2ascii.o ../src/libgetdata.la -lm 
libtool: link: rm -f ".libs/checkdirfileS.c" ".libs/checkdirfile.nm" ".libs/checkdirfile.nmS" ".libs/checkdirfile.nmT" ".libs/checkdirfile.nmI"
libtool: link: gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z -Wl,relro -o .libs/checkdirfile checkdirfile.o  ../src/.libs/libgetdata.so -lm
libtool: link: rm -f .libs/dirfile2ascii.nm .libs/dirfile2ascii.nmS .libs/dirfile2ascii.nmT
libtool: link: rm -f ".libs/dirfile2ascii.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions "dirfile2asciiS.c")
libtool: link: rm -f ".libs/dirfile2asciiS.c" ".libs/dirfile2ascii.nm" ".libs/dirfile2ascii.nmS" ".libs/dirfile2ascii.nmT" ".libs/dirfile2ascii.nmI"
libtool: link: gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z -Wl,relro -o .libs/dirfile2ascii dirfile2ascii.o  ../src/.libs/libgetdata.so -lm
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/util'
Making all in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/man'
cat ../../man/header.tmac gd_alter_encoding.3in > gd_alter_encoding.3
cat ../../man/header.tmac gd_alter_endianness.3in > gd_alter_endianness.3
cat ../../man/header.tmac gd_alter_frameoffset.3in > gd_alter_frameoffset.3
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/man'
Making all in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/doc'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build-main'
for v in 3.9; do \
  dh_auto_build -Bbuild-py$v; \
done
	cd build-py3.9 && make -j4
make[2]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9'
Making all in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make  all-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o add.lo ../../src/add.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o ascii.lo ../../src/ascii.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o close.lo ../../src/close.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o common.lo ../../src/common.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/common.c  -fPIC -DPIC -o .libs/common.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/ascii.c  -fPIC -DPIC -o .libs/ascii.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/add.c  -fPIC -DPIC -o .libs/add.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/close.c  -fPIC -DPIC -o .libs/close.o
In file included from ../../src/common.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/add.cIn file included from ../../src/ascii.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: :21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
note: previous definition is here
#   define dprintf(fd, ...) \
           ^
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/close.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/close.c -o close.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/ascii.c -o ascii.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o compat.lo ../../src/compat.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/compat.c  -fPIC -DPIC -o .libs/compat.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o constant.lo ../../src/constant.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/constant.c  -fPIC -DPIC -o .libs/constant.o
In file included from ../../src/compat.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/compat.c -o compat.o >/dev/null 2>&1
In file included from ../../src/constant.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/constant.c -o constant.o >/dev/null 2>&1
1 warning generated.
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o del.lo ../../src/del.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/add.c -o add.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/del.c  -fPIC -DPIC -o .libs/del.o
In file included from ../../src/del.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o encoding.lo ../../src/encoding.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/encoding.c  -fPIC -DPIC -o .libs/encoding.o
In file included from ../../src/encoding.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/del.c -o del.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/common.c -o common.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/encoding.c -o encoding.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o endian.lo ../../src/endian.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o entry.lo ../../src/entry.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/endian.c  -fPIC -DPIC -o .libs/endian.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/entry.c  -fPIC -DPIC -o .libs/entry.o
In file included from ../../src/endian.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/entry.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o errors.lo ../../src/errors.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/endian.c -o endian.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/errors.c  -fPIC -DPIC -o .libs/errors.o
In file included from ../../src/errors.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/entry.c -o entry.o >/dev/null 2>&1
1 warning generated.
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o field_list.lo ../../src/field_list.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/errors.c -o errors.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/field_list.c  -fPIC -DPIC -o .libs/field_list.o
In file included from ../../src/field_list.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o flimits.lo ../../src/flimits.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flimits.c  -fPIC -DPIC -o .libs/flimits.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o flush.lo ../../src/flush.c
In file included from ../../src/flimits.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flush.c  -fPIC -DPIC -o .libs/flush.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/field_list.c -o field_list.o >/dev/null 2>&1
1 warning generated.
In file included from ../../src/flush.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flimits.c -o flimits.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o fragment.lo ../../src/fragment.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/fragment.c  -fPIC -DPIC -o .libs/fragment.o
In file included from ../../src/fragment.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o getdata.lo ../../src/getdata.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o globals.lo ../../src/globals.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/getdata.c  -fPIC -DPIC -o .libs/getdata.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/globals.c  -fPIC -DPIC -o .libs/globals.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/fragment.c -o fragment.o >/dev/null 2>&1
In file included from ../../src/getdata.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flush.c -o flush.o >/dev/null 2>&1
In file included from ../../src/globals.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/globals.c -o globals.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o index.lo ../../src/index.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o include.lo ../../src/include.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/index.c  -fPIC -DPIC -o .libs/index.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/include.c  -fPIC -DPIC -o .libs/include.o
In file included from ../../src/index.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/include.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/index.c -o index.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o iopos.lo ../../src/iopos.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/iopos.c  -fPIC -DPIC -o .libs/iopos.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/include.c -o include.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o mod.lo ../../src/mod.c
In file included from ../../src/iopos.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/mod.c  -fPIC -DPIC -o .libs/mod.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/iopos.c -o iopos.o >/dev/null 2>&1
In file included from ../../src/mod.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o move.lo ../../src/move.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o name.lo ../../src/name.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/move.c  -fPIC -DPIC -o .libs/move.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/name.c  -fPIC -DPIC -o .libs/name.o
In file included from ../../src/move.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/name.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/move.c -o move.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/mod.c -o mod.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/name.c -o name.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o native.lo ../../src/native.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/native.c  -fPIC -DPIC -o .libs/native.o
In file included from ../../src/native.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/native.c -o native.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o nfields.lo ../../src/nfields.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nfields.c  -fPIC -DPIC -o .libs/nfields.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o nframes.lo ../../src/nframes.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nframes.c  -fPIC -DPIC -o .libs/nframes.o
In file included from ../../src/nfields.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nfields.c -o nfields.o >/dev/null 2>&1
In file included from ../../src/nframes.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/nframes.c -o nframes.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o open.lo ../../src/open.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/open.c  -fPIC -DPIC -o .libs/open.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o parse.lo ../../src/parse.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o protect.lo ../../src/protect.c
In file included from ../../src/open.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/parse.c  -fPIC -DPIC -o .libs/parse.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/protect.c  -fPIC -DPIC -o .libs/protect.o
In file included from ../../src/parse.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
In file included from ../../src/protect.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/open.c -o open.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/protect.c -o protect.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o putdata.lo ../../src/putdata.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/putdata.c  -fPIC -DPIC -o .libs/putdata.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o raw.lo ../../src/raw.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/raw.c  -fPIC -DPIC -o .libs/raw.o
In file included from ../../src/putdata.c:23:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/raw.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/raw.c -o raw.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o sie.lo ../../src/sie.c
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/putdata.c -o putdata.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/sie.c  -fPIC -DPIC -o .libs/sie.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/parse.c -o parse.o >/dev/null 2>&1
In file included from ../../src/sie.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/sie.c -o sie.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o spf.lo ../../src/spf.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/spf.c  -fPIC -DPIC -o .libs/spf.o
In file included from ../../src/spf.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/spf.c -o spf.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o string.lo ../../src/string.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/string.c  -fPIC -DPIC -o .libs/string.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src    -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o types.lo ../../src/types.c
In file included from ../../src/string.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/types.c  -fPIC -DPIC -o .libs/types.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/string.c -o string.o >/dev/null 2>&1
In file included from ../../src/types.c:22:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatabzip2_la-bzip.lo `test -f 'bzip.c' || echo '../../src/'`bzip.c
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdataflac_la-flac.lo `test -f 'flac.c' || echo '../../src/'`flac.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/bzip.c  -fPIC -DPIC -o .libs/libgetdatabzip2_la-bzip.o
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flac.c  -fPIC -DPIC -o .libs/libgetdataflac_la-flac.o
In file included from ../../src/bzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from ../../src/flac.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/bzip.c -o libgetdatabzip2_la-bzip.o >/dev/null 2>&1
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/flac.c -o libgetdataflac_la-flac.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatagzip_la-gzip.lo `test -f 'gzip.c' || echo '../../src/'`gzip.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/gzip.c  -fPIC -DPIC -o .libs/libgetdatagzip_la-gzip.o
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatalzma_la-lzma.lo `test -f 'lzma.c' || echo '../../src/'`lzma.c
In file included from ../../src/gzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/lzma.c  -fPIC -DPIC -o .libs/libgetdatalzma_la-lzma.o
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/gzip.c -o libgetdatagzip_la-gzip.o >/dev/null 2>&1
In file included from ../../src/lzma.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o libgetdatazzip_la-zzip.lo `test -f 'zzip.c' || echo '../../src/'`zzip.c
11 warning generated.
 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/lzma.c -o libgetdatalzma_la-lzma.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/types.c -o types.o >/dev/null 2>&1
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/zzip.c  -fPIC -DPIC -o .libs/libgetdatazzip_la-zzip.o
In file included from ../../src/zzip.c:21:
../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/zzip.c -o libgetdatazzip_la-zzip.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lbz2 -Wl,-z,relro -o libgetdatabzip2.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatabzip2_la-bzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatabzip2_la-bzip.o   -lbz2 -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatabzip2-0.10.0.so -o .libs/libgetdatabzip2-0.10.0.so
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lFLAC -Wl,-z,relro -o libgetdataflac.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdataflac_la-flac.lo  -lm 
libtool: link: (cd ".libs" && rm -f "libgetdatabzip2.so" && ln -s "libgetdatabzip2-0.10.0.so" "libgetdatabzip2.so")
libtool: link: ar cr .libs/libgetdatabzip2.a  libgetdatabzip2_la-bzip.o
libtool: link: ranlib .libs/libgetdatabzip2.a
libtool: link: ( cd ".libs" && rm -f "libgetdatabzip2.la" && ln -s "../libgetdatabzip2.la" "libgetdatabzip2.la" )
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lz -Wl,-z,relro -o libgetdatagzip.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatagzip_la-gzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdataflac_la-flac.o   -lFLAC -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdataflac-0.10.0.so -o .libs/libgetdataflac-0.10.0.so
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatagzip_la-gzip.o   -lz -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatagzip-0.10.0.so -o .libs/libgetdatagzip-0.10.0.so
libtool: link: (cd ".libs" && rm -f "libgetdataflac.so" && ln -s "libgetdataflac-0.10.0.so" "libgetdataflac.so")
libtool: link: ar cr .libs/libgetdataflac.a  libgetdataflac_la-flac.o
libtool: link: ranlib .libs/libgetdataflac.a
libtool: link: ( cd ".libs" && rm -f "libgetdataflac.la" && ln -s "../libgetdataflac.la" "libgetdataflac.la" )
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -llzma -Wl,-z,relro -o libgetdatalzma.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatalzma_la-lzma.lo  -lm 
libtool: link: (cd ".libs" && rm -f "libgetdatagzip.so" && ln -s "libgetdatagzip-0.10.0.so" "libgetdatagzip.so")
libtool: link: ar cr .libs/libgetdatagzip.a  libgetdatagzip_la-gzip.o
libtool: link: ranlib .libs/libgetdatagzip.a
libtool: link: ( cd ".libs" && rm -f "libgetdatagzip.la" && ln -s "../libgetdatagzip.la" "libgetdatagzip.la" )
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -release 0.10.0 -module -lzzip -Wl,-z,relro -o libgetdatazzip.la -rpath /usr/lib/x86_64-linux-gnu/getdata libgetdatazzip_la-zzip.lo  -lm 
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatalzma_la-lzma.o   -llzma -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatalzma-0.10.0.so -o .libs/libgetdatalzma-0.10.0.so
libtool: link: gcc -shared  -fPIC -DPIC  .libs/libgetdatazzip_la-zzip.o   -lzzip -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdatazzip-0.10.0.so -o .libs/libgetdatazzip-0.10.0.so
libtool: link: (cd ".libs" && rm -f "libgetdatalzma.so" && ln -s "libgetdatalzma-0.10.0.so" "libgetdatalzma.so")
libtool: link: ar cr .libs/libgetdatalzma.a  libgetdatalzma_la-lzma.o
libtool: link: ranlib .libs/libgetdatalzma.a
libtool: link: ( cd ".libs" && rm -f "libgetdatalzma.la" && ln -s "../libgetdatalzma.la" "libgetdatalzma.la" )
libtool: link: (cd ".libs" && rm -f "libgetdatazzip.so" && ln -s "libgetdatazzip-0.10.0.so" "libgetdatazzip.so")
libtool: link: ar cr .libs/libgetdatazzip.a  libgetdatazzip_la-zzip.o
libtool: link: ranlib .libs/libgetdatazzip.a
libtool: link: ( cd ".libs" && rm -f "libgetdatazzip.la" && ln -s "../libgetdatazzip.la" "libgetdatazzip.la" )
1 warning generated.
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Wextra -DGETDATA_MODULEDIR=\"/usr/lib/x86_64-linux-gnu/getdata\" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c ../../src/getdata.c -o getdata.o >/dev/null 2>&1
/bin/bash ../libtool  --tag=CC   --mode=link gcc -Wall -Wextra -DGETDATA_MODULEDIR="\"/usr/lib/x86_64-linux-gnu/getdata\"" -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -export-dynamic -export-symbols-regex '^[^_]' -version-info 8:0:0   -Wl,-z,relro -o libgetdata.la -rpath /usr/lib/x86_64-linux-gnu add.lo ascii.lo  close.lo common.lo compat.lo constant.lo  del.lo encoding.lo endian.lo entry.lo errors.lo field_list.lo  flimits.lo flush.lo fragment.lo getdata.lo globals.lo  index.lo include.lo iopos.lo   mod.lo move.lo name.lo native.lo nfields.lo nframes.lo open.lo parse.lo protect.lo putdata.lo raw.lo sie.lo  spf.lo string.lo types.lo    -lltdl -dlopen libgetdatabzip2.la -dlopen libgetdataflac.la -dlopen libgetdatagzip.la -dlopen libgetdatalzma.la  -dlopen libgetdatazzip.la  -lm 
libtool: link: rm -f .libs/libgetdata.nm .libs/libgetdata.nmS .libs/libgetdata.nmT
libtool: link: rm -f ".libs/libgetdata.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions  -fPIC -DPIC "libgetdataS.c")
libtool: link: rm -f ".libs/libgetdataS.c" ".libs/libgetdata.nm" ".libs/libgetdata.nmS" ".libs/libgetdata.nmT" ".libs/libgetdata.nmI"
libtool: link: /usr/bin/nm -B  .libs/add.o .libs/ascii.o .libs/close.o .libs/common.o .libs/compat.o .libs/constant.o .libs/del.o .libs/encoding.o .libs/endian.o .libs/entry.o .libs/errors.o .libs/field_list.o .libs/flimits.o .libs/flush.o .libs/fragment.o .libs/getdata.o .libs/globals.o .libs/index.o .libs/include.o .libs/iopos.o .libs/mod.o .libs/move.o .libs/name.o .libs/native.o .libs/nfields.o .libs/nframes.o .libs/open.o .libs/parse.o .libs/protect.o .libs/putdata.o .libs/raw.o .libs/sie.o .libs/spf.o .libs/string.o .libs/types.o .libs/libgetdataS.o  | sed -n -e 's/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' | /bin/sed 's/.* //' | sort | uniq > .libs/libgetdata.exp
libtool: link: /bin/grep -E -e "^[^_]" ".libs/libgetdata.exp" > ".libs/libgetdata.expT"
libtool: link: mv -f ".libs/libgetdata.expT" ".libs/libgetdata.exp"
libtool: link: echo "{ global:" > .libs/libgetdata.ver
libtool: link:  cat .libs/libgetdata.exp | sed -e "s/\(.*\)/\1;/" >> .libs/libgetdata.ver
libtool: link:  echo "local: *; };" >> .libs/libgetdata.ver
libtool: link:  gcc -shared  -fPIC -DPIC  .libs/add.o .libs/ascii.o .libs/close.o .libs/common.o .libs/compat.o .libs/constant.o .libs/del.o .libs/encoding.o .libs/endian.o .libs/entry.o .libs/errors.o .libs/field_list.o .libs/flimits.o .libs/flush.o .libs/fragment.o .libs/getdata.o .libs/globals.o .libs/index.o .libs/include.o .libs/iopos.o .libs/mod.o .libs/move.o .libs/name.o .libs/native.o .libs/nfields.o .libs/nframes.o .libs/open.o .libs/parse.o .libs/protect.o .libs/putdata.o .libs/raw.o .libs/sie.o .libs/spf.o .libs/string.o .libs/types.o .libs/libgetdataS.o  -lltdl -lm  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdata.so.8 -Wl,-version-script -Wl,.libs/libgetdata.ver -o .libs/libgetdata.so.8.0.0
/usr/bin/ld: .libs/encoding.o: in function `gd_MakeTempFile':
./build-py3.9/src/../../src/encoding.c:1036: warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
libtool: link: (cd ".libs" && rm -f "libgetdata.so.8" && ln -s "libgetdata.so.8.0.0" "libgetdata.so.8")
libtool: link: (cd ".libs" && rm -f "libgetdata.so" && ln -s "libgetdata.so.8.0.0" "libgetdata.so")
libtool: link: ar cr .libs/libgetdata.a  add.o ascii.o close.o common.o compat.o constant.o del.o encoding.o endian.o entry.o errors.o field_list.o flimits.o flush.o fragment.o getdata.o globals.o index.o include.o iopos.o mod.o move.o name.o native.o nfields.o nframes.o open.o parse.o protect.o putdata.o raw.o sie.o spf.o string.o types.o .libs/libgetdataS.o
libtool: link: ranlib .libs/libgetdata.a
libtool: link: ( cd ".libs" && rm -f "libgetdata.la" && ln -s "../libgetdata.la" "libgetdata.la" )
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
Making all in .
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9'
Making all in test
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/test'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/test'
Making all in bindings
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making all in .
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
gcc -DHAVE_CONFIG_H -I../../src -I../src -o make_parameters \
	../../bindings/make_parameters.c
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making all in python
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
../make_parameters p > pyconstants.c
make  all-recursive
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
Making all in test
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[6]: Nothing to be done for 'all'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
/usr/bin/python3.9 setup.py build
running build
running build_ext
building 'pygetdata' extension
creating build
creating build/temp.linux-x86_64-3.9
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_CONFIG_H=1 -I../../src -I../../../src -I/usr/lib/python3/dist-packages/numpy/core/include -I../../../bindings/python -I/usr/include/python3.9 -c pyconstants.c -o build/temp.linux-x86_64-3.9/pyconstants.o
In file included from pyconstants.c:2:
In file included from ../../../bindings/python/gdpy_intern.h:21:
../../../bindings/python/../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_CONFIG_H=1 -I../../src -I../../../src -I/usr/lib/python3/dist-packages/numpy/core/include -I../../../bindings/python -I/usr/include/python3.9 -c pydirfile.c -o build/temp.linux-x86_64-3.9/pydirfile.o
In file included from pydirfile.c:23:
In file included from ../../../bindings/python/gdpy_intern.h:21:
../../../bindings/python/../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from pydirfile.c:23:
In file included from ../../../bindings/python/gdpy_intern.h:34:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1822:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pydirfile.c:135:14: warning: 'PyEval_CallObjectWithKeywords' is deprecated [-Wdeprecated-declarations]
    result = PyEval_CallObject(self->callback, arglist);
             ^
/usr/include/python3.9/ceval.h:24:5: note: expanded from macro 'PyEval_CallObject'
    PyEval_CallObjectWithKeywords(callable, arg, (PyObject *)NULL)
    ^
/usr/include/python3.9/ceval.h:17:1: note: 'PyEval_CallObjectWithKeywords' has been explicitly marked deprecated here
Py_DEPRECATED(3.9) PyAPI_FUNC(PyObject *) PyEval_CallObjectWithKeywords(
^
/usr/include/python3.9/pyport.h:508:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pydirfile.c:1002:14: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'long long' [-Wsign-compare]
      if (ns < num_samples) {
          ~~ ^ ~~~~~~~~~~~
4 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_CONFIG_H=1 -I../../src -I../../../src -I/usr/lib/python3/dist-packages/numpy/core/include -I../../../bindings/python -I/usr/include/python3.9 -c pyentry.c -o build/temp.linux-x86_64-3.9/pyentry.o
In file included from pyentry.c:21:
In file included from ../../../bindings/python/gdpy_intern.h:21:
../../../bindings/python/../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_CONFIG_H=1 -I../../src -I../../../src -I/usr/lib/python3/dist-packages/numpy/core/include -I../../../bindings/python -I/usr/include/python3.9 -c pyfragment.c -o build/temp.linux-x86_64-3.9/pyfragment.o
In file included from pyfragment.c:21:
In file included from ../../../bindings/python/gdpy_intern.h:21:
../../../bindings/python/../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_CONFIG_H=1 -I../../src -I../../../src -I/usr/lib/python3/dist-packages/numpy/core/include -I../../../bindings/python -I/usr/include/python3.9 -c pygetdata.c -o build/temp.linux-x86_64-3.9/pygetdata.o
In file included from pygetdata.c:22:
In file included from ../../../bindings/python/gdpy_intern.h:21:
../../../bindings/python/../../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
In file included from pygetdata.c:22:
In file included from ../../../bindings/python/gdpy_intern.h:34:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1822:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
2 warnings generated.
creating build/lib.linux-x86_64-3.9
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -g -fwrapv -O2 -Wl,-z,relro -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.9/pyconstants.o build/temp.linux-x86_64-3.9/pydirfile.o build/temp.linux-x86_64-3.9/pyentry.o build/temp.linux-x86_64-3.9/pyfragment.o build/temp.linux-x86_64-3.9/pygetdata.o -L../../src/.libs -lgetdata -o build/lib.linux-x86_64-3.9/pygetdata.cpython-39-x86_64-linux-gnu.so
cp build/lib.linux-x86_64-3.9/pygetdata.cpython-39-x86_64-linux-gnu.so pygetdata.cpython-39-x86_64-linux-gnu.so
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making all in util
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/util'
gcc -DHAVE_CONFIG_H -I. -I../../util -I../src  -Wall -Wextra -I../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o checkdirfile.o ../../util/checkdirfile.c
gcc -DHAVE_CONFIG_H -I. -I../../util -I../src  -Wall -Wextra -I../../src -Wdate-time -D_FORTIFY_SOURCE=2  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o dirfile2ascii.o ../../util/dirfile2ascii.c
In file included from ../../util/dirfile2ascii.c:20:
../src/internal.h:445:9: warning: 'dprintf' macro redefined [-Wmacro-redefined]
#define dprintf(...)
        ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:151:12: note: previous definition is here
#   define dprintf(fd, ...) \
           ^
/bin/bash ../libtool  --tag=CC   --mode=link gcc  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -o checkdirfile checkdirfile.o ../src/libgetdata.la -lm 
libtool: link: rm -f .libs/checkdirfile.nm .libs/checkdirfile.nmS .libs/checkdirfile.nmT
libtool: link: rm -f ".libs/checkdirfile.nmI"
1 warning generated.
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions "checkdirfileS.c")
/bin/bash ../libtool  --tag=CC   --mode=link gcc  -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -o dirfile2ascii dirfile2ascii.o ../src/libgetdata.la -lm 
libtool: link: rm -f ".libs/checkdirfileS.c" ".libs/checkdirfile.nm" ".libs/checkdirfile.nmS" ".libs/checkdirfile.nmT" ".libs/checkdirfile.nmI"
libtool: link: gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z -Wl,relro -o .libs/checkdirfile checkdirfile.o  ../src/.libs/libgetdata.so -lm
libtool: link: rm -f .libs/dirfile2ascii.nm .libs/dirfile2ascii.nmS .libs/dirfile2ascii.nmT
libtool: link: rm -f ".libs/dirfile2ascii.nmI"
libtool: link: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions "dirfile2asciiS.c")
libtool: link: rm -f ".libs/dirfile2asciiS.c" ".libs/dirfile2ascii.nm" ".libs/dirfile2ascii.nmS" ".libs/dirfile2ascii.nmT" ".libs/dirfile2ascii.nmI"
libtool: link: gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z -Wl,relro -o .libs/dirfile2ascii dirfile2ascii.o  ../src/.libs/libgetdata.so -lm
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/util'
Making all in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/man'
cat ../../man/header.tmac gd_alter_encoding.3in > gd_alter_encoding.3
cat ../../man/header.tmac gd_alter_endianness.3in > gd_alter_endianness.3
cat ../../man/header.tmac gd_alter_frameoffset.3in > gd_alter_frameoffset.3
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/man'
Making all in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
 fakeroot debian/rules binary
dh binary 
   dh_testroot
   dh_prep
	rm -f -- debian/libgetdata-doc.substvars debian/libgetdata-dev.substvars debian/libgetdata8.substvars debian/libgetdata\+\+7.substvars debian/libfgetdata6.substvars debian/libf95getdata7.substvars debian/libgetdata-tools.substvars debian/python3-pygetdata.substvars debian/libgetdata-perl.substvars
	rm -fr -- debian/.debhelper/generated/libgetdata-doc/ debian/libgetdata-doc/ debian/tmp/ debian/.debhelper/generated/libgetdata-dev/ debian/libgetdata-dev/ debian/.debhelper/generated/libgetdata8/ debian/libgetdata8/ debian/.debhelper/generated/libgetdata\+\+7/ debian/libgetdata\+\+7/ debian/.debhelper/generated/libfgetdata6/ debian/libfgetdata6/ debian/.debhelper/generated/libf95getdata7/ debian/libf95getdata7/ debian/.debhelper/generated/libgetdata-tools/ debian/libgetdata-tools/ debian/.debhelper/generated/python3-pygetdata/ debian/python3-pygetdata/ debian/.debhelper/generated/libgetdata-perl/ debian/libgetdata-perl/
	rm -f debian/libf95getdata7.debhelper.log debian/libfgetdata6.debhelper.log debian/libgetdata\+\+7.debhelper.log debian/libgetdata-dev.debhelper.log debian/libgetdata-doc.debhelper.log debian/libgetdata-perl.debhelper.log debian/libgetdata-tools.debhelper.log debian/libgetdata8.debhelper.log debian/python3-pygetdata.debhelper.log
   debian/rules override_dh_auto_install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
py3versions: no X-Python3-Version in control file, using supported versions
dh_auto_install -Bbuild-main
	install -d /<<PKGBUILDDIR>>/debian/tmp
	cd build-main && make -j1 install DESTDIR=/<<PKGBUILDDIR>>/debian/tmp AM_UPDATE_INFO_DIR=no
make[2]: Entering directory '/<<PKGBUILDDIR>>/build-main'
Making install in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
make  install-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libgetdata.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/libgetdata.so.8.0.0 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.so.8.0.0
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata.so.8.0.0 libgetdata.so.8 || { rm -f libgetdata.so.8 && ln -s libgetdata.so.8.0.0 libgetdata.so.8; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata.so.8.0.0 libgetdata.so || { rm -f libgetdata.so && ln -s libgetdata.so.8.0.0 libgetdata.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdata.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.la
libtool: install: /usr/bin/install -c .libs/libgetdata.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libgetdatabzip2.la libgetdataflac.la libgetdatagzip.la libgetdatalzma.la libgetdatazzip.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata'
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatabzip2-0.10.0.so libgetdatabzip2.so || { rm -f libgetdatabzip2.so && ln -s libgetdatabzip2-0.10.0.so libgetdatabzip2.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.la
libtool: install: /usr/bin/install -c .libs/libgetdataflac-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdataflac-0.10.0.so libgetdataflac.so || { rm -f libgetdataflac.so && ln -s libgetdataflac-0.10.0.so libgetdataflac.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdataflac.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.la
libtool: install: /usr/bin/install -c .libs/libgetdatagzip-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatagzip-0.10.0.so libgetdatagzip.so || { rm -f libgetdatagzip.so && ln -s libgetdatagzip-0.10.0.so libgetdatagzip.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatagzip.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.la
libtool: install: /usr/bin/install -c .libs/libgetdatalzma-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatalzma-0.10.0.so libgetdatalzma.so || { rm -f libgetdatalzma.so && ln -s libgetdatalzma-0.10.0.so libgetdatalzma.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatalzma.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.la
libtool: install: /usr/bin/install -c .libs/libgetdatazzip-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatazzip-0.10.0.so libgetdatazzip.so || { rm -f libgetdatazzip.so && ln -s libgetdatazzip-0.10.0.so libgetdatazzip.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatazzip.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.la
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: /usr/bin/install -c .libs/libgetdataflac.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: /usr/bin/install -c .libs/libgetdatagzip.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: /usr/bin/install -c .libs/libgetdatalzma.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: /usr/bin/install -c .libs/libgetdatazzip.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu/getdata'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
 /usr/bin/install -c -m 644 getdata.h '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/pkgconfig'
 /usr/bin/install -c -m 644 getdata.pc '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/pkgconfig'
make  install-data-hook
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/src'
make[6]: Nothing to be done for 'install-data-hook'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/src'
Making install in .
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
 /usr/bin/install -c -m 644 ../COPYING.DOC '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main'
Making install in test
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/test'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/test'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/test'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/test'
Making install in bindings
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making install in .
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings'
make[5]: Nothing to be done for 'install-exec-am'.
make[5]: Nothing to be done for 'install-data-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making install in cxx
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
Making install in test
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[6]: Nothing to be done for 'install-exec-am'.
make[6]: Nothing to be done for 'install-data-am'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx/test'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
 /bin/bash ../../libtool   --mode=install /usr/bin/install -c   libgetdata++.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
libtool: warning: relinking 'libgetdata++.la'
libtool: install: (cd /<<PKGBUILDDIR>>/build-main/bindings/cxx; /bin/bash "/<<PKGBUILDDIR>>/build-main/libtool"  --tag CXX --mode=relink g++ -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -version-info 7:0:0 -Wl,-z,relro -o libgetdata++.la -rpath /usr/lib/x86_64-linux-gnu dirfile.lo bitentry.lo carrayentry.lo constentry.lo divideentry.lo entry.lo fragment.lo indirentry.lo lincomentry.lo linterpentry.lo mplexentry.lo multiplyentry.lo phaseentry.lo polynomentry.lo rawentry.lo recipentry.lo sarrayentry.lo sbitentry.lo sindirentry.lo stringentry.lo windowentry.lo ../../src/libgetdata.la -inst-prefix-dir /<<PKGBUILDDIR>>/debian/tmp)
libtool: relink: rm -f .libs/libgetdata++.nm .libs/libgetdata++.nmS .libs/libgetdata++.nmT
libtool: relink: rm -f ".libs/libgetdata++.nmI"
libtool: relink: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin  -fPIC -DPIC "libgetdata++S.c")
libtool: relink: rm -f ".libs/libgetdata++S.c" ".libs/libgetdata++.nm" ".libs/libgetdata++.nmS" ".libs/libgetdata++.nmT" ".libs/libgetdata++.nmI"
libtool: relink: g++  -fPIC -DPIC -shared -nostdlib /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/11/crtbeginS.o  .libs/dirfile.o .libs/bitentry.o .libs/carrayentry.o .libs/constentry.o .libs/divideentry.o .libs/entry.o .libs/fragment.o .libs/indirentry.o .libs/lincomentry.o .libs/linterpentry.o .libs/mplexentry.o .libs/multiplyentry.o .libs/phaseentry.o .libs/polynomentry.o .libs/rawentry.o .libs/recipentry.o .libs/sarrayentry.o .libs/sbitentry.o .libs/sindirentry.o .libs/stringentry.o .libs/windowentry.o .libs/libgetdata++S.o  -L/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -lgetdata -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../.. -L/usr/lib/llvm-12/bin/../lib -L/lib -L/usr/lib -lstdc++ -lm -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/11/crtendS.o /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crtn.o  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libgetdata++.so.7 -o .libs/libgetdata++.so.7.0.0
libtool: install: /usr/bin/install -c .libs/libgetdata++.so.7.0.0T /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata++.so.7.0.0
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata++.so.7.0.0 libgetdata++.so.7 || { rm -f libgetdata++.so.7 && ln -s libgetdata++.so.7.0.0 libgetdata++.so.7; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata++.so.7.0.0 libgetdata++.so || { rm -f libgetdata++.so && ln -s libgetdata++.so.7.0.0 libgetdata++.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdata++.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata++.la
libtool: install: /usr/bin/install -c .libs/libgetdata++.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata++.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata++.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata++.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/include/getdata'
 /usr/bin/install -c -m 644 ../../../bindings/cxx/getdata/dirfile.h ../../../bindings/cxx/getdata/entry.h ../../../bindings/cxx/getdata/rawentry.h ../../../bindings/cxx/getdata/lincomentry.h ../../../bindings/cxx/getdata/linterpentry.h ../../../bindings/cxx/getdata/bitentry.h ../../../bindings/cxx/getdata/multiplyentry.h ../../../bindings/cxx/getdata/phaseentry.h ../../../bindings/cxx/getdata/constentry.h ../../../bindings/cxx/getdata/stringentry.h ../../../bindings/cxx/getdata/indexentry.h ../../../bindings/cxx/getdata/sbitentry.h ../../../bindings/cxx/getdata/polynomentry.h ../../../bindings/cxx/getdata/fragment.h ../../../bindings/cxx/getdata/divideentry.h ../../../bindings/cxx/getdata/recipentry.h ../../../bindings/cxx/getdata/carrayentry.h ../../../bindings/cxx/getdata/windowentry.h ../../../bindings/cxx/getdata/mplexentry.h ../../../bindings/cxx/getdata/types.h ../../../bindings/cxx/getdata/sarrayentry.h ../../../bindings/cxx/getdata/indirentry.h ../../../bindings/cxx/getdata/sindirentry.h '/<<PKGBUILDDIR>>/debian/tmp/usr/include/getdata'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/cxx'
Making install in f77
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make  install-recursive
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
Making install in test
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[7]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[7]: Nothing to be done for 'install-exec-am'.
make[7]: Nothing to be done for 'install-data-am'.
make[7]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77/test'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[7]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
 /bin/bash ../../libtool   --mode=install /usr/bin/install -c   libfgetdata.la libf95getdata.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
libtool: warning: relinking 'libfgetdata.la'
libtool: install: (cd /<<PKGBUILDDIR>>/build-main/bindings/f77; /bin/bash "/<<PKGBUILDDIR>>/build-main/libtool"  --tag CC --mode=relink gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -version-info 6:0:0 -Wl,-z,relro -o libfgetdata.la -rpath /usr/lib/x86_64-linux-gnu libfgetdata_la-fgetdata.lo ../../src/libgetdata.la -inst-prefix-dir /<<PKGBUILDDIR>>/debian/tmp)
libtool: relink: rm -f .libs/libfgetdata.nm .libs/libfgetdata.nmS .libs/libfgetdata.nmT
libtool: relink: rm -f ".libs/libfgetdata.nmI"
libtool: relink: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -fno-builtin -fno-rtti -fno-exceptions  -fPIC -DPIC "libfgetdataS.c")
libtool: relink: rm -f ".libs/libfgetdataS.c" ".libs/libfgetdata.nm" ".libs/libfgetdata.nmS" ".libs/libfgetdata.nmT" ".libs/libfgetdata.nmI"
libtool: relink: gcc -shared  -fPIC -DPIC  .libs/libfgetdata_la-fgetdata.o .libs/libfgetdataS.o  -L/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -lgetdata  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libfgetdata.so.6 -o .libs/libfgetdata.so.6.0.0
libtool: install: /usr/bin/install -c .libs/libfgetdata.so.6.0.0T /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.so.6.0.0
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libfgetdata.so.6.0.0 libfgetdata.so.6 || { rm -f libfgetdata.so.6 && ln -s libfgetdata.so.6.0.0 libfgetdata.so.6; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libfgetdata.so.6.0.0 libfgetdata.so || { rm -f libfgetdata.so && ln -s libfgetdata.so.6.0.0 libfgetdata.so; }; })
libtool: install: /usr/bin/install -c .libs/libfgetdata.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.la
libtool: warning: relinking 'libf95getdata.la'
libtool: install: (cd /<<PKGBUILDDIR>>/build-main/bindings/f77; /bin/bash "/<<PKGBUILDDIR>>/build-main/libtool"  --tag FC --mode=relink f95 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -fallow-invalid-boz -fallow-argument-mismatch -Wall -Wextra -version-info 7:0:0 -Wl,-z,relro -o libf95getdata.la -rpath /usr/lib/x86_64-linux-gnu getdata.lo libfgetdata.la -inst-prefix-dir /<<PKGBUILDDIR>>/debian/tmp)
libtool: relink: rm -f .libs/libf95getdata.nm .libs/libf95getdata.nmS .libs/libf95getdata.nmT
libtool: relink: rm -f ".libs/libf95getdata.nmI"
libtool: relink: (cd .libs && gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c  -fPIC "libf95getdataS.c")
libtool: relink: rm -f ".libs/libf95getdataS.c" ".libs/libf95getdata.nm" ".libs/libf95getdata.nmS" ".libs/libf95getdata.nmT" ".libs/libf95getdata.nmI"
libtool: relink: f95 -shared  -fPIC  .libs/getdata.o .libs/libf95getdataS.o  -L/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -lfgetdata -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lgfortran -lquadmath -lm -lc -lgcc_s  -g -O2 -fstack-protector-strong -Wl,-z -Wl,relro   -Wl,-soname -Wl,libf95getdata.so.7 -o .libs/libf95getdata.so.7.0.0
libtool: install: /usr/bin/install -c .libs/libf95getdata.so.7.0.0T /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.so.7.0.0
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libf95getdata.so.7.0.0 libf95getdata.so.7 || { rm -f libf95getdata.so.7 && ln -s libf95getdata.so.7.0.0 libf95getdata.so.7; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libf95getdata.so.7.0.0 libf95getdata.so || { rm -f libf95getdata.so && ln -s libf95getdata.so.7.0.0 libf95getdata.so; }; })
libtool: install: /usr/bin/install -c .libs/libf95getdata.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.la
libtool: install: /usr/bin/install -c .libs/libfgetdata.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.a
libtool: install: /usr/bin/install -c .libs/libf95getdata.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
 /usr/bin/install -c -m 644 getdata.f getdata.mod '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
make[7]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/f77'
Making install in perl
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 build/blib/man3/GetData.3pm '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/perl5/5.32'
 /usr/bin/install -c build/blib/lib/GetData.pm '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/perl5/5.32'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/perl5/5.32/auto/GetData'
 /usr/bin/install -c build/blib/arch/auto/GetData/GetData.so '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/perl5/5.32/auto/GetData'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings/perl'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/bindings'
Making install in util
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/util'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/util'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/bin'
  /bin/bash ../libtool   --mode=install /usr/bin/install -c checkdirfile dirfile2ascii '/<<PKGBUILDDIR>>/debian/tmp/usr/bin'
libtool: warning: '../src/libgetdata.la' has not been installed in '/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/checkdirfile /<<PKGBUILDDIR>>/debian/tmp/usr/bin/checkdirfile
libtool: warning: '../src/libgetdata.la' has not been installed in '/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/dirfile2ascii /<<PKGBUILDDIR>>/debian/tmp/usr/bin/dirfile2ascii
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/util'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/util'
Making install in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/man'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/man'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1'
 /usr/bin/install -c -m 644 ../../man/checkdirfile.1 ../../man/dirfile2ascii.1 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_add.3 ../../man/gd_add_alias.3 ../../man/gd_add_bit.3 ../../man/gd_add_spec.3 ../../man/gd_alias_target.3 ../../man/gd_aliases.3 ../../man/gd_alloc_funcs.3 ../../man/gd_alter_affixes.3 ../../man/gd_alter_bit.3 ../../man/gd_alter_entry.3 ../../man/gd_alter_protection.3 ../../man/gd_alter_spec.3 ../../man/gd_array_len.3 ../../man/gd_bof.3 ../../man/gd_bof64.3 ../../man/gd_carrays.3 ../../man/gd_close.3 ../../man/gd_constants.3 ../../man/gd_delete.3 ../../man/gd_desync.3 ../../man/gd_dirfile_standards.3 ../../man/gd_dirfilename.3 ../../man/gd_encoding.3 ../../man/gd_encoding_support.3 ../../man/gd_endianness.3 ../../man/gd_entry.3 ../../man/gd_entry_list.3 ../../man/gd_entry_type.3 ../../man/gd_eof.3 ../../man/gd_eof64.3 ../../man/gd_error.3 ../../man/gd_error_count.3 ../../man/gd_flags.3 ../../man/gd_flush.3 ../../man/gd_fragment_affixes.3 ../../man/gd_fragment_index.3 ../../man/gd_fragment_namespace.3 ../../man/gd_fragmentname.3 ../../man/gd_framenum_subset.3 ../../man/gd_framenum_subset64.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_frameoffset.3 ../../man/gd_frameoffset64.3 ../../man/gd_free_entry_strings.3 ../../man/gd_get_carray_slice.3 ../../man/gd_get_sarray_slice.3 ../../man/gd_get_string.3 ../../man/gd_getdata.3 ../../man/gd_getdata64.3 ../../man/gd_hidden.3 ../../man/gd_hide.3 ../../man/gd_include.3 ../../man/gd_invalid_dirfile.3 ../../man/gd_linterp_tablename.3 ../../man/gd_madd_bit.3 ../../man/gd_match_entries.3 ../../man/gd_metaflush.3 ../../man/gd_move.3 ../../man/gd_mplex_lookback.3 ../../man/gd_naliases.3 ../../man/gd_native_type.3 ../../man/gd_nentries.3 ../../man/gd_nfragments.3 ../../man/gd_nframes.3 ../../man/gd_nframes64.3 ../../man/gd_open.3 ../../man/gd_parent_fragment.3 ../../man/gd_parser_callback.3 ../../man/gd_protection.3 ../../man/gd_put_carray_slice.3 ../../man/gd_put_sarray_slice.3 ../../man/gd_put_string.3 ../../man/gd_putdata.3 ../../man/gd_putdata64.3 ../../man/gd_raw_filename.3 ../../man/gd_reference.3 ../../man/gd_rename.3 ../../man/gd_rewrite_fragment.3 ../../man/gd_sarrays.3 ../../man/gd_seek.3 ../../man/gd_seek64.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_spf.3 ../../man/gd_strings.3 ../../man/gd_strtok.3 ../../man/gd_tell.3 ../../man/gd_tell64.3 ../../man/gd_uninclude.3 ../../man/gd_validate.3 ../../man/gd_verbose_prefix.3 ../../man/GD_SIZE.3 gd_alter_encoding.3 gd_alter_endianness.3 gd_alter_frameoffset.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man5'
 /usr/bin/install -c -m 644 ../../man/dirfile.5 ../../man/dirfile-encoding.5 ../../man/dirfile-format.5 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man5'
make  install-data-hook
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-main/man'
cd /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3 && \
	for m in gd_add_bit.3:gd_add_carray.3 gd_add_bit.3:gd_add_clincom.3 gd_add_bit.3:gd_add_const.3 gd_add_bit.3:gd_add_cpolynom.3 gd_add_bit.3:gd_add_crecip.3 gd_add_bit.3:gd_add_divide.3 gd_add_bit.3:gd_add_indir.3 gd_add_bit.3:gd_add_lincom.3 gd_add_bit.3:gd_add_linterp.3 gd_add_bit.3:gd_add_mplex.3 gd_add_bit.3:gd_add_multiply.3 gd_add_bit.3:gd_add_polynom.3 gd_add_bit.3:gd_add_phase.3 gd_add_bit.3:gd_add_raw.3 gd_add_bit.3:gd_add_recip.3 gd_add_bit.3:gd_add_sarray.3 gd_add_bit.3:gd_add_sbit.3 gd_add_bit.3:gd_add_sindir.3 gd_add_bit.3:gd_add_string.3 gd_add_bit.3:gd_add_window.3 gd_madd_bit.3:gd_madd_carray.3 gd_madd_bit.3:gd_madd_clincom.3 gd_madd_bit.3:gd_madd_const.3 gd_madd_bit.3:gd_madd_cpolynom.3 gd_madd_bit.3:gd_madd_crecip.3 gd_madd_bit.3:gd_madd_divide.3 gd_madd_bit.3:gd_madd_lincom.3 gd_madd_bit.3:gd_madd_linterp.3 gd_madd_bit.3:gd_madd_mplex.3 gd_madd_bit.3:gd_madd_multiply.3 gd_madd_bit.3:gd_madd_phase.3 gd_madd_bit.3:gd_madd_polynom.3 gd_madd_bit.3:gd_madd_recip.3 gd_madd_bit.3:gd_madd_sbit.3 gd_madd_bit.3:gd_madd_string.3 gd_madd_bit.3:gd_madd_window.3 gd_add.3:gd_madd.3 gd_add_spec.3:gd_madd_spec.3 gd_open.3:gd_cbopen.3 gd_close.3:gd_discard.3 gd_constants.3:gd_mconstants.3 gd_include.3:gd_include_affix.3 gd_include.3:gd_include_ns.3 gd_alter_bit.3:gd_alter_carray.3 gd_alter_bit.3:gd_alter_clincom.3 gd_alter_bit.3:gd_alter_const.3 gd_alter_bit.3:gd_alter_cpolynom.3 gd_alter_bit.3:gd_alter_crecip.3 gd_alter_bit.3:gd_alter_divide.3 gd_alter_bit.3:gd_alter_lincom.3 gd_alter_bit.3:gd_alter_linterp.3 gd_alter_bit.3:gd_alter_mplex.3 gd_alter_bit.3:gd_alter_multiply.3 gd_alter_bit.3:gd_alter_phase.3 gd_alter_bit.3:gd_alter_polynom.3 gd_alter_bit.3:gd_alter_recip.3 gd_alter_bit.3:gd_alter_raw.3 gd_alter_bit.3:gd_alter_sbit.3 gd_alter_bit.3:gd_alter_window.3 gd_alter_spec.3:gd_malter_spec.3 gd_framenum_subset.3:gd_framenum.3 gd_get_carray_slice.3:gd_get_carray.3 gd_get_carray_slice.3:gd_get_constant.3 gd_put_carray_slice.3:gd_put_carray.3 gd_put_carray_slice.3:gd_put_constant.3 gd_get_sarray_slice.3:gd_get_sarray.3 gd_put_sarray_slice.3:gd_put_sarray.3 gd_hide.3:gd_unhide.3 gd_add_alias.3:gd_madd_alias.3 gd_flush.3:gd_sync.3 gd_flush.3:gd_raw_close.3 gd_nentries.3:gd_nfields.3 gd_nentries.3:gd_nfields_by_type.3 gd_nentries.3:gd_nmfields.3 gd_nentries.3:gd_nmfields_by_type.3 gd_nentries.3:gd_nmvectore.3 gd_nentries.3:gd_nvectors.3 gd_entry_list.3:gd_field_list.3 gd_entry_list.3:gd_field_list_by_type.3 gd_entry_list.3:gd_mfield_list.3 gd_entry_list.3:gd_mfield_list_by_type.3 gd_entry_list.3:gd_nmvectore.3 gd_entry_list.3:gd_vector_list.3 gd_frameoffset64.3:gd_alter_frameoffset64.3 gd_array_len.3:gd_carray_len.3 gd_error.3:gd_error_string.3 gd_carrays.3:gd_mcarrays.3 gd_sarrays.3:gd_msarrays.3 gd_strings.3:gd_mstrings.3; do \
	rm -f `echo $m | /bin/sed -e 's/.*://'`; \
	ln -s `echo $m | /bin/sed -e 's/:/ /'`; \
	done
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-main/man'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/man'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/man'
Making install in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-main/doc'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-main/doc'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
 /usr/bin/install -c -m 644 ../../doc/README.cxx ../../doc/README.f77 ../../doc/README.f95 ../../doc/README.perl ../../doc/unclean_database_recovery.txt '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-main/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-main/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build-main'
for v in 3.9; do \
  dh_auto_install -Bbuild-py$v; \
done
	cd build-py3.9 && make -j1 install DESTDIR=/<<PKGBUILDDIR>>/debian/tmp AM_UPDATE_INFO_DIR=no
make[2]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9'
Making install in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make  install-am
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libgetdata.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/libgetdata.so.8.0.0 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.so.8.0.0
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata.so.8.0.0 libgetdata.so.8 || { rm -f libgetdata.so.8 && ln -s libgetdata.so.8.0.0 libgetdata.so.8; }; })
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu && { ln -s -f libgetdata.so.8.0.0 libgetdata.so || { rm -f libgetdata.so && ln -s libgetdata.so.8.0.0 libgetdata.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdata.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.la
libtool: install: /usr/bin/install -c .libs/libgetdata.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata'
 /bin/bash ../libtool   --mode=install /usr/bin/install -c   libgetdatabzip2.la libgetdataflac.la libgetdatagzip.la libgetdatalzma.la libgetdatazzip.la '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata'
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatabzip2-0.10.0.so libgetdatabzip2.so || { rm -f libgetdatabzip2.so && ln -s libgetdatabzip2-0.10.0.so libgetdatabzip2.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.la
libtool: install: /usr/bin/install -c .libs/libgetdataflac-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdataflac-0.10.0.so libgetdataflac.so || { rm -f libgetdataflac.so && ln -s libgetdataflac-0.10.0.so libgetdataflac.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdataflac.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.la
libtool: install: /usr/bin/install -c .libs/libgetdatagzip-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatagzip-0.10.0.so libgetdatagzip.so || { rm -f libgetdatagzip.so && ln -s libgetdatagzip-0.10.0.so libgetdatagzip.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatagzip.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.la
libtool: install: /usr/bin/install -c .libs/libgetdatalzma-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatalzma-0.10.0.so libgetdatalzma.so || { rm -f libgetdatalzma.so && ln -s libgetdatalzma-0.10.0.so libgetdatalzma.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatalzma.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.la
libtool: install: /usr/bin/install -c .libs/libgetdatazzip-0.10.0.so /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip-0.10.0.so
libtool: install: (cd /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata && { ln -s -f libgetdatazzip-0.10.0.so libgetdatazzip.so || { rm -f libgetdatazzip.so && ln -s libgetdatazzip-0.10.0.so libgetdatazzip.so; }; })
libtool: install: /usr/bin/install -c .libs/libgetdatazzip.lai /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.la
libtool: install: /usr/bin/install -c .libs/libgetdatabzip2.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a
libtool: install: /usr/bin/install -c .libs/libgetdataflac.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a
libtool: install: /usr/bin/install -c .libs/libgetdatagzip.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a
libtool: install: /usr/bin/install -c .libs/libgetdatalzma.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a
libtool: install: /usr/bin/install -c .libs/libgetdatazzip.a /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: install: chmod 644 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: install: ranlib /<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a
libtool: warning: remember to run 'libtool --finish /usr/lib/x86_64-linux-gnu/getdata'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
 /usr/bin/install -c -m 644 getdata.h '/<<PKGBUILDDIR>>/debian/tmp/usr/include'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/pkgconfig'
 /usr/bin/install -c -m 644 getdata.pc '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/x86_64-linux-gnu/pkgconfig'
make  install-data-hook
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[6]: Nothing to be done for 'install-data-hook'.
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/src'
Making install in .
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
 /usr/bin/install -c -m 644 ../COPYING.DOC '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9'
Making install in test
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/test'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/test'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/test'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/test'
Making install in bindings
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making install in .
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
make[5]: Nothing to be done for 'install-exec-am'.
make[5]: Nothing to be done for 'install-data-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making install in python
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make  install-recursive
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
Making install in test
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[7]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[7]: Nothing to be done for 'install-exec-am'.
make[7]: Nothing to be done for 'install-data-am'.
make[7]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python/test'
make[6]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[7]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[7]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3.9/site-packages'
 /usr/bin/install -c pygetdata.cpython-39-x86_64-linux-gnu.so '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3.9/site-packages'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3.9/site-packages'
 /usr/bin/install -c -m 644 ../../../bindings/python/pygetdata.h '/<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3.9/site-packages'
make[7]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[6]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings/python'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/bindings'
Making install in util
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/util'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/util'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/bin'
  /bin/bash ../libtool   --mode=install /usr/bin/install -c checkdirfile dirfile2ascii '/<<PKGBUILDDIR>>/debian/tmp/usr/bin'
libtool: warning: '../src/libgetdata.la' has not been installed in '/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/checkdirfile /<<PKGBUILDDIR>>/debian/tmp/usr/bin/checkdirfile
libtool: warning: '../src/libgetdata.la' has not been installed in '/usr/lib/x86_64-linux-gnu'
libtool: install: /usr/bin/install -c .libs/dirfile2ascii /<<PKGBUILDDIR>>/debian/tmp/usr/bin/dirfile2ascii
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/util'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/util'
Making install in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/man'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/man'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1'
 /usr/bin/install -c -m 644 ../../man/checkdirfile.1 ../../man/dirfile2ascii.1 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_add.3 ../../man/gd_add_alias.3 ../../man/gd_add_bit.3 ../../man/gd_add_spec.3 ../../man/gd_alias_target.3 ../../man/gd_aliases.3 ../../man/gd_alloc_funcs.3 ../../man/gd_alter_affixes.3 ../../man/gd_alter_bit.3 ../../man/gd_alter_entry.3 ../../man/gd_alter_protection.3 ../../man/gd_alter_spec.3 ../../man/gd_array_len.3 ../../man/gd_bof.3 ../../man/gd_bof64.3 ../../man/gd_carrays.3 ../../man/gd_close.3 ../../man/gd_constants.3 ../../man/gd_delete.3 ../../man/gd_desync.3 ../../man/gd_dirfile_standards.3 ../../man/gd_dirfilename.3 ../../man/gd_encoding.3 ../../man/gd_encoding_support.3 ../../man/gd_endianness.3 ../../man/gd_entry.3 ../../man/gd_entry_list.3 ../../man/gd_entry_type.3 ../../man/gd_eof.3 ../../man/gd_eof64.3 ../../man/gd_error.3 ../../man/gd_error_count.3 ../../man/gd_flags.3 ../../man/gd_flush.3 ../../man/gd_fragment_affixes.3 ../../man/gd_fragment_index.3 ../../man/gd_fragment_namespace.3 ../../man/gd_fragmentname.3 ../../man/gd_framenum_subset.3 ../../man/gd_framenum_subset64.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_frameoffset.3 ../../man/gd_frameoffset64.3 ../../man/gd_free_entry_strings.3 ../../man/gd_get_carray_slice.3 ../../man/gd_get_sarray_slice.3 ../../man/gd_get_string.3 ../../man/gd_getdata.3 ../../man/gd_getdata64.3 ../../man/gd_hidden.3 ../../man/gd_hide.3 ../../man/gd_include.3 ../../man/gd_invalid_dirfile.3 ../../man/gd_linterp_tablename.3 ../../man/gd_madd_bit.3 ../../man/gd_match_entries.3 ../../man/gd_metaflush.3 ../../man/gd_move.3 ../../man/gd_mplex_lookback.3 ../../man/gd_naliases.3 ../../man/gd_native_type.3 ../../man/gd_nentries.3 ../../man/gd_nfragments.3 ../../man/gd_nframes.3 ../../man/gd_nframes64.3 ../../man/gd_open.3 ../../man/gd_parent_fragment.3 ../../man/gd_parser_callback.3 ../../man/gd_protection.3 ../../man/gd_put_carray_slice.3 ../../man/gd_put_sarray_slice.3 ../../man/gd_put_string.3 ../../man/gd_putdata.3 ../../man/gd_putdata64.3 ../../man/gd_raw_filename.3 ../../man/gd_reference.3 ../../man/gd_rename.3 ../../man/gd_rewrite_fragment.3 ../../man/gd_sarrays.3 ../../man/gd_seek.3 ../../man/gd_seek64.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /usr/bin/install -c -m 644 ../../man/gd_spf.3 ../../man/gd_strings.3 ../../man/gd_strtok.3 ../../man/gd_tell.3 ../../man/gd_tell64.3 ../../man/gd_uninclude.3 ../../man/gd_validate.3 ../../man/gd_verbose_prefix.3 ../../man/GD_SIZE.3 gd_alter_encoding.3 gd_alter_endianness.3 gd_alter_frameoffset.3 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man5'
 /usr/bin/install -c -m 644 ../../man/dirfile.5 ../../man/dirfile-encoding.5 ../../man/dirfile-format.5 '/<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man5'
make  install-data-hook
make[5]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/man'
cd /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3 && \
	for m in gd_add_bit.3:gd_add_carray.3 gd_add_bit.3:gd_add_clincom.3 gd_add_bit.3:gd_add_const.3 gd_add_bit.3:gd_add_cpolynom.3 gd_add_bit.3:gd_add_crecip.3 gd_add_bit.3:gd_add_divide.3 gd_add_bit.3:gd_add_indir.3 gd_add_bit.3:gd_add_lincom.3 gd_add_bit.3:gd_add_linterp.3 gd_add_bit.3:gd_add_mplex.3 gd_add_bit.3:gd_add_multiply.3 gd_add_bit.3:gd_add_polynom.3 gd_add_bit.3:gd_add_phase.3 gd_add_bit.3:gd_add_raw.3 gd_add_bit.3:gd_add_recip.3 gd_add_bit.3:gd_add_sarray.3 gd_add_bit.3:gd_add_sbit.3 gd_add_bit.3:gd_add_sindir.3 gd_add_bit.3:gd_add_string.3 gd_add_bit.3:gd_add_window.3 gd_madd_bit.3:gd_madd_carray.3 gd_madd_bit.3:gd_madd_clincom.3 gd_madd_bit.3:gd_madd_const.3 gd_madd_bit.3:gd_madd_cpolynom.3 gd_madd_bit.3:gd_madd_crecip.3 gd_madd_bit.3:gd_madd_divide.3 gd_madd_bit.3:gd_madd_lincom.3 gd_madd_bit.3:gd_madd_linterp.3 gd_madd_bit.3:gd_madd_mplex.3 gd_madd_bit.3:gd_madd_multiply.3 gd_madd_bit.3:gd_madd_phase.3 gd_madd_bit.3:gd_madd_polynom.3 gd_madd_bit.3:gd_madd_recip.3 gd_madd_bit.3:gd_madd_sbit.3 gd_madd_bit.3:gd_madd_string.3 gd_madd_bit.3:gd_madd_window.3 gd_add.3:gd_madd.3 gd_add_spec.3:gd_madd_spec.3 gd_open.3:gd_cbopen.3 gd_close.3:gd_discard.3 gd_constants.3:gd_mconstants.3 gd_include.3:gd_include_affix.3 gd_include.3:gd_include_ns.3 gd_alter_bit.3:gd_alter_carray.3 gd_alter_bit.3:gd_alter_clincom.3 gd_alter_bit.3:gd_alter_const.3 gd_alter_bit.3:gd_alter_cpolynom.3 gd_alter_bit.3:gd_alter_crecip.3 gd_alter_bit.3:gd_alter_divide.3 gd_alter_bit.3:gd_alter_lincom.3 gd_alter_bit.3:gd_alter_linterp.3 gd_alter_bit.3:gd_alter_mplex.3 gd_alter_bit.3:gd_alter_multiply.3 gd_alter_bit.3:gd_alter_phase.3 gd_alter_bit.3:gd_alter_polynom.3 gd_alter_bit.3:gd_alter_recip.3 gd_alter_bit.3:gd_alter_raw.3 gd_alter_bit.3:gd_alter_sbit.3 gd_alter_bit.3:gd_alter_window.3 gd_alter_spec.3:gd_malter_spec.3 gd_framenum_subset.3:gd_framenum.3 gd_get_carray_slice.3:gd_get_carray.3 gd_get_carray_slice.3:gd_get_constant.3 gd_put_carray_slice.3:gd_put_carray.3 gd_put_carray_slice.3:gd_put_constant.3 gd_get_sarray_slice.3:gd_get_sarray.3 gd_put_sarray_slice.3:gd_put_sarray.3 gd_hide.3:gd_unhide.3 gd_add_alias.3:gd_madd_alias.3 gd_flush.3:gd_sync.3 gd_flush.3:gd_raw_close.3 gd_nentries.3:gd_nfields.3 gd_nentries.3:gd_nfields_by_type.3 gd_nentries.3:gd_nmfields.3 gd_nentries.3:gd_nmfields_by_type.3 gd_nentries.3:gd_nmvectore.3 gd_nentries.3:gd_nvectors.3 gd_entry_list.3:gd_field_list.3 gd_entry_list.3:gd_field_list_by_type.3 gd_entry_list.3:gd_mfield_list.3 gd_entry_list.3:gd_mfield_list_by_type.3 gd_entry_list.3:gd_nmvectore.3 gd_entry_list.3:gd_vector_list.3 gd_frameoffset64.3:gd_alter_frameoffset64.3 gd_array_len.3:gd_carray_len.3 gd_error.3:gd_error_string.3 gd_carrays.3:gd_mcarrays.3 gd_sarrays.3:gd_msarrays.3 gd_strings.3:gd_mstrings.3; do \
	rm -f `echo $m | /bin/sed -e 's/.*://'`; \
	ln -s `echo $m | /bin/sed -e 's/:/ /'`; \
	done
make[5]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/man'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/man'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/man'
Making install in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[4]: Entering directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
 /usr/bin/install -c -m 644 ../../doc/README.python ../../doc/unclean_database_recovery.txt '/<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/getdata'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build-py3.9'
dh_numpy3
	(grep -a -s -v python3:Depends debian/libgetdata-doc.substvars; echo python3:Depends=python3-numpy) > debian/libgetdata-doc.substvars.new
	mv debian/libgetdata-doc.substvars.new debian/libgetdata-doc.substvars
	(grep -a -s -v python3:Depends debian/libgetdata-dev.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libgetdata-dev.substvars.new
	mv debian/libgetdata-dev.substvars.new debian/libgetdata-dev.substvars
	(grep -a -s -v python3:Depends debian/libgetdata8.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libgetdata8.substvars.new
	mv debian/libgetdata8.substvars.new debian/libgetdata8.substvars
	(grep -a -s -v python3:Depends debian/libgetdata++7.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libgetdata++7.substvars.new
	mv debian/libgetdata\+\+7.substvars.new debian/libgetdata\+\+7.substvars
	(grep -a -s -v python3:Depends debian/libfgetdata6.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libfgetdata6.substvars.new
	mv debian/libfgetdata6.substvars.new debian/libfgetdata6.substvars
	(grep -a -s -v python3:Depends debian/libf95getdata7.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libf95getdata7.substvars.new
	mv debian/libf95getdata7.substvars.new debian/libf95getdata7.substvars
	(grep -a -s -v python3:Depends debian/libgetdata-tools.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libgetdata-tools.substvars.new
	mv debian/libgetdata-tools.substvars.new debian/libgetdata-tools.substvars
	(grep -a -s -v python3:Depends debian/python3-pygetdata.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/python3-pygetdata.substvars.new
	mv debian/python3-pygetdata.substvars.new debian/python3-pygetdata.substvars
	(grep -a -s -v python3:Depends debian/libgetdata-perl.substvars; echo "python3:Depends=python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9") > debian/libgetdata-perl.substvars.new
	mv debian/libgetdata-perl.substvars.new debian/libgetdata-perl.substvars
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_install
	install -d debian/libgetdata-doc//usr/share/man/man3
	cp --reflink=auto -a debian/tmp/usr/share/man/man3/GD_SIZE.3 debian/tmp/usr/share/man/man3/GetData.3pm debian/tmp/usr/share/man/man3/gd_add.3 debian/tmp/usr/share/man/man3/gd_add_alias.3 debian/tmp/usr/share/man/man3/gd_add_bit.3 debian/tmp/usr/share/man/man3/gd_add_carray.3 debian/tmp/usr/share/man/man3/gd_add_clincom.3 debian/tmp/usr/share/man/man3/gd_add_const.3 debian/tmp/usr/share/man/man3/gd_add_cpolynom.3 debian/tmp/usr/share/man/man3/gd_add_crecip.3 debian/tmp/usr/share/man/man3/gd_add_divide.3 debian/tmp/usr/share/man/man3/gd_add_indir.3 debian/tmp/usr/share/man/man3/gd_add_lincom.3 debian/tmp/usr/share/man/man3/gd_add_linterp.3 debian/tmp/usr/share/man/man3/gd_add_mplex.3 debian/tmp/usr/share/man/man3/gd_add_multiply.3 debian/tmp/usr/share/man/man3/gd_add_phase.3 debian/tmp/usr/share/man/man3/gd_add_polynom.3 debian/tmp/usr/share/man/man3/gd_add_raw.3 debian/tmp/usr/share/man/man3/gd_add_recip.3 debian/tmp/usr/share/man/man3/gd_add_sarray.3 debian/tmp/usr/share/man/man3/gd_add_sbit.3 debian/tmp/usr/share/man/man3/gd_add_sindir.3 debian/tmp/usr/share/man/man3/gd_add_spec.3 debian/tmp/usr/share/man/man3/gd_add_string.3 debian/tmp/usr/share/man/man3/gd_add_window.3 debian/tmp/usr/share/man/man3/gd_alias_target.3 debian/tmp/usr/share/man/man3/gd_aliases.3 debian/tmp/usr/share/man/man3/gd_alloc_funcs.3 debian/tmp/usr/share/man/man3/gd_alter_affixes.3 debian/tmp/usr/share/man/man3/gd_alter_bit.3 debian/tmp/usr/share/man/man3/gd_alter_carray.3 debian/tmp/usr/share/man/man3/gd_alter_clincom.3 debian/tmp/usr/share/man/man3/gd_alter_const.3 debian/tmp/usr/share/man/man3/gd_alter_cpolynom.3 debian/tmp/usr/share/man/man3/gd_alter_crecip.3 debian/tmp/usr/share/man/man3/gd_alter_divide.3 debian/tmp/usr/share/man/man3/gd_alter_encoding.3 debian/tmp/usr/share/man/man3/gd_alter_endianness.3 debian/tmp/usr/share/man/man3/gd_alter_entry.3 debian/tmp/usr/share/man/man3/gd_alter_frameoffset.3 debian/tmp/usr/share/man/man3/gd_alter_frameoffset64.3 debian/tmp/usr/share/man/man3/gd_alter_lincom.3 debian/tmp/usr/share/man/man3/gd_alter_linterp.3 debian/tmp/usr/share/man/man3/gd_alter_mplex.3 debian/tmp/usr/share/man/man3/gd_alter_multiply.3 debian/tmp/usr/share/man/man3/gd_alter_phase.3 debian/tmp/usr/share/man/man3/gd_alter_polynom.3 debian/tmp/usr/share/man/man3/gd_alter_protection.3 debian/tmp/usr/share/man/man3/gd_alter_raw.3 debian/tmp/usr/share/man/man3/gd_alter_recip.3 debian/tmp/usr/share/man/man3/gd_alter_sbit.3 debian/tmp/usr/share/man/man3/gd_alter_spec.3 debian/tmp/usr/share/man/man3/gd_alter_window.3 debian/tmp/usr/share/man/man3/gd_array_len.3 debian/tmp/usr/share/man/man3/gd_bof.3 debian/tmp/usr/share/man/man3/gd_bof64.3 debian/tmp/usr/share/man/man3/gd_carray_len.3 debian/tmp/usr/share/man/man3/gd_carrays.3 debian/tmp/usr/share/man/man3/gd_cbopen.3 debian/tmp/usr/share/man/man3/gd_close.3 debian/tmp/usr/share/man/man3/gd_constants.3 debian/tmp/usr/share/man/man3/gd_delete.3 debian/tmp/usr/share/man/man3/gd_desync.3 debian/tmp/usr/share/man/man3/gd_dirfile_standards.3 debian/tmp/usr/share/man/man3/gd_dirfilename.3 debian/tmp/usr/share/man/man3/gd_discard.3 debian/tmp/usr/share/man/man3/gd_encoding.3 debian/tmp/usr/share/man/man3/gd_encoding_support.3 debian/tmp/usr/share/man/man3/gd_endianness.3 debian/tmp/usr/share/man/man3/gd_entry.3 debian/tmp/usr/share/man/man3/gd_entry_list.3 debian/tmp/usr/share/man/man3/gd_entry_type.3 debian/tmp/usr/share/man/man3/gd_eof.3 debian/tmp/usr/share/man/man3/gd_eof64.3 debian/tmp/usr/share/man/man3/gd_error.3 debian/tmp/usr/share/man/man3/gd_error_count.3 debian/tmp/usr/share/man/man3/gd_error_string.3 debian/tmp/usr/share/man/man3/gd_field_list.3 debian/tmp/usr/share/man/man3/gd_field_list_by_type.3 debian/tmp/usr/share/man/man3/gd_flags.3 debian/tmp/usr/share/man/man3/gd_flush.3 debian/tmp/usr/share/man/man3/gd_fragment_affixes.3 debian/tmp/usr/share/man/man3/gd_fragment_index.3 debian/tmp/usr/share/man/man3/gd_fragment_namespace.3 debian/tmp/usr/share/man/man3/gd_fragmentname.3 debian/tmp/usr/share/man/man3/gd_framenum.3 debian/tmp/usr/share/man/man3/gd_framenum_subset.3 debian/tmp/usr/share/man/man3/gd_framenum_subset64.3 debian/tmp/usr/share/man/man3/gd_frameoffset.3 debian/tmp/usr/share/man/man3/gd_frameoffset64.3 debian/tmp/usr/share/man/man3/gd_free_entry_strings.3 debian/tmp/usr/share/man/man3/gd_get_carray.3 debian/tmp/usr/share/man/man3/gd_get_carray_slice.3 debian/tmp/usr/share/man/man3/gd_get_constant.3 debian/tmp/usr/share/man/man3/gd_get_sarray.3 debian/tmp/usr/share/man/man3/gd_get_sarray_slice.3 debian/tmp/usr/share/man/man3/gd_get_string.3 debian/tmp/usr/share/man/man3/gd_getdata.3 debian/tmp/usr/share/man/man3/gd_getdata64.3 debian/tmp/usr/share/man/man3/gd_hidden.3 debian/tmp/usr/share/man/man3/gd_hide.3 debian/tmp/usr/share/man/man3/gd_include.3 debian/tmp/usr/share/man/man3/gd_include_affix.3 debian/tmp/usr/share/man/man3/gd_include_ns.3 debian/tmp/usr/share/man/man3/gd_invalid_dirfile.3 debian/tmp/usr/share/man/man3/gd_linterp_tablename.3 debian/tmp/usr/share/man/man3/gd_madd.3 debian/tmp/usr/share/man/man3/gd_madd_alias.3 debian/tmp/usr/share/man/man3/gd_madd_bit.3 debian/tmp/usr/share/man/man3/gd_madd_carray.3 debian/tmp/usr/share/man/man3/gd_madd_clincom.3 debian/tmp/usr/share/man/man3/gd_madd_const.3 debian/tmp/usr/share/man/man3/gd_madd_cpolynom.3 debian/tmp/usr/share/man/man3/gd_madd_crecip.3 debian/tmp/usr/share/man/man3/gd_madd_divide.3 debian/tmp/usr/share/man/man3/gd_madd_lincom.3 debian/tmp/usr/share/man/man3/gd_madd_linterp.3 debian/tmp/usr/share/man/man3/gd_madd_mplex.3 debian/tmp/usr/share/man/man3/gd_madd_multiply.3 debian/tmp/usr/share/man/man3/gd_madd_phase.3 debian/tmp/usr/share/man/man3/gd_madd_polynom.3 debian/tmp/usr/share/man/man3/gd_madd_recip.3 debian/tmp/usr/share/man/man3/gd_madd_sbit.3 debian/tmp/usr/share/man/man3/gd_madd_spec.3 debian/tmp/usr/share/man/man3/gd_madd_string.3 debian/tmp/usr/share/man/man3/gd_madd_window.3 debian/tmp/usr/share/man/man3/gd_malter_spec.3 debian/tmp/usr/share/man/man3/gd_match_entries.3 debian/tmp/usr/share/man/man3/gd_mcarrays.3 debian/tmp/usr/share/man/man3/gd_mconstants.3 debian/tmp/usr/share/man/man3/gd_metaflush.3 debian/tmp/usr/share/man/man3/gd_mfield_list.3 debian/tmp/usr/share/man/man3/gd_mfield_list_by_type.3 debian/tmp/usr/share/man/man3/gd_move.3 debian/tmp/usr/share/man/man3/gd_mplex_lookback.3 debian/tmp/usr/share/man/man3/gd_msarrays.3 debian/tmp/usr/share/man/man3/gd_mstrings.3 debian/tmp/usr/share/man/man3/gd_naliases.3 debian/tmp/usr/share/man/man3/gd_native_type.3 debian/tmp/usr/share/man/man3/gd_nentries.3 debian/tmp/usr/share/man/man3/gd_nfields.3 debian/tmp/usr/share/man/man3/gd_nfields_by_type.3 debian/tmp/usr/share/man/man3/gd_nfragments.3 debian/tmp/usr/share/man/man3/gd_nframes.3 debian/tmp/usr/share/man/man3/gd_nframes64.3 debian/tmp/usr/share/man/man3/gd_nmfields.3 debian/tmp/usr/share/man/man3/gd_nmfields_by_type.3 debian/tmp/usr/share/man/man3/gd_nmvectore.3 debian/tmp/usr/share/man/man3/gd_nvectors.3 debian/tmp/usr/share/man/man3/gd_open.3 debian/tmp/usr/share/man/man3/gd_parent_fragment.3 debian/tmp/usr/share/man/man3/gd_parser_callback.3 debian/tmp/usr/share/man/man3/gd_protection.3 debian/tmp/usr/share/man/man3/gd_put_carray.3 debian/tmp/usr/share/man/man3/gd_put_carray_slice.3 debian/tmp/usr/share/man/man3/gd_put_constant.3 debian/tmp/usr/share/man/man3/gd_put_sarray.3 debian/tmp/usr/share/man/man3/gd_put_sarray_slice.3 debian/tmp/usr/share/man/man3/gd_put_string.3 debian/tmp/usr/share/man/man3/gd_putdata.3 debian/tmp/usr/share/man/man3/gd_putdata64.3 debian/tmp/usr/share/man/man3/gd_raw_close.3 debian/tmp/usr/share/man/man3/gd_raw_filename.3 debian/tmp/usr/share/man/man3/gd_reference.3 debian/tmp/usr/share/man/man3/gd_rename.3 debian/tmp/usr/share/man/man3/gd_rewrite_fragment.3 debian/tmp/usr/share/man/man3/gd_sarrays.3 debian/tmp/usr/share/man/man3/gd_seek.3 debian/tmp/usr/share/man/man3/gd_seek64.3 debian/tmp/usr/share/man/man3/gd_spf.3 debian/tmp/usr/share/man/man3/gd_strings.3 debian/tmp/usr/share/man/man3/gd_strtok.3 debian/tmp/usr/share/man/man3/gd_sync.3 debian/tmp/usr/share/man/man3/gd_tell.3 debian/tmp/usr/share/man/man3/gd_tell64.3 debian/tmp/usr/share/man/man3/gd_unhide.3 debian/tmp/usr/share/man/man3/gd_uninclude.3 debian/tmp/usr/share/man/man3/gd_validate.3 debian/tmp/usr/share/man/man3/gd_vector_list.3 debian/tmp/usr/share/man/man3/gd_verbose_prefix.3 debian/libgetdata-doc//usr/share/man/man3/
	install -d debian/libgetdata-doc//usr/share/man/man5
	cp --reflink=auto -a debian/tmp/usr/share/man/man5/dirfile-encoding.5 debian/tmp/usr/share/man/man5/dirfile-format.5 debian/tmp/usr/share/man/man5/dirfile.5 debian/libgetdata-doc//usr/share/man/man5/
	install -d debian/libgetdata-doc/usr/share/doc/libgetdata
	cp --reflink=auto -a debian/tmp/usr/share/doc/getdata/README.cxx debian/tmp/usr/share/doc/getdata/README.f77 debian/tmp/usr/share/doc/getdata/README.f95 debian/tmp/usr/share/doc/getdata/README.perl debian/tmp/usr/share/doc/getdata/README.python debian/tmp/usr/share/doc/getdata/unclean_database_recovery.txt debian/libgetdata-doc/usr/share/doc/libgetdata/
	install -d debian/.debhelper/generated/libgetdata-doc
	install -d debian/libgetdata-dev//usr/include
	cp --reflink=auto -a debian/tmp/usr/include/getdata debian/tmp/usr/include/getdata.f debian/tmp/usr/include/getdata.h debian/libgetdata-dev//usr/include/
	install -d debian/libgetdata-dev//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.a debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.so debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.a debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.so debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata\+\+.a debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.a debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.so debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/
	install -d debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/getdata
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2-0.10.0.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac-0.10.0.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip-0.10.0.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma-0.10.0.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip-0.10.0.so debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.a debian/tmp/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.so debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/getdata/
	install -d debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/pkgconfig
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/pkgconfig/getdata.pc debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/pkgconfig/
	install -d debian/.debhelper/generated/libgetdata-dev
	install -d debian/libgetdata8//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.so.8 debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata.so.8.0.0 debian/libgetdata8//usr/lib/x86_64-linux-gnu/
	install -d debian/.debhelper/generated/libgetdata8
	install -d debian/libgetdata\+\+7//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so.7 debian/tmp/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so.7.0.0 debian/libgetdata\+\+7//usr/lib/x86_64-linux-gnu/
	install -d debian/.debhelper/generated/libgetdata\+\+7
	install -d debian/libfgetdata6//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.so.6 debian/tmp/usr/lib/x86_64-linux-gnu/libfgetdata.so.6.0.0 debian/libfgetdata6//usr/lib/x86_64-linux-gnu/
	install -d debian/.debhelper/generated/libfgetdata6
	install -d debian/libf95getdata7//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.so.7 debian/tmp/usr/lib/x86_64-linux-gnu/libf95getdata.so.7.0.0 debian/libf95getdata7//usr/lib/x86_64-linux-gnu/
	install -d debian/.debhelper/generated/libf95getdata7
	install -d debian/libgetdata-tools//usr/bin
	cp --reflink=auto -a debian/tmp/usr/bin/checkdirfile debian/tmp/usr/bin/dirfile2ascii debian/libgetdata-tools//usr/bin/
	install -d debian/libgetdata-tools//usr/share/man/man1
	cp --reflink=auto -a debian/tmp/usr/share/man/man1/checkdirfile.1 debian/tmp/usr/share/man/man1/dirfile2ascii.1 debian/libgetdata-tools//usr/share/man/man1/
	install -d debian/.debhelper/generated/libgetdata-tools
	install -d debian/python3-pygetdata//usr/lib/python3.9/site-packages
	cp --reflink=auto -a debian/tmp/usr/lib/python3.9/site-packages/pygetdata.cpython-39-x86_64-linux-gnu.so debian/python3-pygetdata//usr/lib/python3.9/site-packages/
	install -d debian/.debhelper/generated/python3-pygetdata
	install -d debian/libgetdata-perl//usr/lib/x86_64-linux-gnu
	cp --reflink=auto -a debian/tmp/usr/lib/x86_64-linux-gnu/perl5 debian/libgetdata-perl//usr/lib/x86_64-linux-gnu/
	install -d debian/.debhelper/generated/libgetdata-perl
   dh_fortran_mod
	grep -a -s -v '^misc:Depends=' debian/libgetdata-doc.substvars > debian/libgetdata-doc.substvars.new || true
	mv debian/libgetdata-doc.substvars.new debian/libgetdata-doc.substvars
	Fortran modfile debian/tmp/usr/include/getdata.mod created by gfortran modversion 15
	Fortran modfile debian/tmp/usr/include/getdata.mod created by gfortran modversion 15
	install -d debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/fortran/gfortran-mod-15
	cp --reflink=auto -a debian/tmp/usr/include/getdata.mod debian/libgetdata-dev//usr/lib/x86_64-linux-gnu/fortran/gfortran-mod-15/
	(grep -a -s -v misc:Depends debian/libgetdata-dev.substvars; echo "misc:Depends=gfortran-11 | gfortran-mod-15") > debian/libgetdata-dev.substvars.new
	mv debian/libgetdata-dev.substvars.new debian/libgetdata-dev.substvars
	[META] Append autosnippet "preinst-fortran-mod" to preinst [debian/libgetdata-dev.preinst.debhelper]
	[META] Append autosnippet "postrm-fortran-mod" to postrm [debian/libgetdata-dev.postrm.debhelper]
	[META] Append autosnippet "preinst-fortran-mod" to preinst [debian/libgetdata-dev.preinst.debhelper]
	[META] Prepend autosnippet "postrm-fortran-mod" to postrm [debian/libgetdata-dev.postrm.debhelper.new]
	mv debian/libgetdata-dev.postrm.debhelper.new debian/libgetdata-dev.postrm.debhelper
	[META] Append autosnippet "preinst-fortran-mod" to preinst [debian/libgetdata-dev.preinst.debhelper]
	[META] Prepend autosnippet "postrm-fortran-mod" to postrm [debian/libgetdata-dev.postrm.debhelper.new]
	mv debian/libgetdata-dev.postrm.debhelper.new debian/libgetdata-dev.postrm.debhelper
	[META] Append autosnippet "preinst-fortran-mod" to preinst [debian/libgetdata-dev.preinst.debhelper]
	[META] Prepend autosnippet "postrm-fortran-mod" to postrm [debian/libgetdata-dev.postrm.debhelper.new]
	mv debian/libgetdata-dev.postrm.debhelper.new debian/libgetdata-dev.postrm.debhelper
	grep -a -s -v '^misc:Depends=' debian/libgetdata8.substvars > debian/libgetdata8.substvars.new || true
	mv debian/libgetdata8.substvars.new debian/libgetdata8.substvars
	grep -a -s -v '^misc:Depends=' debian/libgetdata++7.substvars > debian/libgetdata++7.substvars.new || true
	mv debian/libgetdata\+\+7.substvars.new debian/libgetdata\+\+7.substvars
	grep -a -s -v '^misc:Depends=' debian/libfgetdata6.substvars > debian/libfgetdata6.substvars.new || true
	mv debian/libfgetdata6.substvars.new debian/libfgetdata6.substvars
	grep -a -s -v '^misc:Depends=' debian/libf95getdata7.substvars > debian/libf95getdata7.substvars.new || true
	mv debian/libf95getdata7.substvars.new debian/libf95getdata7.substvars
	grep -a -s -v '^misc:Depends=' debian/libgetdata-tools.substvars > debian/libgetdata-tools.substvars.new || true
	mv debian/libgetdata-tools.substvars.new debian/libgetdata-tools.substvars
	grep -a -s -v '^misc:Depends=' debian/python3-pygetdata.substvars > debian/python3-pygetdata.substvars.new || true
	mv debian/python3-pygetdata.substvars.new debian/python3-pygetdata.substvars
	grep -a -s -v '^misc:Depends=' debian/libgetdata-perl.substvars > debian/libgetdata-perl.substvars.new || true
	mv debian/libgetdata-perl.substvars.new debian/libgetdata-perl.substvars
   dh_installdocs
	install -d debian/libgetdata-doc/usr/share/doc/libgetdata-doc
	install -d debian/libgetdata-doc/usr/share/doc/libgetdata-dev
	cp --reflink=auto -a ./NEWS debian/libgetdata-doc/usr/share/doc/libgetdata-dev
	cp --reflink=auto -a ./README debian/libgetdata-doc/usr/share/doc/libgetdata-dev
	cp --reflink=auto -a ./TODO debian/libgetdata-doc/usr/share/doc/libgetdata-dev
	chown -R 0:0 debian/libgetdata-doc/usr/share/doc
	chmod -R u\+rw,go=rX debian/libgetdata-doc/usr/share/doc
	install -p -m0644 debian/copyright debian/libgetdata-doc/usr/share/doc/libgetdata-doc/copyright
	install -d debian/libgetdata-dev/usr/share/doc/libgetdata-dev
	install -p -m0644 debian/copyright debian/libgetdata-dev/usr/share/doc/libgetdata-dev/copyright
	install -d debian/libgetdata8/usr/share/doc/libgetdata8
	install -p -m0644 debian/copyright debian/libgetdata8/usr/share/doc/libgetdata8/copyright
	install -d debian/libgetdata\+\+7/usr/share/doc/libgetdata\+\+7
	install -p -m0644 debian/copyright debian/libgetdata\+\+7/usr/share/doc/libgetdata\+\+7/copyright
	install -d debian/libfgetdata6/usr/share/doc/libfgetdata6
	install -p -m0644 debian/copyright debian/libfgetdata6/usr/share/doc/libfgetdata6/copyright
	install -d debian/libf95getdata7/usr/share/doc/libf95getdata7
	install -p -m0644 debian/copyright debian/libf95getdata7/usr/share/doc/libf95getdata7/copyright
	install -d debian/libgetdata-tools/usr/share/doc/libgetdata-tools
	install -p -m0644 debian/copyright debian/libgetdata-tools/usr/share/doc/libgetdata-tools/copyright
	install -d debian/python3-pygetdata/usr/share/doc/python3-pygetdata
	install -p -m0644 debian/copyright debian/python3-pygetdata/usr/share/doc/python3-pygetdata/copyright
	install -d debian/libgetdata-perl/usr/share/doc/libgetdata-perl
	install -p -m0644 debian/copyright debian/libgetdata-perl/usr/share/doc/libgetdata-perl/copyright
   dh_installchangelogs
	install -p -m0644 debian/changelog debian/libgetdata\+\+7/usr/share/doc/libgetdata\+\+7/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata\+\+7/usr/share/doc/libgetdata\+\+7/changelog
	install -p -m0644 debian/changelog debian/libfgetdata6/usr/share/doc/libfgetdata6/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libfgetdata6/usr/share/doc/libfgetdata6/changelog
	install -p -m0644 debian/changelog debian/libf95getdata7/usr/share/doc/libf95getdata7/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libf95getdata7/usr/share/doc/libf95getdata7/changelog
	install -p -m0644 debian/changelog debian/libgetdata-doc/usr/share/doc/libgetdata-doc/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata-doc/usr/share/doc/libgetdata-doc/changelog
	install -p -m0644 debian/changelog debian/libgetdata-dev/usr/share/doc/libgetdata-dev/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata-dev/usr/share/doc/libgetdata-dev/changelog
	install -p -m0644 debian/changelog debian/libgetdata8/usr/share/doc/libgetdata8/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata8/usr/share/doc/libgetdata8/changelog
	install -p -m0644 debian/changelog debian/libgetdata-tools/usr/share/doc/libgetdata-tools/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata-tools/usr/share/doc/libgetdata-tools/changelog
	install -p -m0644 debian/changelog debian/python3-pygetdata/usr/share/doc/python3-pygetdata/changelog.Debian
	install -p -m0644 ./ChangeLog debian/python3-pygetdata/usr/share/doc/python3-pygetdata/changelog
	install -p -m0644 debian/changelog debian/libgetdata-perl/usr/share/doc/libgetdata-perl/changelog.Debian
	install -p -m0644 ./ChangeLog debian/libgetdata-perl/usr/share/doc/libgetdata-perl/changelog
   dh_installman
	man-recode --to-code UTF-8 --suffix .dh-new debian/libgetdata-doc/usr/share/man/man3/GD_SIZE.3 debian/libgetdata-doc/usr/share/man/man3/GetData.3pm debian/libgetdata-doc/usr/share/man/man3/gd_add.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_alias.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_alias_target.3 debian/libgetdata-doc/usr/share/man/man3/gd_aliases.3 debian/libgetdata-doc/usr/share/man/man3/gd_alloc_funcs.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_affixes.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_encoding.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_endianness.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_entry.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_protection.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_array_len.3 debian/libgetdata-doc/usr/share/man/man3/gd_bof.3 debian/libgetdata-doc/usr/share/man/man3/gd_bof64.3 debian/libgetdata-doc/usr/share/man/man3/gd_carrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_close.3 debian/libgetdata-doc/usr/share/man/man3/gd_constants.3 debian/libgetdata-doc/usr/share/man/man3/gd_delete.3 debian/libgetdata-doc/usr/share/man/man3/gd_desync.3
	man-recode --to-code UTF-8 --suffix .dh-new debian/libgetdata-doc/usr/share/man/man3/gd_dirfile_standards.3 debian/libgetdata-doc/usr/share/man/man3/gd_dirfilename.3 debian/libgetdata-doc/usr/share/man/man3/gd_encoding.3 debian/libgetdata-doc/usr/share/man/man3/gd_encoding_support.3 debian/libgetdata-doc/usr/share/man/man3/gd_endianness.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_eof.3 debian/libgetdata-doc/usr/share/man/man3/gd_eof64.3 debian/libgetdata-doc/usr/share/man/man3/gd_error.3 debian/libgetdata-doc/usr/share/man/man3/gd_error_count.3 debian/libgetdata-doc/usr/share/man/man3/gd_flags.3 debian/libgetdata-doc/usr/share/man/man3/gd_flush.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_affixes.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_index.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_namespace.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragmentname.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset.3 debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_free_entry_strings.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray_slice.3
	man-recode --to-code UTF-8 --suffix .dh-new debian/libgetdata-doc/usr/share/man/man3/gd_get_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_getdata.3 debian/libgetdata-doc/usr/share/man/man3/gd_getdata64.3 debian/libgetdata-doc/usr/share/man/man3/gd_hidden.3 debian/libgetdata-doc/usr/share/man/man3/gd_hide.3 debian/libgetdata-doc/usr/share/man/man3/gd_include.3 debian/libgetdata-doc/usr/share/man/man3/gd_invalid_dirfile.3 debian/libgetdata-doc/usr/share/man/man3/gd_linterp_tablename.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_match_entries.3 debian/libgetdata-doc/usr/share/man/man3/gd_metaflush.3 debian/libgetdata-doc/usr/share/man/man3/gd_move.3 debian/libgetdata-doc/usr/share/man/man3/gd_mplex_lookback.3 debian/libgetdata-doc/usr/share/man/man3/gd_naliases.3 debian/libgetdata-doc/usr/share/man/man3/gd_native_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfragments.3 debian/libgetdata-doc/usr/share/man/man3/gd_nframes.3 debian/libgetdata-doc/usr/share/man/man3/gd_nframes64.3 debian/libgetdata-doc/usr/share/man/man3/gd_open.3 debian/libgetdata-doc/usr/share/man/man3/gd_parent_fragment.3 debian/libgetdata-doc/usr/share/man/man3/gd_parser_callback.3 debian/libgetdata-doc/usr/share/man/man3/gd_protection.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray_slice.3
	man-recode --to-code UTF-8 --suffix .dh-new debian/libgetdata-doc/usr/share/man/man3/gd_put_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_putdata.3 debian/libgetdata-doc/usr/share/man/man3/gd_putdata64.3 debian/libgetdata-doc/usr/share/man/man3/gd_raw_filename.3 debian/libgetdata-doc/usr/share/man/man3/gd_reference.3 debian/libgetdata-doc/usr/share/man/man3/gd_rename.3 debian/libgetdata-doc/usr/share/man/man3/gd_rewrite_fragment.3 debian/libgetdata-doc/usr/share/man/man3/gd_sarrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_seek.3 debian/libgetdata-doc/usr/share/man/man3/gd_seek64.3 debian/libgetdata-doc/usr/share/man/man3/gd_spf.3 debian/libgetdata-doc/usr/share/man/man3/gd_strings.3 debian/libgetdata-doc/usr/share/man/man3/gd_strtok.3 debian/libgetdata-doc/usr/share/man/man3/gd_tell.3 debian/libgetdata-doc/usr/share/man/man3/gd_tell64.3 debian/libgetdata-doc/usr/share/man/man3/gd_uninclude.3 debian/libgetdata-doc/usr/share/man/man3/gd_validate.3 debian/libgetdata-doc/usr/share/man/man3/gd_verbose_prefix.3 debian/libgetdata-doc/usr/share/man/man5/dirfile-encoding.5 debian/libgetdata-doc/usr/share/man/man5/dirfile-format.5 debian/libgetdata-doc/usr/share/man/man5/dirfile.5 debian/libgetdata-tools/usr/share/man/man1/checkdirfile.1 debian/libgetdata-tools/usr/share/man/man1/dirfile2ascii.1
	mv debian/libgetdata-doc/usr/share/man/man3/gd_put_string.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_put_string.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_putdata.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_putdata.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_putdata64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_putdata64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_raw_filename.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_raw_filename.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_reference.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_reference.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_rename.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_rename.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_rewrite_fragment.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_rewrite_fragment.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_sarrays.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_sarrays.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_seek.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_seek.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_seek64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_seek64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_spf.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_spf.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_strings.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_strings.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_strtok.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_strtok.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_tell.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_tell.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_tell64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_tell64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_uninclude.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_uninclude.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_validate.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_validate.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_verbose_prefix.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_verbose_prefix.3
	mv debian/libgetdata-doc/usr/share/man/man5/dirfile-encoding.5.dh-new debian/libgetdata-doc/usr/share/man/man5/dirfile-encoding.5
	mv debian/libgetdata-doc/usr/share/man/man5/dirfile-format.5.dh-new debian/libgetdata-doc/usr/share/man/man5/dirfile-format.5
	mv debian/libgetdata-doc/usr/share/man/man5/dirfile.5.dh-new debian/libgetdata-doc/usr/share/man/man5/dirfile.5
	mv debian/libgetdata-tools/usr/share/man/man1/checkdirfile.1.dh-new debian/libgetdata-tools/usr/share/man/man1/checkdirfile.1
	mv debian/libgetdata-tools/usr/share/man/man1/dirfile2ascii.1.dh-new debian/libgetdata-tools/usr/share/man/man1/dirfile2ascii.1
	chmod 0644 -- debian/libgetdata-doc/usr/share/man/man3/gd_put_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_putdata.3 debian/libgetdata-doc/usr/share/man/man3/gd_putdata64.3 debian/libgetdata-doc/usr/share/man/man3/gd_raw_filename.3 debian/libgetdata-doc/usr/share/man/man3/gd_reference.3 debian/libgetdata-doc/usr/share/man/man3/gd_rename.3 debian/libgetdata-doc/usr/share/man/man3/gd_rewrite_fragment.3 debian/libgetdata-doc/usr/share/man/man3/gd_sarrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_seek.3 debian/libgetdata-doc/usr/share/man/man3/gd_seek64.3 debian/libgetdata-doc/usr/share/man/man3/gd_spf.3 debian/libgetdata-doc/usr/share/man/man3/gd_strings.3 debian/libgetdata-doc/usr/share/man/man3/gd_strtok.3 debian/libgetdata-doc/usr/share/man/man3/gd_tell.3 debian/libgetdata-doc/usr/share/man/man3/gd_tell64.3 debian/libgetdata-doc/usr/share/man/man3/gd_uninclude.3 debian/libgetdata-doc/usr/share/man/man3/gd_validate.3 debian/libgetdata-doc/usr/share/man/man3/gd_verbose_prefix.3 debian/libgetdata-doc/usr/share/man/man5/dirfile-encoding.5 debian/libgetdata-doc/usr/share/man/man5/dirfile-format.5 debian/libgetdata-doc/usr/share/man/man5/dirfile.5 debian/libgetdata-tools/usr/share/man/man1/checkdirfile.1 debian/libgetdata-tools/usr/share/man/man1/dirfile2ascii.1
	mv debian/libgetdata-doc/usr/share/man/man3/gd_dirfile_standards.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_dirfile_standards.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_dirfilename.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_dirfilename.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_encoding.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_encoding.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_encoding_support.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_encoding_support.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_endianness.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_endianness.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_entry.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_entry.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_entry_list.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_entry_list.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_entry_type.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_entry_type.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_eof.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_eof.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_eof64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_eof64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_error.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_error.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_error_count.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_error_count.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_flags.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_flags.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_flush.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_flush.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_fragment_affixes.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_fragment_affixes.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_fragment_index.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_fragment_index.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_fragment_namespace.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_fragment_namespace.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_fragmentname.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_fragmentname.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_free_entry_strings.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_free_entry_strings.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_get_carray_slice.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_get_carray_slice.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray_slice.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray_slice.3
	chmod 0644 -- debian/libgetdata-doc/usr/share/man/man3/gd_dirfile_standards.3 debian/libgetdata-doc/usr/share/man/man3/gd_dirfilename.3 debian/libgetdata-doc/usr/share/man/man3/gd_encoding.3 debian/libgetdata-doc/usr/share/man/man3/gd_encoding_support.3 debian/libgetdata-doc/usr/share/man/man3/gd_endianness.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_entry_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_eof.3 debian/libgetdata-doc/usr/share/man/man3/gd_eof64.3 debian/libgetdata-doc/usr/share/man/man3/gd_error.3 debian/libgetdata-doc/usr/share/man/man3/gd_error_count.3 debian/libgetdata-doc/usr/share/man/man3/gd_flags.3 debian/libgetdata-doc/usr/share/man/man3/gd_flush.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_affixes.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_index.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragment_namespace.3 debian/libgetdata-doc/usr/share/man/man3/gd_fragmentname.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum_subset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset.3 debian/libgetdata-doc/usr/share/man/man3/gd_frameoffset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_free_entry_strings.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray_slice.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_get_string.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_get_string.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_getdata.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_getdata.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_getdata64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_getdata64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_hidden.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_hidden.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_hide.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_hide.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_include.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_include.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_invalid_dirfile.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_invalid_dirfile.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_linterp_tablename.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_linterp_tablename.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_madd_bit.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_madd_bit.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_match_entries.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_match_entries.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_metaflush.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_metaflush.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_move.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_move.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_mplex_lookback.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_mplex_lookback.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_naliases.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_naliases.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_native_type.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_native_type.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_nentries.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_nentries.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_nfragments.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_nfragments.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_nframes.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_nframes.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_nframes64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_nframes64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_open.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_open.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_parent_fragment.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_parent_fragment.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_parser_callback.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_parser_callback.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_protection.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_protection.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_put_carray_slice.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_put_carray_slice.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray_slice.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray_slice.3
	chmod 0644 -- debian/libgetdata-doc/usr/share/man/man3/gd_get_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_getdata.3 debian/libgetdata-doc/usr/share/man/man3/gd_getdata64.3 debian/libgetdata-doc/usr/share/man/man3/gd_hidden.3 debian/libgetdata-doc/usr/share/man/man3/gd_hide.3 debian/libgetdata-doc/usr/share/man/man3/gd_include.3 debian/libgetdata-doc/usr/share/man/man3/gd_invalid_dirfile.3 debian/libgetdata-doc/usr/share/man/man3/gd_linterp_tablename.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_match_entries.3 debian/libgetdata-doc/usr/share/man/man3/gd_metaflush.3 debian/libgetdata-doc/usr/share/man/man3/gd_move.3 debian/libgetdata-doc/usr/share/man/man3/gd_mplex_lookback.3 debian/libgetdata-doc/usr/share/man/man3/gd_naliases.3 debian/libgetdata-doc/usr/share/man/man3/gd_native_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfragments.3 debian/libgetdata-doc/usr/share/man/man3/gd_nframes.3 debian/libgetdata-doc/usr/share/man/man3/gd_nframes64.3 debian/libgetdata-doc/usr/share/man/man3/gd_open.3 debian/libgetdata-doc/usr/share/man/man3/gd_parent_fragment.3 debian/libgetdata-doc/usr/share/man/man3/gd_parser_callback.3 debian/libgetdata-doc/usr/share/man/man3/gd_protection.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray_slice.3
	mv debian/libgetdata-doc/usr/share/man/man3/GD_SIZE.3.dh-new debian/libgetdata-doc/usr/share/man/man3/GD_SIZE.3
	mv debian/libgetdata-doc/usr/share/man/man3/GetData.3pm.dh-new debian/libgetdata-doc/usr/share/man/man3/GetData.3pm
	mv debian/libgetdata-doc/usr/share/man/man3/gd_add.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_add.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_add_alias.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_add_alias.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_add_bit.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_add_bit.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_add_spec.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_add_spec.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alias_target.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alias_target.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_aliases.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_aliases.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alloc_funcs.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alloc_funcs.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_affixes.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_affixes.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_bit.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_bit.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_encoding.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_encoding.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_endianness.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_endianness.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_entry.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_entry.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_protection.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_protection.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_alter_spec.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_alter_spec.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_array_len.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_array_len.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_bof.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_bof.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_bof64.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_bof64.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_carrays.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_carrays.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_close.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_close.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_constants.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_constants.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_delete.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_delete.3
	mv debian/libgetdata-doc/usr/share/man/man3/gd_desync.3.dh-new debian/libgetdata-doc/usr/share/man/man3/gd_desync.3
	chmod 0644 -- debian/libgetdata-doc/usr/share/man/man3/GD_SIZE.3 debian/libgetdata-doc/usr/share/man/man3/GetData.3pm debian/libgetdata-doc/usr/share/man/man3/gd_add.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_alias.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_alias_target.3 debian/libgetdata-doc/usr/share/man/man3/gd_aliases.3 debian/libgetdata-doc/usr/share/man/man3/gd_alloc_funcs.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_affixes.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_encoding.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_endianness.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_entry.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_protection.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_array_len.3 debian/libgetdata-doc/usr/share/man/man3/gd_bof.3 debian/libgetdata-doc/usr/share/man/man3/gd_bof64.3 debian/libgetdata-doc/usr/share/man/man3/gd_carrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_close.3 debian/libgetdata-doc/usr/share/man/man3/gd_constants.3 debian/libgetdata-doc/usr/share/man/man3/gd_delete.3 debian/libgetdata-doc/usr/share/man/man3/gd_desync.3
   dh_python3
D: dh_python3 dh_python3:161: version: 5.20211022.1
D: dh_python3 dh_python3:162: argv: ['/usr/bin/dh_python3']
D: dh_python3 dh_python3:163: options: {'guess_deps': True, 'skip_private': False, 'verbose': False, 'arch': None, 'package': None, 'no_package': None, 'compile_all': False, 'vrange': None, 'regexpr': None, 'accept_upstream_versions': False, 'depends': None, 'depends_section': None, 'recommends': None, 'recommends_section': None, 'suggests': None, 'suggests_section': None, 'requires': None, 'shebang': None, 'ignore_shebangs': False, 'clean_dbg_pkg': True, 'no_ext_rename': False, 'no_shebang_rewrite': False, 'O': None}
D: dh_python3 dh_python3:164: args: []
D: dh_python3 dh_python3:165: supported Python versions: 3.9 (default=3.9)
D: dh_python3 debhelper:150: skipping package libgetdata-doc (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libgetdata-dev (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libgetdata8 (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libgetdata++7 (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libfgetdata6 (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libf95getdata7 (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libgetdata-tools (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:150: skipping package libgetdata-perl (missing ${python3:Depends} in Depends)
D: dh_python3 debhelper:157: source=libgetdata, binary packages=['python3-pygetdata']
D: dh_python3 dh_python3:183: processing package python3-pygetdata...
D: dh_python3 fs:49: moving files from debian/python3-pygetdata/usr/lib/python3.9/site-packages to debian/python3-pygetdata/usr/lib/python3/dist-packages/
D: dh_python3 fs:265: package python3-pygetdata details = {'requires.txt': set(), 'egg-info': set(), 'dist-info': set(), 'nsp.txt': set(), 'shebangs': set(), 'public_vers': {Version('3')}, 'private_dirs': {}, 'compile': False, 'ext_vers': {Version('3.9')}, 'ext_no_version': set()}
D: dh_python3 depends:118: generating dependencies for package python3-pygetdata
D: dh_python3 depends:282: D={'python3 (>= 3.9~)', 'python3 (<< 3.10)'}; R=[]; S=[]; E=[], B=[]; RT=[]
   dh_lintian
	install -d debian/libgetdata-dev/usr/share/lintian/overrides
	install -p -m0644 debian/libgetdata-dev.lintian-overrides debian/libgetdata-dev/usr/share/lintian/overrides/libgetdata-dev
	install -d debian/libgetdata-perl/usr/share/lintian/overrides
	install -p -m0644 debian/libgetdata-perl.lintian-overrides debian/libgetdata-perl/usr/share/lintian/overrides/libgetdata-perl
   dh_perl
	(grep -a -s -v perl:Depends debian/libgetdata-perl.substvars; echo perl:Depends=perl) > debian/libgetdata-perl.substvars.new
	mv debian/libgetdata-perl.substvars.new debian/libgetdata-perl.substvars
	(grep -a -s -v perl:Depends debian/libgetdata-perl.substvars; echo "perl:Depends=perl, perlapi-5.32.1") > debian/libgetdata-perl.substvars.new
	mv debian/libgetdata-perl.substvars.new debian/libgetdata-perl.substvars
	rmdir --ignore-fail-on-non-empty --parents debian/libgetdata-perl/usr/lib/x86_64-linux-gnu/perl5/5.32
   dh_link
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_constant.3
	ln -s gd_put_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_constant.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_vector_list.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_vector_list.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmfields_by_type.3
	ln -s gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmfields_by_type.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_carray.3
	ln -s gd_get_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_carray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nfields_by_type.3
	ln -s gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfields_by_type.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_mplex.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_mplex.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_crecip.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_crecip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sbit.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sbit.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_include_ns.3
	ln -s gd_include.3 debian/libgetdata-doc/usr/share/man/man3/gd_include_ns.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_recip.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_recip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray.3
	ln -s gd_get_sarray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_window.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_window.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_const.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_const.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_alias.3
	ln -s gd_add_alias.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_alias.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_crecip.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_crecip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mstrings.3
	ln -s gd_strings.3 debian/libgetdata-doc/usr/share/man/man3/gd_mstrings.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_clincom.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_clincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_field_list_by_type.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_field_list_by_type.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_discard.3
	ln -s gd_close.3 debian/libgetdata-doc/usr/share/man/man3/gd_discard.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_raw.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_raw.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_sbit.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_sbit.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_framenum.3
	ln -s gd_framenum_subset.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_cpolynom.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_cpolynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_phase.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_phase.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmvectore.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmvectore.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_mplex.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_mplex.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_msarrays.3
	ln -s gd_sarrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_msarrays.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_const.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_const.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_error_string.3
	ln -s gd_error.3 debian/libgetdata-doc/usr/share/man/man3/gd_error_string.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_linterp.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_linterp.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_lincom.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_lincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_clincom.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_clincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nfields.3
	ln -s gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfields.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_spec.3
	ln -s gd_add_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_spec.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_window.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_window.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_string.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_string.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sindir.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sindir.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray.3
	ln -s gd_put_sarray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_multiply.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_multiply.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_linterp.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_linterp.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd.3
	ln -s gd_add.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_raw_close.3
	ln -s gd_flush.3 debian/libgetdata-doc/usr/share/man/man3/gd_raw_close.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_divide.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_divide.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_phase.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_phase.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_cpolynom.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_cpolynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_lincom.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_lincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_raw.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_raw.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_divide.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_divide.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_divide.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_divide.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_crecip.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_crecip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_cbopen.3
	ln -s gd_open.3 debian/libgetdata-doc/usr/share/man/man3/gd_cbopen.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_phase.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_phase.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_window.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_window.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nvectors.3
	ln -s gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nvectors.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_const.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_const.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmfields.3
	ln -s gd_nentries.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmfields.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset64.3
	ln -s gd_frameoffset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset64.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_carray.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_carray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_clincom.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_clincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_linterp.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_linterp.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_carray_len.3
	ln -s gd_array_len.3 debian/libgetdata-doc/usr/share/man/man3/gd_carray_len.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_include_affix.3
	ln -s gd_include.3 debian/libgetdata-doc/usr/share/man/man3/gd_include_affix.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list_by_type.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list_by_type.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_carray.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_carray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_lincom.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_lincom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mconstants.3
	ln -s gd_constants.3 debian/libgetdata-doc/usr/share/man/man3/gd_mconstants.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_malter_spec.3
	ln -s gd_alter_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_malter_spec.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sarray.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sarray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_recip.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_recip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_polynom.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_polynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_multiply.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_multiply.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_cpolynom.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_cpolynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_recip.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_recip.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_string.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_string.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_polynom.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_polynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_sync.3
	ln -s gd_flush.3 debian/libgetdata-doc/usr/share/man/man3/gd_sync.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_field_list.3
	ln -s gd_entry_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_field_list.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_polynom.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_polynom.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_multiply.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_multiply.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_carray.3
	ln -s gd_put_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_carray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_constant.3
	ln -s gd_get_carray_slice.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_constant.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_mplex.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_mplex.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_indir.3
	ln -s gd_add_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_indir.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_unhide.3
	ln -s gd_hide.3 debian/libgetdata-doc/usr/share/man/man3/gd_unhide.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_sbit.3
	ln -s gd_madd_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_sbit.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_carray.3
	ln -s gd_alter_bit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_carray.3
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mcarrays.3
	ln -s gd_carrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_mcarrays.3
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.so
	ln -s libgetdatazzip-0.10.0.so debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatazzip.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.so
	ln -s libgetdatabzip2-0.10.0.so debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatabzip2.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.so
	ln -s libgetdataflac-0.10.0.so debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdataflac.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.so
	ln -s libgetdatagzip-0.10.0.so debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatagzip.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.so
	ln -s libgetdatalzma-0.10.0.so debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/getdata/libgetdatalzma.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so
	ln -s libgetdata\+\+.so.7.0.0 debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libgetdata.so
	ln -s libgetdata.so.8.0.0 debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libgetdata.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libf95getdata.so
	ln -s libf95getdata.so.7.0.0 debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libf95getdata.so
	rm -f debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libfgetdata.so
	ln -s libfgetdata.so.6.0.0 debian/libgetdata-dev/usr/lib/x86_64-linux-gnu/libfgetdata.so
	rm -f debian/libgetdata8/usr/lib/x86_64-linux-gnu/libgetdata.so.8
	ln -s libgetdata.so.8.0.0 debian/libgetdata8/usr/lib/x86_64-linux-gnu/libgetdata.so.8
	rm -f debian/libgetdata\+\+7/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so.7
	ln -s libgetdata\+\+.so.7.0.0 debian/libgetdata\+\+7/usr/lib/x86_64-linux-gnu/libgetdata\+\+.so.7
	rm -f debian/libfgetdata6/usr/lib/x86_64-linux-gnu/libfgetdata.so.6
	ln -s libfgetdata.so.6.0.0 debian/libfgetdata6/usr/lib/x86_64-linux-gnu/libfgetdata.so.6
	rm -f debian/libf95getdata7/usr/lib/x86_64-linux-gnu/libf95getdata.so.7
	ln -s libf95getdata.so.7.0.0 debian/libf95getdata7/usr/lib/x86_64-linux-gnu/libf95getdata.so.7
   dh_strip_nondeterminism
   dh_compress
	cd debian/libgetdata-doc
	cd debian/libgetdata++7
	cd debian/libgetdata-tools
	chmod a-x usr/share/doc/libgetdata\+\+7/changelog usr/share/doc/libgetdata\+\+7/changelog.Debian
	gzip -9nf usr/share/doc/libgetdata\+\+7/changelog usr/share/doc/libgetdata\+\+7/changelog.Debian
	chmod a-x usr/share/doc/libgetdata-tools/changelog usr/share/doc/libgetdata-tools/changelog.Debian usr/share/man/man1/checkdirfile.1 usr/share/man/man1/dirfile2ascii.1
	gzip -9nf usr/share/doc/libgetdata-tools/changelog usr/share/doc/libgetdata-tools/changelog.Debian usr/share/man/man1/checkdirfile.1 usr/share/man/man1/dirfile2ascii.1
	chmod a-x usr/share/doc/libgetdata-dev/NEWS usr/share/doc/libgetdata-dev/README usr/share/doc/libgetdata-doc/changelog usr/share/doc/libgetdata-doc/changelog.Debian usr/share/doc/libgetdata/README.cxx usr/share/doc/libgetdata/README.f77 usr/share/doc/libgetdata/README.f95 usr/share/doc/libgetdata/unclean_database_recovery.txt usr/share/man/man3/GD_SIZE.3 usr/share/man/man3/GetData.3pm usr/share/man/man3/gd_add.3 usr/share/man/man3/gd_add_alias.3 usr/share/man/man3/gd_add_bit.3 usr/share/man/man3/gd_add_spec.3 usr/share/man/man3/gd_alias_target.3 usr/share/man/man3/gd_aliases.3 usr/share/man/man3/gd_alloc_funcs.3 usr/share/man/man3/gd_alter_affixes.3 usr/share/man/man3/gd_alter_bit.3 usr/share/man/man3/gd_alter_encoding.3 usr/share/man/man3/gd_alter_endianness.3 usr/share/man/man3/gd_alter_entry.3 usr/share/man/man3/gd_alter_frameoffset.3 usr/share/man/man3/gd_alter_protection.3 usr/share/man/man3/gd_alter_spec.3 usr/share/man/man3/gd_array_len.3 usr/share/man/man3/gd_bof.3 usr/share/man/man3/gd_bof64.3 usr/share/man/man3/gd_carrays.3 usr/share/man/man3/gd_close.3 usr/share/man/man3/gd_constants.3 usr/share/man/man3/gd_delete.3 usr/share/man/man3/gd_desync.3 usr/share/man/man3/gd_dirfile_standards.3 usr/share/man/man3/gd_dirfilename.3 usr/share/man/man3/gd_encoding.3 usr/share/man/man3/gd_encoding_support.3 usr/share/man/man3/gd_endianness.3 usr/share/man/man3/gd_entry.3 usr/share/man/man3/gd_entry_list.3 usr/share/man/man3/gd_entry_type.3 usr/share/man/man3/gd_eof.3 usr/share/man/man3/gd_eof64.3 usr/share/man/man3/gd_error.3 usr/share/man/man3/gd_error_count.3 usr/share/man/man3/gd_flags.3 usr/share/man/man3/gd_flush.3 usr/share/man/man3/gd_fragment_affixes.3 usr/share/man/man3/gd_fragment_index.3 usr/share/man/man3/gd_fragment_namespace.3 usr/share/man/man3/gd_fragmentname.3 usr/share/man/man3/gd_framenum_subset.3 usr/share/man/man3/gd_framenum_subset64.3 usr/share/man/man3/gd_frameoffset.3 usr/share/man/man3/gd_frameoffset64.3 usr/share/man/man3/gd_free_entry_strings.3 usr/share/man/man3/gd_get_carray_slice.3 usr/share/man/man3/gd_get_sarray_slice.3 usr/share/man/man3/gd_get_string.3 usr/share/man/man3/gd_getdata.3 usr/share/man/man3/gd_getdata64.3 usr/share/man/man3/gd_hidden.3 usr/share/man/man3/gd_hide.3 usr/share/man/man3/gd_include.3 usr/share/man/man3/gd_invalid_dirfile.3 usr/share/man/man3/gd_linterp_tablename.3 usr/share/man/man3/gd_madd_bit.3 usr/share/man/man3/gd_match_entries.3 usr/share/man/man3/gd_metaflush.3 usr/share/man/man3/gd_move.3 usr/share/man/man3/gd_mplex_lookback.3 usr/share/man/man3/gd_naliases.3 usr/share/man/man3/gd_native_type.3 usr/share/man/man3/gd_nentries.3 usr/share/man/man3/gd_nfragments.3 usr/share/man/man3/gd_nframes.3 usr/share/man/man3/gd_nframes64.3 usr/share/man/man3/gd_open.3 usr/share/man/man3/gd_parent_fragment.3 usr/share/man/man3/gd_parser_callback.3 usr/share/man/man3/gd_protection.3 usr/share/man/man3/gd_put_carray_slice.3 usr/share/man/man3/gd_put_sarray_slice.3 usr/share/man/man3/gd_put_string.3 usr/share/man/man3/gd_putdata.3 usr/share/man/man3/gd_putdata64.3 usr/share/man/man3/gd_raw_filename.3 usr/share/man/man3/gd_reference.3 usr/share/man/man3/gd_rename.3 usr/share/man/man3/gd_rewrite_fragment.3 usr/share/man/man3/gd_sarrays.3 usr/share/man/man3/gd_seek.3 usr/share/man/man3/gd_seek64.3 usr/share/man/man3/gd_spf.3 usr/share/man/man3/gd_strings.3 usr/share/man/man3/gd_strtok.3 usr/share/man/man3/gd_tell.3 usr/share/man/man3/gd_tell64.3 usr/share/man/man3/gd_uninclude.3 usr/share/man/man3/gd_validate.3 usr/share/man/man3/gd_verbose_prefix.3 usr/share/man/man5/dirfile-encoding.5 usr/share/man/man5/dirfile-format.5 usr/share/man/man5/dirfile.5
	gzip -9nf usr/share/doc/libgetdata-dev/NEWS usr/share/doc/libgetdata-dev/README usr/share/doc/libgetdata-doc/changelog usr/share/doc/libgetdata-doc/changelog.Debian usr/share/doc/libgetdata/README.cxx usr/share/doc/libgetdata/README.f77 usr/share/doc/libgetdata/README.f95 usr/share/doc/libgetdata/unclean_database_recovery.txt usr/share/man/man3/GD_SIZE.3 usr/share/man/man3/GetData.3pm usr/share/man/man3/gd_add.3 usr/share/man/man3/gd_add_alias.3 usr/share/man/man3/gd_add_bit.3 usr/share/man/man3/gd_add_spec.3 usr/share/man/man3/gd_alias_target.3 usr/share/man/man3/gd_aliases.3 usr/share/man/man3/gd_alloc_funcs.3 usr/share/man/man3/gd_alter_affixes.3 usr/share/man/man3/gd_alter_bit.3 usr/share/man/man3/gd_alter_encoding.3 usr/share/man/man3/gd_alter_endianness.3 usr/share/man/man3/gd_alter_entry.3 usr/share/man/man3/gd_alter_frameoffset.3 usr/share/man/man3/gd_alter_protection.3 usr/share/man/man3/gd_alter_spec.3 usr/share/man/man3/gd_array_len.3 usr/share/man/man3/gd_bof.3 usr/share/man/man3/gd_bof64.3 usr/share/man/man3/gd_carrays.3 usr/share/man/man3/gd_close.3 usr/share/man/man3/gd_constants.3 usr/share/man/man3/gd_delete.3 usr/share/man/man3/gd_desync.3 usr/share/man/man3/gd_dirfile_standards.3 usr/share/man/man3/gd_dirfilename.3 usr/share/man/man3/gd_encoding.3 usr/share/man/man3/gd_encoding_support.3 usr/share/man/man3/gd_endianness.3 usr/share/man/man3/gd_entry.3 usr/share/man/man3/gd_entry_list.3 usr/share/man/man3/gd_entry_type.3 usr/share/man/man3/gd_eof.3 usr/share/man/man3/gd_eof64.3 usr/share/man/man3/gd_error.3 usr/share/man/man3/gd_error_count.3 usr/share/man/man3/gd_flags.3 usr/share/man/man3/gd_flush.3 usr/share/man/man3/gd_fragment_affixes.3 usr/share/man/man3/gd_fragment_index.3 usr/share/man/man3/gd_fragment_namespace.3 usr/share/man/man3/gd_fragmentname.3 usr/share/man/man3/gd_framenum_subset.3 usr/share/man/man3/gd_framenum_subset64.3 usr/share/man/man3/gd_frameoffset.3 usr/share/man/man3/gd_frameoffset64.3 usr/share/man/man3/gd_free_entry_strings.3 usr/share/man/man3/gd_get_carray_slice.3 usr/share/man/man3/gd_get_sarray_slice.3 usr/share/man/man3/gd_get_string.3 usr/share/man/man3/gd_getdata.3 usr/share/man/man3/gd_getdata64.3 usr/share/man/man3/gd_hidden.3 usr/share/man/man3/gd_hide.3 usr/share/man/man3/gd_include.3 usr/share/man/man3/gd_invalid_dirfile.3 usr/share/man/man3/gd_linterp_tablename.3 usr/share/man/man3/gd_madd_bit.3 usr/share/man/man3/gd_match_entries.3 usr/share/man/man3/gd_metaflush.3 usr/share/man/man3/gd_move.3 usr/share/man/man3/gd_mplex_lookback.3 usr/share/man/man3/gd_naliases.3 usr/share/man/man3/gd_native_type.3 usr/share/man/man3/gd_nentries.3 usr/share/man/man3/gd_nfragments.3 usr/share/man/man3/gd_nframes.3 usr/share/man/man3/gd_nframes64.3 usr/share/man/man3/gd_open.3 usr/share/man/man3/gd_parent_fragment.3 usr/share/man/man3/gd_parser_callback.3 usr/share/man/man3/gd_protection.3 usr/share/man/man3/gd_put_carray_slice.3 usr/share/man/man3/gd_put_sarray_slice.3 usr/share/man/man3/gd_put_string.3 usr/share/man/man3/gd_putdata.3 usr/share/man/man3/gd_putdata64.3 usr/share/man/man3/gd_raw_filename.3 usr/share/man/man3/gd_reference.3 usr/share/man/man3/gd_rename.3 usr/share/man/man3/gd_rewrite_fragment.3 usr/share/man/man3/gd_sarrays.3 usr/share/man/man3/gd_seek.3 usr/share/man/man3/gd_seek64.3 usr/share/man/man3/gd_spf.3 usr/share/man/man3/gd_strings.3 usr/share/man/man3/gd_strtok.3 usr/share/man/man3/gd_tell.3 usr/share/man/man3/gd_tell64.3 usr/share/man/man3/gd_uninclude.3 usr/share/man/man3/gd_validate.3 usr/share/man/man3/gd_verbose_prefix.3 usr/share/man/man5/dirfile-encoding.5 usr/share/man/man5/dirfile-format.5 usr/share/man/man5/dirfile.5
	cd '/<<PKGBUILDDIR>>'
	cd debian/libfgetdata6
	cd '/<<PKGBUILDDIR>>'
	chmod a-x usr/share/doc/libfgetdata6/changelog usr/share/doc/libfgetdata6/changelog.Debian
	gzip -9nf usr/share/doc/libfgetdata6/changelog usr/share/doc/libfgetdata6/changelog.Debian
	cd debian/python3-pygetdata
	chmod a-x usr/share/doc/python3-pygetdata/changelog usr/share/doc/python3-pygetdata/changelog.Debian
	gzip -9nf usr/share/doc/python3-pygetdata/changelog usr/share/doc/python3-pygetdata/changelog.Debian
	cd '/<<PKGBUILDDIR>>'
	cd '/<<PKGBUILDDIR>>'
	cd debian/libf95getdata7
	cd debian/libgetdata-perl
	chmod a-x usr/share/doc/libf95getdata7/changelog usr/share/doc/libf95getdata7/changelog.Debian
	gzip -9nf usr/share/doc/libf95getdata7/changelog usr/share/doc/libf95getdata7/changelog.Debian
	chmod a-x usr/share/doc/libgetdata-perl/changelog usr/share/doc/libgetdata-perl/changelog.Debian
	gzip -9nf usr/share/doc/libgetdata-perl/changelog usr/share/doc/libgetdata-perl/changelog.Debian
	cd '/<<PKGBUILDDIR>>'
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_multiply.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_multiply.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_multiply.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmvectore.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmvectore.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nmvectore.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sindir.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sindir.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_sindir.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_recip.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_recip.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_recip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset64.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset64.3.gz
	ln -s gd_frameoffset64.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_frameoffset64.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_alias.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_alias.3.gz
	ln -s gd_add_alias.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_alias.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sbit.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sbit.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_sbit.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_indir.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_indir.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_indir.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmfields_by_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmfields_by_type.3.gz
	ln -s gd_nentries.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nmfields_by_type.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_window.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_window.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_window.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_include_affix.3 debian/libgetdata-doc/usr/share/man/man3/gd_include_affix.3.gz
	ln -s gd_include.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_include_affix.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mconstants.3 debian/libgetdata-doc/usr/share/man/man3/gd_mconstants.3.gz
	ln -s gd_constants.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_mconstants.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_msarrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_msarrays.3.gz
	ln -s gd_sarrays.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_msarrays.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_sync.3 debian/libgetdata-doc/usr/share/man/man3/gd_sync.3.gz
	ln -s gd_flush.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_sync.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_lincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_lincom.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_lincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_multiply.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_multiply.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_multiply.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_framenum.3 debian/libgetdata-doc/usr/share/man/man3/gd_framenum.3.gz
	ln -s gd_framenum_subset.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_framenum.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_mplex.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_mplex.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_mplex.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_string.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_string.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_phase.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_phase.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_phase.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_crecip.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_crecip.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_crecip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray.3.gz
	ln -s gd_put_sarray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_put_sarray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_linterp.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_linterp.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_linterp.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_lincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_lincom.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_lincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list_by_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list_by_type.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list_by_type.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray.3.gz
	ln -s gd_get_sarray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_get_sarray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_phase.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_phase.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_phase.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_discard.3 debian/libgetdata-doc/usr/share/man/man3/gd_discard.3.gz
	ln -s gd_close.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_discard.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_const.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_const.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_const.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_crecip.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_crecip.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_crecip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_carray.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_carray.3.gz
	ln -s gd_get_carray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_get_carray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_const.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_const.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_const.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_divide.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_divide.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_divide.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_cpolynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_cpolynom.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_cpolynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_spec.3.gz
	ln -s gd_add_spec.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_spec.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_malter_spec.3 debian/libgetdata-doc/usr/share/man/man3/gd_malter_spec.3.gz
	ln -s gd_alter_spec.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_malter_spec.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_crecip.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_crecip.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_crecip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_sbit.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_sbit.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_sbit.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mstrings.3 debian/libgetdata-doc/usr/share/man/man3/gd_mstrings.3.gz
	ln -s gd_strings.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_mstrings.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_field_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_field_list.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_field_list.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_clincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_clincom.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_clincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_window.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_window.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_window.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_linterp.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_linterp.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_linterp.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nmfields.3 debian/libgetdata-doc/usr/share/man/man3/gd_nmfields.3.gz
	ln -s gd_nentries.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nmfields.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_linterp.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_linterp.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_linterp.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_raw.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_raw.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_raw.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_vector_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_vector_list.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_vector_list.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_divide.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_divide.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_divide.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_mplex.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_mplex.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_mplex.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_string.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_string.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_polynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_polynom.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_polynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_mplex.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_mplex.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_mplex.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nfields.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfields.3.gz
	ln -s gd_nentries.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nfields.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_multiply.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_multiply.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_multiply.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nvectors.3 debian/libgetdata-doc/usr/share/man/man3/gd_nvectors.3.gz
	ln -s gd_nentries.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nvectors.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_sbit.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_sbit.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_sbit.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_polynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_polynom.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_polynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_carray.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_carray.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_carray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_error_string.3 debian/libgetdata-doc/usr/share/man/man3/gd_error_string.3.gz
	ln -s gd_error.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_error_string.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd.3.gz
	ln -s gd_add.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_cbopen.3 debian/libgetdata-doc/usr/share/man/man3/gd_cbopen.3.gz
	ln -s gd_open.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_cbopen.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_unhide.3 debian/libgetdata-doc/usr/share/man/man3/gd_unhide.3.gz
	ln -s gd_hide.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_unhide.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list.3 debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_mfield_list.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_sarray.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_sarray.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_sarray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_polynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_polynom.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_polynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_raw.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_raw.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_raw.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_carray_len.3 debian/libgetdata-doc/usr/share/man/man3/gd_carray_len.3.gz
	ln -s gd_array_len.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_carray_len.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_lincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_lincom.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_lincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_phase.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_phase.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_phase.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_recip.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_recip.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_recip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_field_list_by_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_field_list_by_type.3.gz
	ln -s gd_entry_list.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_field_list_by_type.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_carray.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_carray.3.gz
	ln -s gd_put_carray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_put_carray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_cpolynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_cpolynom.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_cpolynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_clincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_clincom.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_clincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_carray.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_carray.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_carray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_mcarrays.3 debian/libgetdata-doc/usr/share/man/man3/gd_mcarrays.3.gz
	ln -s gd_carrays.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_mcarrays.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_get_constant.3 debian/libgetdata-doc/usr/share/man/man3/gd_get_constant.3.gz
	ln -s gd_get_carray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_get_constant.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_clincom.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_clincom.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_clincom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_put_constant.3 debian/libgetdata-doc/usr/share/man/man3/gd_put_constant.3.gz
	ln -s gd_put_carray_slice.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_put_constant.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_const.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_const.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_const.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_window.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_window.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_window.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_raw_close.3 debian/libgetdata-doc/usr/share/man/man3/gd_raw_close.3.gz
	ln -s gd_flush.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_raw_close.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_cpolynom.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_cpolynom.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_cpolynom.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_add_divide.3 debian/libgetdata-doc/usr/share/man/man3/gd_add_divide.3.gz
	ln -s gd_add_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_add_divide.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_madd_recip.3 debian/libgetdata-doc/usr/share/man/man3/gd_madd_recip.3.gz
	ln -s gd_madd_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_madd_recip.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_alter_carray.3 debian/libgetdata-doc/usr/share/man/man3/gd_alter_carray.3.gz
	ln -s gd_alter_bit.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_alter_carray.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_nfields_by_type.3 debian/libgetdata-doc/usr/share/man/man3/gd_nfields_by_type.3.gz
	ln -s gd_nentries.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_nfields_by_type.3.gz
	rm -f debian/libgetdata-doc/usr/share/man/man3/gd_include_ns.3 debian/libgetdata-doc/usr/share/man/man3/gd_include_ns.3.gz
	ln -s gd_include.3.gz debian/libgetdata-doc/usr/share/man/man3/gd_include_ns.3.gz
	cd debian/libgetdata-dev
	cd '/<<PKGBUILDDIR>>'
	cd '/<<PKGBUILDDIR>>'
	chmod a-x usr/share/doc/libgetdata-dev/changelog usr/share/doc/libgetdata-dev/changelog.Debian
	gzip -9nf usr/share/doc/libgetdata-dev/changelog usr/share/doc/libgetdata-dev/changelog.Debian
	cd '/<<PKGBUILDDIR>>'
	cd debian/libgetdata8
	chmod a-x usr/share/doc/libgetdata8/changelog usr/share/doc/libgetdata8/changelog.Debian
	gzip -9nf usr/share/doc/libgetdata8/changelog usr/share/doc/libgetdata8/changelog.Debian
	cd '/<<PKGBUILDDIR>>'
   dh_fixperms
	find debian/libgetdata-doc -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libgetdata++7 -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libgetdata-tools -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libgetdata\+\+7 ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata-tools ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata\+\+7/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata++7/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-doc ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata-tools/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata-tools/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata\+\+7/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata-tools/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata-tools/usr/share/man -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata\+\+7 -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-doc/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata-doc/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-tools -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata\+\+7/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/libgetdata-doc/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libfgetdata6 -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libgetdata-tools/usr/bin -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod a+x
	find debian/libgetdata-doc/usr/share/man -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libfgetdata6 ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/python3-pygetdata -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libfgetdata6/usr/share/doc -type f -a -true -a ! -regex 'debian/libfgetdata6/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/python3-pygetdata ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata-doc -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libfgetdata6/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/python3-pygetdata/usr/share/doc -type f -a -true -a ! -regex 'debian/python3-pygetdata/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-dev -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libfgetdata6 -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/python3-pygetdata/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libfgetdata6/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/python3-pygetdata -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-dev ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libf95getdata7 -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/python3-pygetdata/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/libgetdata-dev/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata-dev/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-perl -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libf95getdata7 ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata-dev/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata-perl ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libf95getdata7/usr/share/doc -type f -a -true -a ! -regex 'debian/libf95getdata7/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-perl/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata-perl/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-dev/usr/include debian/libgetdata-dev/usr/share/lintian/overrides -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libf95getdata7/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata-perl/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata-dev -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libf95getdata7 -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-perl/usr/share/lintian/overrides -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata-perl/usr/lib/x86_64-linux-gnu/perl5/5.32 -type f -perm -5 -name '*.pm' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod a-X
	find debian/libgetdata-dev/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/libf95getdata7/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/libgetdata8 -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/libgetdata-perl -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata8 ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/libgetdata-perl/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
	find debian/libgetdata8/usr/share/doc -type f -a -true -a ! -regex 'debian/libgetdata8/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata8/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/libgetdata8 -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/libgetdata8/usr/lib -type f -name '*.ali' -a -true -a -true -print0 2>/dev/null | xargs -0r chmod uga-w
   dh_missing
dh_missing: warning: usr/lib/python3.9/site-packages/pygetdata.h exists in debian/tmp but is not installed to anywhere 
dh_missing: error: missing files, aborting
	The following debhelper tools have reported what they installed (with files per package)
	 * dh_fortran_mod: libgetdata-dev (1)
	 * dh_install: libf95getdata7 (2), libfgetdata6 (2), libgetdata++7 (2), libgetdata-dev (27), libgetdata-doc (190), libgetdata-perl (1), libgetdata-tools (4), libgetdata8 (2), python3-pygetdata (1)
	 * dh_installdocs: libf95getdata7 (0), libfgetdata6 (0), libgetdata++7 (0), libgetdata-dev (0), libgetdata-doc (3), libgetdata-perl (0), libgetdata-tools (0), libgetdata8 (0), python3-pygetdata (0)
	 * dh_installman: libf95getdata7 (0), libfgetdata6 (0), libgetdata++7 (0), libgetdata-dev (0), libgetdata-doc (0), libgetdata-perl (0), libgetdata-tools (0), libgetdata8 (0), python3-pygetdata (0)
	If the missing files are installed by another tool, please file a bug against it.
	When filing the report, if the tool is not part of debhelper itself, please reference the
	"Logging helpers and dh_missing" section from the "PROGRAMMING" guide for debhelper (10.6.3+).
	  (in the debhelper package: /usr/share/doc/debhelper/PROGRAMMING.gz)
	Be sure to test with dpkg-buildpackage -A/-B as the results may vary when only a subset is built
	If the omission is intentional or no other helper can take care of this consider adding the
	paths to debian/not-installed.
make: *** [debian/rules:28: binary] Error 25
dpkg-buildpackage: error: fakeroot debian/rules binary subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T22:32:33Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 89416
Build-Time: 116
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 19
Job: libgetdata_0.10.0-11
Machine Architecture: amd64
Package: libgetdata
Package-Time: 156
Source-Version: 0.10.0-11
Space: 89416
Status: attempted
Version: 0.10.0-11
--------------------------------------------------------------------------------
Finished at 2021-10-26T22:32:33Z
Build needed 00:02:36, 89416k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 157.535542782s
